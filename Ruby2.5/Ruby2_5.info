This is Ruby2_5.info, produced by makeinfo version 6.5 from
Ruby2_5.texi.

Copyright (C) 2018
wlharvey4
All Rights Reserved.

   The Ruby2.5 Information and Documentation program is copyright (C)
2018 by wlharvey4.  It is published under the conditions of the GNU
General Public License, version 3.


   This is Edition 0.1a of 'Ruby 2.5 Information and Documentation'.


File: Ruby2_5.info,  Node: Top,  Next: Preface,  Up: (dir)

General Introduction
********************

This file documents Ruby 2.5, <https://www.ruby-lang.org>

   Copyright (C) 2018
wlharvey4
All Rights Reserved.

   The Ruby2.5 Information and Documentation program is copyright (C)
2018 by wlharvey4.  It is published under the conditions of the GNU
General Public License, version 3.


   This is Edition 0.1a of 'Ruby 2.5 Information and Documentation'.

* Menu:

* Preface::
* Introduction::
* Documentation::
* First appendix::
* Code Chunk Summaries::
* Bibliography::
* Concept Index::

 -- The Detailed Node Listing --

Preface

* Audience::
* Overview::
* Conventions::
* Acknowledgements::

Documentation

* Installing Ruby::
* Getting Started::
* Manuals::
* Reference Documentation::
* Editors and IDEs::
* Further Reading::

Installation Methods

* Package Management Systems::
* Installers::
* Managers::
* Building From Source::

Package Management Systems

* Homebrew (OS X)::

Installers

* ruby-build::
* ruby-install::

Managers

* chruby::
* rbenv::
* RVM (``Ruby Version Manager'')::
* uru::

Building From Source

* Releases Page::
* Branches Page::
* Issue Tracking::
* Ruby Core::

Getting Started

* Try Ruby!::
* Official FAQ::
* Ruby Koans::
* Why’s (Poignant) Guide to Ruby::
* Ruby in Twenty Minutes::
* Ruby from Other Languages::
* Learning Ruby::
* Ruby Essentials::
* Learn to Program::

Code Chunk Summaries

* File Definitions::
* Code Chunk Definitions::
* Code Chunk References::



File: Ruby2_5.info,  Node: Preface,  Next: Introduction,  Prev: Top,  Up: Top

Preface
*******

Text here.

* Menu:

* Audience::
* Overview::
* Conventions::
* Acknowledgements::


File: Ruby2_5.info,  Node: Audience,  Next: Overview,  Up: Preface

Intended Audience
=================

Text here.


File: Ruby2_5.info,  Node: Overview,  Next: Conventions,  Prev: Audience,  Up: Preface

What Is Covered
===============

Text and chapter by chapter description here.


File: Ruby2_5.info,  Node: Conventions,  Next: Acknowledgements,  Prev: Overview,  Up: Preface

Typographical Conventions
=========================

This Info file is written in an enhanced version of Texinfo
(http://www.gnu.org/software/texinfo/), the GNU documentation
formatting language.  A single Texinfo source file is used to produce
both the printed and online versions of a program's documentation.

   Examples you would type at the command-line are preceded by the
common shell primary and secondary prompts, '$' and '>'.  Input that
you type is shown 'like this'.  Output from the command is preceded by
the glyph "-|".  This typically represents the command's standard
output.  Error messages, and other output on the command's standard
error, are preceded by the glyph "error->".  For example:

     $ echo hi on stdout
     -| hi on stdout
     $ echo hello on stderr 1>&2
     error-> hello on stderr


File: Ruby2_5.info,  Node: Acknowledgements,  Prev: Conventions,  Up: Preface

Acknowledgements
================


File: Ruby2_5.info,  Node: Introduction,  Next: Documentation,  Prev: Preface,  Up: Top

1 Introduction
**************

Ruby is ...

   A dynamic, open source programming language with a focus on
simplicity and productivity.  It has an elegant syntax that is natural
to read and easy to write.


File: Ruby2_5.info,  Node: Documentation,  Next: First appendix,  Prev: Introduction,  Up: Top

2 Documentation
***************

Here you will find pointers to manuals, tutorials and references that
will come in handy when you feel like coding in Ruby.

* Menu:

* Installing Ruby::
* Getting Started::
* Manuals::
* Reference Documentation::
* Editors and IDEs::
* Further Reading::


File: Ruby2_5.info,  Node: Installing Ruby,  Next: Getting Started,  Up: Documentation

2.1 Installing Ruby
===================

Installation Methods
--------------------

There are several ways to install Ruby:

   * Package Manager: When you are on a UNIX-like operating system,
     using your system’s package manager is the easiest way of getting
     started.  However, the packaged Ruby version usually is not the
     newest one.
   * Installers: can be used to install a specific or multiple Ruby
     versions.  There is also an installer for Windows.
   * Managers help you to switch between multiple Ruby installations
     on your system.
   * Source: And finally, you can also build Ruby from source.

   The following overview lists available installation methods for
different needs and platforms.

* Menu:

* Package Management Systems::
* Installers::
* Managers::
* Building From Source::


File: Ruby2_5.info,  Node: Package Management Systems,  Next: Installers,  Up: Installing Ruby

2.1.1 Package Management Systems
--------------------------------

If you cannot compile your own Ruby, and you do not want to use a
third-party tool, you can use your system’s package manager to install
Ruby.

   Certain members in the Ruby community feel very strongly that you
should never use a package manager to install Ruby and that you should
use tools instead.  While the full list of pros and cons is outside of
the scope of this page, the most basic reason is that most package
managers have older versions of Ruby in their official repositories.
If you would like to use the newest Ruby, make sure you use the
correct package name, or use the tools described further below
instead.

* Menu:

* Homebrew (OS X)::


File: Ruby2_5.info,  Node: Homebrew (OS X),  Up: Package Management Systems

2.1.1.1 Homebrew (OS X)
.......................

Homebrew (http://brew.sh/)

   On macOS (High) Sierra and OS X El Capitan, Ruby 2.0 is included.

   Many people on OS X use Homebrew as a package manager.  It is
really easy to get a newer version of Ruby using Homebrew:

     $ brew install ruby

   This should install the latest Ruby version.


File: Ruby2_5.info,  Node: Installers,  Next: Managers,  Prev: Package Management Systems,  Up: Installing Ruby

2.1.2 Installers
----------------

If the version of Ruby provided by your system or package manager is
out of date, a newer one can be installed using a third-party
installer.  Some of them also allow you to install multiple versions
on the same system; associated managers can help to switch between the
different Rubies.  If you are planning to use RVM as a version manager
you do not need a separate installer, it comes with its own.

* Menu:

* ruby-build::
* ruby-install::


File: Ruby2_5.info,  Node: ruby-build,  Next: ruby-install,  Up: Installers

2.1.2.1 'ruby-build'
....................

'ruby-build' (https://github.com/rbenv/ruby-build#readme)

   'rbenv'
(https://www.ruby-lang.org/en/documentation/installation/#rbenv)

   'ruby-build' is a plugin for 'rbenv' (*note rbenv:: that allows you
to compile and install different versions of Ruby into arbitrary
directories.  'ruby-build' can also be used as a standalone program
without 'rbenv'.  It is available for OS X, Linux, and other UNIX-like
operating systems.


File: Ruby2_5.info,  Node: ruby-install,  Prev: ruby-build,  Up: Installers

2.1.2.2 'ruby-install'
......................

'ruby-install' version manager 'chruby' version switcher

   'ruby-install' (https://github.com/postmodern/ruby-install#readme)

   'chruby'
(https://www.ruby-lang.org/en/documentation/installation/#chruby)

   'ruby-install' allows you to compile and install different versions
of Ruby into arbitrary directories.  There is also a sibling, 'chruby'
(*note chruby::), which handles switching between Ruby versions.  It
is available for OS X, Linux, and other UNIX-like operating systems.


File: Ruby2_5.info,  Node: Managers,  Next: Building From Source,  Prev: Installers,  Up: Installing Ruby

2.1.3 Managers
--------------

Many Rubyists use Ruby managers to manage multiple Rubies.  They
confer various advantages but are not officially supported.  Their
respective communities are very helpful, however.

* Menu:

* chruby::
* rbenv::
* RVM (``Ruby Version Manager'')::
* uru::


File: Ruby2_5.info,  Node: chruby,  Next: rbenv,  Up: Managers

2.1.3.1 chruby
..............

'chruby' allows you to switch between multiple Rubies.  'chruby' can
manage Rubies installed by 'ruby-install' (*note ruby-install::) or
even built from source.


File: Ruby2_5.info,  Node: rbenv,  Next: RVM (``Ruby Version Manager''),  Prev: chruby,  Up: Managers

2.1.3.2 'rbenv'
...............

'rbenv' (https://github.com/rbenv/rbenv#readme)

   'ruby-build'
(https://www.ruby-lang.org/en/documentation/installation/#ruby-build)

   'rbenv' allows you to manage multiple installations of Ruby.  It
does not support installing Ruby, but there is a popular plugin named
'ruby-build' (*note ruby-build::) to install Ruby.  Both tools are
available for OS X, Linux, or other UNIX-like operating systems.


File: Ruby2_5.info,  Node: RVM (``Ruby Version Manager''),  Next: uru,  Prev: rbenv,  Up: Managers

2.1.3.3 RVM ("Ruby Version Manager")
....................................

RVM (http://rvm.io/)

   RVM allows you to install and manage multiple installations of Ruby
on your system.  It can also manage different gemsets.  It is
available for OS X, Linux, or other UNIX-like operating systems.


File: Ruby2_5.info,  Node: uru,  Prev: RVM (``Ruby Version Manager''),  Up: Managers

2.1.3.4 'uru'
.............

Uru (https://bitbucket.org/jonforums/uru)

   Uru is a lightweight, multi-platform command line tool that helps
you to use multiple Rubies on OS X, Linux, or Windows systems.


File: Ruby2_5.info,  Node: Building From Source,  Prev: Managers,  Up: Installing Ruby

2.1.4 Building From Source
--------------------------

Ruby 2.5.1 (https://www.ruby-lang.org/en/downloads/)

   Ruby Github (https://github.com/ruby/ruby)

   Of course, you can install Ruby from source.  Download and unpack a
tarball, then just do this:

     $ ./configure
     $ make
     $ sudo make install

   By default, this will install Ruby into '/usr/local'.  To change,
pass the '--prefix=DIR' option to the './configure' script.

   Using the third-party tools or package managers might be a better
idea, though, because the installed Ruby won’t be managed by any
tools.

   Installing from the source code is a great solution for when you
are comfortable enough with your platform and perhaps need specific
settings for your environment.  It’s also a good solution in the event
that there are no other premade packages for your platform.

* Menu:

* Releases Page::
* Branches Page::
* Issue Tracking::
* Ruby Core::


File: Ruby2_5.info,  Node: Releases Page,  Next: Branches Page,  Up: Building From Source

2.1.4.1 Releases Page
.....................

Releases Page (https://www.ruby-lang.org/en/downloads/releases/)

   For more information about specific releases, particularly older
releases or previews, see the Releases page.

   This page lists individual Ruby releases.

Ruby 2.5.1 Released
...................

ruby-2.1.5.tar.gz
(https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.1.tar.gz)

   Posted by naruse on 28 Mar 2018

   This release includes some bug fixes and some security fixes.

   * CVE-2017-17742: HTTP response splitting in WEBrick
   * CVE-2018-6914: Unintentional file and directory creation with
     directory traversal in tempfile and tmpdir
   * CVE-2018-8777: DoS by large request in WEBrick
   * CVE-2018-8778: Buffer under-read in String#unpack
   * CVE-2018-8779: Unintentional socket creation by poisoned NUL byte
     in UNIXServer and UNIXSocket
   * CVE-2018-8780: Unintentional directory traversal by poisoned NUL
     byte in Dir
   * Multiple vulnerabilities in RubyGems


File: Ruby2_5.info,  Node: Branches Page,  Next: Issue Tracking,  Prev: Releases Page,  Up: Building From Source

2.1.4.2 Branches Page
.....................

Branches Page (https://www.ruby-lang.org/en/downloads/branches/)

   Information about the current maintenance status of the various
Ruby branches can be found on the Branches page.

   This page lists the current maintenance status of the various Ruby
branches.  This is a preliminary list of Ruby branches and their
maintenance status.  The shown dates are inferred from the English
versions of release posts or EOL announcements.

   The Ruby branches or release series are categorized below into the
following phases:

   * normal maintenance (bug fix): Branch receives general bug fixes
     and security fixes.
   * security maintenance (security fix): Only security fixes are
     backported to this branch.
   * eol (end-of-life): Branch is not supported by the ruby-core team
     any longer and does not receive any fixes.  No further patch
     release will be released.
   * preview: Only previews or release candidates have been released
     for this branch so far.

Ruby 2.6
........

<https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.0-preview2.tar.gz>

ruby-2.6.0-preview2
status: preview
release date:

Ruby 2.5
........

<https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.1.tar.gz>

status: normal maintenance
release date: 2017-12-25

Ruby 2.4
........

<https://cache.ruby-lang.org/pub/ruby/2.4/ruby-2.4.4.tar.gz>

status: normal maintenance
release date: 2016-12-25

Ruby 2.3
........

<https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.7.tar.gz>

status: security maintenance
release date: 2015-12-25
EOL date: scheduled for 2019-03-31

Ruby 2.2
........

status: eol
release date: 2014-12-25
EOL date: 2018-03-31


File: Ruby2_5.info,  Node: Issue Tracking,  Next: Ruby Core,  Prev: Branches Page,  Up: Building From Source

2.1.4.3 Ruby Issue Tracking System
..................................

Bugs (https://bugs.ruby-lang.org)

How to report a bug
...................

How To Report
(https://bugs.ruby-lang.org/projects/ruby/wiki/HowToReport)

Ruby Trunk
..........

Ruby Trunk (https://bugs.ruby-lang.org/projects/ruby-trunk)

   All Issues
(https://bugs.ruby-lang.org/projects/ruby-trunk/issues?set_filter=1)


File: Ruby2_5.info,  Node: Ruby Core,  Prev: Issue Tracking,  Up: Building From Source

2.1.4.4 Ruby Core
.................

Ruby Core (https://www.ruby-lang.org/en/community/ruby-core/)

   Now is a fantastic time to follow Ruby’s development.  With the
increased attention Ruby has received in the past few years, there’s a
growing need for good talent to help enhance Ruby and document its
parts.  So, where do you start?

   The topics related to Ruby development covered here are:

   * *note Using Subversion to Track Ruby Development: subversion.
   * *note How to Use Git With the Main Ruby Repository: MainRubyRepo.
   * *note Improving Ruby: PatchByPatch.
   * Rules for Core Developers

Using Subversion to Track Ruby Development
..........................................

Getting the latest Ruby source code is a matter of an anonymous
checkout from the Subversion (http://subversion.apache.org/)
repository.  From your command line:

     $ svn co https://svn.ruby-lang.org/repos/ruby/trunk ruby

   The 'ruby' directory will now contain the latest source code for
the development version of Ruby ('ruby-trunk').  Currently patches
applied to the trunk are backported to the stable 2.5, 2.4, and 2.3
branches (see below).

   If you’d like to follow patching of Ruby 2.5, you should use the
ruby_2_5 branch when checking out:

     $ svn co https://svn.ruby-lang.org/repos/ruby/branches/ruby_2_5

   This will check out the respective development tree into a
'ruby_2_5' directory.  Developers working on the maintenance branches
are expected to migrate their changes to Ruby’s trunk, so often the
branches are very similar, with the exception of improvements made by
Matz and Nobu to the language itself.

   If you prefer, you may browse Ruby’s Subversion repository via the
web (https://svn.ruby-lang.org/cgi-bin/viewvc.cgi/).

How to Use Git With the Main Ruby Repository
............................................

Those who prefer to use Git over Subversion can find instructions with
the mirror on GitHub (https://github.com/ruby/ruby), both for those
with commit access and everybody else
(https://github.com/shyouhei/ruby/wiki/noncommitterhowto).

Improving Ruby, Patch by Patch
..............................

The core team maintains an issue tracker (https://bugs.ruby-lang.org/)
for submitting patches and bug reports to Matz and the gang.  These
reports also get submitted to the Ruby-Core mailing list
(https://www.ruby-lang.org/en/community/mailing-lists/) for
discussion, so you can be sure your request won’t go unnoticed.  You
can also send your patches straight to the mailing list.  Either way,
you are encouraged to take part in the discussion that ensues.

   Please look over the Patch Writer’s Guide
(https://www.ruby-lang.org/en/community/ruby-core/writing-patches/)
for some tips, straight from Matz, on how to get your patches
considered.

   Steps for Building a Patch
(https://www.ruby-lang.org/en/community/ruby-core/)


File: Ruby2_5.info,  Node: Getting Started,  Next: Manuals,  Prev: Installing Ruby,  Up: Documentation

2.2 Getting Started
===================

* Menu:

* Try Ruby!::
* Official FAQ::
* Ruby Koans::
* Why’s (Poignant) Guide to Ruby::
* Ruby in Twenty Minutes::
* Ruby from Other Languages::
* Learning Ruby::
* Ruby Essentials::
* Learn to Program::


File: Ruby2_5.info,  Node: Try Ruby!,  Next: Official FAQ,  Up: Getting Started

2.2.1 Try Ruby!
---------------

Try Ruby!  (https://ruby.github.io/TryRuby/)

   An interactive tutorial that lets you try out Ruby right in your
browser.  This 15-minute tutorial is aimed at beginners who want to
get a feeling of the language.


File: Ruby2_5.info,  Node: Official FAQ,  Next: Ruby Koans,  Prev: Try Ruby!,  Up: Getting Started

2.2.2 Official FAQ
------------------

The official frequently asked questions.

   FAQ (https://www.ruby-lang.org/en/documentation/faq/)


File: Ruby2_5.info,  Node: Ruby Koans,  Next: Why’s (Poignant) Guide to Ruby,  Prev: Official FAQ,  Up: Getting Started

2.2.3 Ruby Koans
----------------

Ruby Koans (http://rubykoans.com/)


File: Ruby2_5.info,  Node: Why’s (Poignant) Guide to Ruby,  Next: Ruby in Twenty Minutes,  Prev: Ruby Koans,  Up: Getting Started

2.2.4 Why’s (Poignant) Guide to Ruby
------------------------------------

Why's Guide to Ruby (http://mislav.uniqpath.com/poignant-guide/)

   An unconventional but interesting book that will teach you Ruby
through stories, wit, and comics.  Originally created by 'why the
lucky stiff', this guide remains a classic for Ruby learners.


File: Ruby2_5.info,  Node: Ruby in Twenty Minutes,  Next: Ruby from Other Languages,  Prev: Why’s (Poignant) Guide to Ruby,  Up: Getting Started

2.2.5 Ruby in Twenty Minutes
----------------------------

Ruby in Twenty Minutes
(https://www.ruby-lang.org/en/documentation/quickstart/)

   A nice tutorial covering the basics of Ruby.  From start to finish
it shouldn’t take you more than twenty minutes.


File: Ruby2_5.info,  Node: Ruby from Other Languages,  Next: Learning Ruby,  Prev: Ruby in Twenty Minutes,  Up: Getting Started

2.2.6 Ruby from Other Languages
-------------------------------

Ruby from Other Languages
(https://www.ruby-lang.org/en/documentation/ruby-from-other-languages/)


File: Ruby2_5.info,  Node: Learning Ruby,  Next: Ruby Essentials,  Prev: Ruby from Other Languages,  Up: Getting Started

2.2.7 Learning Ruby
-------------------

Learning Ruby (http://rubylearning.com/)

   A thorough collection of Ruby study notes for those who are new to
the language and in search of a solid introduction to Ruby’s concepts
and constructs.


File: Ruby2_5.info,  Node: Ruby Essentials,  Next: Learn to Program,  Prev: Learning Ruby,  Up: Getting Started

2.2.8 Ruby Essentials
---------------------

Ruby Essentials (http://www.techotopia.com/index.php/Ruby_Essentials)


File: Ruby2_5.info,  Node: Learn to Program,  Prev: Ruby Essentials,  Up: Getting Started

2.2.9 Learn to Program
----------------------

Learn to Program (http://pine.fm/LearnToProgram/)

   A wonderful little tutorial by Chris Pine for programming newbies.
If you don’t know how to program, start here.

   Learn Ruby the Hard Way (http://ruby.learncodethehardway.org/)


File: Ruby2_5.info,  Node: Manuals,  Next: Reference Documentation,  Prev: Getting Started,  Up: Documentation

2.3 Manuals
===========


File: Ruby2_5.info,  Node: Reference Documentation,  Next: Editors and IDEs,  Prev: Manuals,  Up: Documentation

2.4 Reference Documentation
===========================


File: Ruby2_5.info,  Node: Editors and IDEs,  Next: Further Reading,  Prev: Reference Documentation,  Up: Documentation

2.5 Editors and IDEs
====================


File: Ruby2_5.info,  Node: Further Reading,  Prev: Editors and IDEs,  Up: Documentation

2.6 Further Reading
===================


File: Ruby2_5.info,  Node: First appendix,  Next: Code Chunk Summaries,  Prev: Documentation,  Up: Top

Appendix A First Appendix Title
*******************************


File: Ruby2_5.info,  Node: Code Chunk Summaries,  Next: Bibliography,  Prev: First appendix,  Up: Top

Appendix B Code Chunk Summaries
*******************************

This major node presents alphabetical lists of all the file
definitions, the code chunk definitions, and the code chunk
references.

* Menu:

* File Definitions::
* Code Chunk Definitions::
* Code Chunk References::


File: Ruby2_5.info,  Node: File Definitions,  Next: Code Chunk Definitions,  Up: Code Chunk Summaries

B.1 Source File Definitions
===========================


File: Ruby2_5.info,  Node: Code Chunk Definitions,  Next: Code Chunk References,  Prev: File Definitions,  Up: Code Chunk Summaries

B.2 Code Chunk Definitions
==========================


File: Ruby2_5.info,  Node: Code Chunk References,  Prev: Code Chunk Definitions,  Up: Code Chunk Summaries

B.3 Code Chunk References
=========================


File: Ruby2_5.info,  Node: Bibliography,  Next: Concept Index,  Prev: Code Chunk Summaries,  Up: Top

Bibliography
************


File: Ruby2_5.info,  Node: Concept Index,  Prev: Bibliography,  Up: Top

Index
*****

 [index ]
* Menu:

* branches page:                         Branches Page.      (line  6)
* chruby:                                chruby.             (line  6)
* core:                                  Ruby Core.          (line  6)
* Documentation:                         Documentation.      (line  6)
* gemsets, manage different using RVM:   RVM (``Ruby Version Manager'').
                                                             (line  6)
* GitHub, ruby repository:               Ruby Core.          (line 51)
* installer, third party:                Installers.         (line  6)
* issue tracker:                         Ruby Core.          (line 59)
* issue tracking:                        Issue Tracking.     (line  6)
* mailing lists:                         Ruby Core.          (line 59)
* manage Rubies using chruby:            chruby.             (line  6)
* multiple installations, manage using RVM: RVM (``Ruby Version Manager'').
                                                             (line  6)
* multiple Rubies, command-line tool uru: uru.               (line  6)
* Patch Writer's Guide:                  Ruby Core.          (line 70)
* patching of Ruby:                      Ruby Core.          (line 35)
* rbenv:                                 rbenv.              (line  6)
* rbenv version manager:                 ruby-build.         (line  6)
* releases:                              Releases Page.      (line  6)
* repository, Subversion:                Ruby Core.          (line 46)
* respository, GitHub:                   Ruby Core.          (line 51)
* Rubies, switch between:                Installers.         (line  6)
* Ruby Core mailing list:                Ruby Core.          (line 59)
* Ruby development, tracking:            Ruby Core.          (line 23)
* ruby-build plugin:                     ruby-build.         (line  6)
* RVM version manager:                   Installers.         (line  6)
* source, building:                      Building From Source.
                                                             (line  6)
* Subversion:                            Ruby Core.          (line 23)
* Subversion repository:                 Ruby Core.          (line 46)
* Texinfo document formatting language:  Conventions.        (line  6)
* track Ruby development:                Ruby Core.          (line 23)
* uru:                                   uru.                (line  6)
* version managers:                      Installers.         (line  6)
* versions, multiple installations using rbenv: rbenv.       (line  6)
* versions, switch between using chruby: chruby.             (line  6)
* versions,multiple:                     Installers.         (line  6)



Tag Table:
Node: Top371
Node: Preface1897
Node: Audience2080
Node: Overview2199
Node: Conventions2369
Node: Acknowledgements3289
Node: Introduction3405
Node: Documentation3702
Node: Installing Ruby4089
Node: Package Management Systems5002
Node: Homebrew (OS X)5827
Node: Installers6253
Node: ruby-build6849
Node: ruby-install7402
Node: Managers8017
Node: chruby8414
Node: rbenv8673
Node: RVM (``Ruby Version Manager'')9218
Node: uru9616
Node: Building From Source9909
Node: Releases Page10935
Node: Branches Page12035
Node: Issue Tracking13835
Node: Ruby Core14337
Ref: subversion15041
Ref: MainRubyRepo16193
Ref: PatchByPatch16521
Node: Getting Started17318
Node: Try Ruby!17674
Node: Official FAQ18004
Node: Ruby Koans18245
Node: Why’s (Poignant) Guide to Ruby18441
Node: Ruby in Twenty Minutes18915
Node: Ruby from Other Languages19326
Node: Learning Ruby19621
Node: Ruby Essentials19987
Node: Learn to Program20218
Node: Manuals20595
Node: Reference Documentation20734
Node: Editors and IDEs20906
Node: Further Reading21072
Node: First appendix21204
Node: Code Chunk Summaries21375
Node: File Definitions21762
Node: Code Chunk Definitions21924
Node: Code Chunk References22114
Node: Bibliography22277
Node: Concept Index22408

End Tag Table
