% -*- mode: texinfo -*-

% \input mftmac % for Metafont logo
% Uncomment the 1st \input line if you need the MF logo
\input texinfo   @c -*-texinfo-*-

@c %**start of header (This is for running Texinfo on a region.)
@setfilename Ruby2_5.info
@settitle Ruby2_5 Information
@include my-bib-macros.texi
@mybibusetable{Bibliography}
@c %**end of header (This is for running Texinfo on a region.)








@c Change how xref titles are quoted.
@dquotexrefs
@c And let braces in index entries work.
@allowindexbraces

@c some special symbols
@ifnottex
@macro ii{text}
@i{\text\}
@end macro
@end ifnottex

@ifclear FORPRINT
@pdflinkcolor
@urllinkcolor
@hideurls
@end ifclear

@c merge the function and variable indexes into the concept index
@c do so without the code font, and in the index entries do the
@c font management ourselves.  Also merge in the chunk definition
@c and reference entries, which jrweave creates for us.
@ifnothtml
@synindex fn cp
@synindex vr cp
@synindex cd cp
@synindex cr cp
@end ifnothtml

@c Uncomment this if you want the metafont logo.
@ignore
@ifnottex
@macro MF{}
@sc{METAFONT}
@end macro
@end ifnottex
@end ignore








@c =============================================================================
@c FINAL RELEASE
@c =============================================================================

@c If "finalout" is commented out, the printed output will show
@c black boxes that mark lines that are too long.  Thus, it is
@c unwise to comment it out when running a master in case there are
@c overfulls which are deemed okay.
@iftex
@c @finalout
@end iftex

@c Uncomment this for the release.  Leaving it off saves paper
@c during editing and review.
@c @setchapternewpage odd
@c /////////////////////////////////////////////////////////////////////////////







@c =============================================================================
@c EDITION
@c =============================================================================

@c The following information should be updated here only!
@c This sets the edition of the document.

@c These apply across the board.
@set UPDATE-MONTH OCTOBER, 2018
@set EDITION 0.6d
@set DRAFT @i{DRAFT}

@set TITLE Ruby 2.5 Information and Documentation
@set SHORTTITLE Ruby 2.5 Info
@set THISFILE Ruby2_5.twjr

@iftex
@set DOCUMENT book
@set CHAPTER chapter
@set APPENDIX appendix
@set SECTION section
@set SUBSECTION subsection
@end iftex
@ifhtml
@set DOCUMENT Web page
@set CHAPTER chapter
@set APPENDIX appendix
@set SECTION section
@set SUBSECTION subsection
@end ifhtml
@ifinfo
@set DOCUMENT Info file
@set CHAPTER major node
@set APPENDIX major node
@set SECTION minor node
@set SUBSECTION node
@end ifinfo
@ifdocbook
@set DOCUMENT book
@set CHAPTER chapter
@set APPENDIX appendix
@set SECTION section
@set SUBSECTION subsection
@end ifdocbook
@c /////////////////////////////////////////////////////////////////////////////








@c =============================================================================
@copying
@c =============================================================================

@docbook
<para>Published by:</para>

<literallayout class="normal">Full Name
Address Line 1
Address Line 2
etc.
Email: <email>wlharvey4@@mac.com</email>
URL: <ulink url="http://www.example.com/">http://www.example.com/</ulink></literallayout>

<literallayout class="normal">Copyright &copy; 2018
wlharvey4
All Rights Reserved.</literallayout>
@end docbook

@ifnotdocbook
Copyright @copyright{} 2018 @*
wlharvey4 @*
All Rights Reserved.
@end ifnotdocbook
@sp 1
The Ruby2.5 Information and Documentation program is copyright
@copyright{} 2018 by wlharvey4. It is published under
the conditions of the GNU General Public License, version 3.
@sp 2
This is Edition @value{EDITION} of @cite{@value{TITLE}}.
@end copying
@c /////////////////////////////////////////////////////////////////////////////








@c =============================================================================
@titlepage
@c =============================================================================

@c Uncomment this if it's ever printed as a real book(let).
@c @shorttitlepage @value{SHORTTITLE}

@title @value{TITLE}
@subtitle @value{UPDATE-MONTH}
@author wlharvey4

@ifnotdocbook
@c Include the Distribution inside the titlepage environment so
@c that headings are turned off.  Headings on and off do not work.

@page
@vskip 0pt plus 1filll
Published by:
@sp 1
wlharvey4 @*
Address Line 1 @*
Address Line 2 @*
etc. @*
Email: @EMAIL{wlharvey4@@emac.com,wlharvey4 AT mac.com} @*
URL: @url{http://www.example.com/} @*

@insertcopying
@end ifnotdocbook
@end titlepage
@c /////////////////////////////////////////////////////////////////////////////








@iftex
@headings off
@evenheading @thispage @| @value{DRAFT} @| @strong{@value{SHORTTITLE}}
@oddheading  @strong{@thischapter} @| @value{DRAFT} @| @thispage
@end iftex

@ifnottex
@ifnotdocbook
@ifnotxml

@c *****************************************************************************
@node Top
@top General Introduction
@c *****************************************************************************

From The Top: This file documents Ruby 2.5, @url{https://www.ruby-lang.org, Ruby-Lang}
and @url{https://github.com/ruby, Ruby-Github}.

@insertcopying
@end ifnotxml
@end ifnotdocbook
@end ifnottex

@c =============================================================================
@menu
@c =============================================================================

@detailmenu
 --- The Detailed Node Listing ---

@end detailmenu
@end menu

@c =============================================================================
@summarycontents
@contents
@c /////////////////////////////////////////////////////////////////////////////








@c *****************************************************************************

@c Preface node should come right after the Top
@c node, in `unnumbered' sections, then the introductory chapter.
@c Licensing nodes are appendices, they're not central to TexiWebJr.

@c Add these to the menu if they ever get included.
@c @node Foreword
@c @unnumbered Foreword

@node Preface
@unnumbered Preface

@emph{Think think think think @dots{}}




@c -----------------------------------------------------------------------------

@node Audience
@unnumberedsec Intended Audience

@quotation
@sansserif{The combination of the power of a pure object-oriented language with
the convenience of a scripting language makes Ruby a favorite tool of
intelligent, forward-thinking programmers.}
@end quotation
@cite{Programming Ruby}, by @i{Dave Thomas} and @ii{Chad Fowler} and
@emph{Andy Hunt}




@c -----------------------------------------------------------------------------

@node Overview
@unnumberedsec What Is Covered

Text and chapter by chapter description here.




@c -----------------------------------------------------------------------------

@node Conventions
@unnumberedsec Typographical Conventions

@c Copied mostly verbatim from the gawk manual.

@cindex Texinfo document formatting language
This @value{DOCUMENT} is written in an enhanced version of
@uref{http://www.gnu.org/software/texinfo/, Texinfo}, the GNU documentation
formatting language.  A single Texinfo source file is used to produce both the
printed and online versions of a program's documentation.
@ifnotinfo
Because of this, the typographical conventions are slightly different than in
other books you may have read.
@end ifnotinfo

Examples you would type at the command-line are preceded by the common shell
primary and secondary prompts, @samp{$} and @samp{>}.  Input that you type is
shown @kbd{like this}.  Output from the command is preceded by the glyph
``@print{}''.  This typically represents the command's standard output.  Error
messages, and other output on the command's standard error, are preceded by the
glyph ``@error{}''.  For example:

@example
$ @kbd{echo hi on stdout}
@print{} hi on stdout
$ @kbd{echo hello on stderr 1>&2}
@error{} hello on stderr
@end example

@ifnotinfo
In the text, command names appear in @code{this font}, while code segments
appear in the same font and quoted, @samp{like this}.  Options look like this:
@option{-f}.  Some things are emphasized @emph{like this}, and if a point needs
to be made strongly, it is done @strong{like this}.  The first occurrence of a
new term is usually its @dfn{definition} and appears in the same font as the
previous occurrence of ``definition'' in this sentence.  Finally, file names
are indicated like this: @file{/path/to/our/file}.
@end ifnotinfo




@c -----------------------------------------------------------------------------

@node Acknowledgements
@unnumberedsec Acknowledgements








@c *****************************************************************************

@node Introduction
@chapter Introduction

Ruby is @dots{}

A dynamic, open source programming language with a focus on simplicity and
productivity.  It has an elegant syntax that is natural to read and easy to
write.








@c *****************************************************************************

@node Documentation
@chapter Documentation
@cindex Documentation

Here you will find pointers to manuals, tutorials and references that will come
in handy when you feel like coding in Ruby.

@ref{Ruby-Doc}


@c -----------------------------------------------------------------------------

@node Installing Ruby
@section Installing Ruby

@subheading Installation Methods

There are several ways to install Ruby:

@itemize
@item
@b{Package Manager}: When you are on a UNIX-like operating system, using your
system’s package manager is the easiest way of getting started. However, the
packaged Ruby version usually is not the newest one.
@item
@b{Installers}: can be used to install a specific or multiple Ruby
versions. There is also an installer for Windows.
@item
@b{Managers} help you to switch between multiple Ruby installations on your
system.
@item
@b{Source}: And finally, you can also build Ruby from source.
@end itemize

The following overview lists available installation methods for different needs
and platforms.


@c .....................................


@node Package Management Systems
@subsection Package Management Systems

If you cannot compile your own Ruby, and you do not want to use a
third-party tool, you can use your system’s package manager to install
Ruby.

Certain members in the Ruby community feel very strongly that you
should never use a package manager to install Ruby and that you should
use tools instead.  While the full list of pros and cons is outside of
the scope of this page, the most basic reason is that most package
managers have older versions of Ruby in their official
repositories.  If you would like to use the newest Ruby, make sure you
use the correct package name, or use the tools described further below
instead.

@c _____________________________________


@node Homebrew (OS X)
@subsubsection Homebrew (OS X)

@url{http://brew.sh/, Homebrew}

On macOS (High) Sierra and OS X El Capitan, Ruby 2.0 is included.

Many people on OS X use Homebrew as a package manager.  It is really
easy to get a newer version of Ruby using Homebrew:

@example
$ brew install ruby
@end example

This should install the latest Ruby version.


@c .....................................

@node Installers
@subsection Installers
@cindex installer, third party
@cindex version managers
@cindex versions,multiple
@cindex Rubies, switch between
@cindex RVM version manager

If the version of Ruby provided by your system or package manager is
out of date, a newer one can be installed using a third-party
installer.  Some of them also allow you to install multiple versions on
the same system; associated managers can help to switch between the
different Rubies.  If you are planning to use RVM as a version manager
you do not need a separate installer, it comes with its own.

@c _____________________________________


@node ruby-build
@subsubsection @command{ruby-build}
@cindex @command{ruby-build} plugin
@cindex @command{rbenv} version manager

@url{https://github.com/rbenv/ruby-build#readme, @command{ruby-build}}

@url{https://www.ruby-lang.org/en/documentation/installation/#rbenv,
@command{rbenv}}

@command{ruby-build} is a plugin for @command{rbenv} (@pxref{rbenv}
that allows you to compile and install different versions of Ruby into
arbitrary directories.  @command{ruby-build} can also be used as a
standalone program without @command{rbenv}.  It is available for OS X,
Linux, and other UNIX-like operating systems.

@c _____________________________________

@node ruby-install
@subsubsection @command{ruby-install}
@command{ruby-install} version manager
@command{chruby} version switcher

@url{https://github.com/postmodern/ruby-install#readme, @command{ruby-install}}

@url{https://www.ruby-lang.org/en/documentation/installation/#chruby,
@command{chruby}}

@command{ruby-install} allows you to compile and install different
versions of Ruby into arbitrary directories.  There is also a sibling,
@command{chruby} (@pxref{chruby}), which handles switching between
Ruby versions.  It is available for OS X, Linux, and other UNIX-like
operating systems.


@c .....................................

@node Managers
@subsection Managers

Many Rubyists use Ruby managers to manage multiple Rubies.  They confer
various advantages but are not officially supported.  Their respective
communities are very helpful, however.

@c _____________________________________


@node chruby
@subsubsection chruby
@cindex @command{chruby}
@cindex versions, switch between using @command{chruby}
@cindex manage Rubies using @command{chruby}

@command{chruby} allows you to switch between multiple Rubies.
@command{chruby} can manage Rubies installed by @command{ruby-install}
(@pxref{ruby-install}) or even built from source.

@c _____________________________________

@node rbenv
@subsubsection @command{rbenv}
@cindex @command{rbenv}
@cindex versions, multiple installations using @command{rbenv}

@url{https://github.com/rbenv/rbenv#readme, @command{rbenv}}

@url{https://www.ruby-lang.org/en/documentation/installation/#ruby-build,
@command{ruby-build}}

@command{rbenv} allows you to manage multiple installations of Ruby.
It does not support installing Ruby, but there is a popular plugin
named @command{ruby-build} (@pxref{ruby-build}) to install Ruby.  Both
tools are available for OS X, Linux, or other UNIX-like operating
systems.

@c _____________________________________

@node RVM
@subsubsection RVM (``Ruby Version Manager'')
@cindex multiple installations, manage using RVM
@cindex gemsets, manage different using RVM

@url{http://rvm.io/, RVM}

RVM allows you to install and manage multiple installations of Ruby on
your system.  It can also manage different gemsets.  It is available for
OS X, Linux, or other UNIX-like operating systems.

@c _____________________________________

@node uru
@subsubsection @command{uru}
@cindex @command{uru}
@cindex multiple Rubies, command-line tool @command{uru}

@url{https://bitbucket.org/jonforums/uru, Uru}

Uru is a lightweight, multi-platform command line tool that helps you
to use multiple Rubies on OS X, Linux, or Windows systems.


@c .....................................

@node Building From Source
@subsection Building From Source
@cindex source, building

@url{https://www.ruby-lang.org/en/downloads/, Ruby 2.5.1}

@url{https://github.com/ruby/ruby, Ruby Github}

Of course, you can install Ruby from source.  Download and unpack a
tarball, then just do this:

@example
$ ./configure
$ make
$ sudo make install
@end example

By default, this will install Ruby into @file{/usr/local}.  To change, pass
the @option{--prefix=DIR} option to the @file{./configure} script.

Using the third-party tools or package managers might be a better
idea, though, because the installed Ruby won’t be managed by any
tools.

Installing from the source code is a great solution for when you are
comfortable enough with your platform and perhaps need specific settings for
your environment.  It’s also a good solution in the event that there are no
other premade packages for your platform.

@c _____________________________________


@node Releases Page
@subsubsection Releases Page
@cindex releases

@url{https://www.ruby-lang.org/en/downloads/releases/, Releases Page}

For more information about specific releases, particularly older
releases or previews, see the Releases page.

This page lists individual Ruby releases.

@subsubheading Ruby 2.5.1 Released

@url{https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.1.tar.gz,
ruby-2.1.5.tar.gz}

Posted by naruse on 28 Mar 2018

This release includes some bug fixes and some security fixes.

@itemize
@item
CVE-2017-17742: HTTP response splitting in WEBrick
@item
CVE-2018-6914: Unintentional file and directory creation with
directory traversal in tempfile and tmpdir
@item
CVE-2018-8777: DoS by large request in WEBrick
@item
CVE-2018-8778: Buffer under-read in String#unpack
@item
CVE-2018-8779: Unintentional socket creation by poisoned NUL byte in
UNIXServer and UNIXSocket
@item
CVE-2018-8780: Unintentional directory traversal by poisoned NUL byte
in Dir
@item
Multiple vulnerabilities in RubyGems
@end itemize

@c _____________________________________

@node Branches Page
@subsubsection Branches Page
@cindex branches page

@url{https://www.ruby-lang.org/en/downloads/branches/, Branches Page}

Information about the current maintenance status of the various Ruby branches
can be found on the Branches page.

This page lists the current maintenance status of the various Ruby branches.
This is a preliminary list of Ruby branches and their maintenance status. The
shown dates are inferred from the English versions of release posts or EOL
announcements.

The Ruby branches or release series are categorized below into the following
phases:

@itemize
@item
normal maintenance (bug fix): Branch receives general bug fixes and security
fixes.
@item
security maintenance (security fix): Only security fixes are backported to this
branch.
@item
eol (end-of-life): Branch is not supported by the ruby-core team any longer and
does not receive any fixes. No further patch release will be released.
@item
preview: Only previews or release candidates have been released for this branch
so far.
@end itemize

@subsubheading Ruby 2.6
@url{https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.0-preview2.tar.gz}

@noindent
ruby-2.6.0-preview2@*
status: preview@*
release date:@*

@subsubheading Ruby 2.5
@url{https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.1.tar.gz}

@noindent
status: normal maintenance@*
release date: 2017-12-25@*

@subsubheading Ruby 2.4
@url{https://cache.ruby-lang.org/pub/ruby/2.4/ruby-2.4.4.tar.gz}

@noindent
status: normal maintenance@*
release date: 2016-12-25@*

@subsubheading Ruby 2.3
@url{https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.7.tar.gz}

@noindent
status: security maintenance@*
release date: 2015-12-25@*
EOL date: scheduled for 2019-03-31@*

@subsubheading Ruby 2.2

status: eol@*
release date: 2014-12-25@*
EOL date: 2018-03-31@*

@c _____________________________________

@node Issue Tracking
@subsubsection Ruby Issue Tracking System
@cindex issue tracking

@url{https://bugs.ruby-lang.org, Bugs}

@subsubheading How to report a bug

@url{https://bugs.ruby-lang.org/projects/ruby/wiki/HowToReport, How To Report}

@subsubheading Ruby Trunk

@url{https://bugs.ruby-lang.org/projects/ruby-trunk, Ruby Trunk}

@url{https://bugs.ruby-lang.org/projects/ruby-trunk/issues?set_filter=1, All
Issues}




@c -----------------------------------------------------------------------------

@node Help Tools
@section Ruby Help Tools
@cindex help tools
@cindex tools, help
@cindex Ruby Interactive
@cindex Ruby Index
@cindex @command{ri}
@cindex RDoc
@cindex Ruby Documentation
@cindex @command{rdoc}

The RDoc system includes the command-line tools @command{rdoc} and
@command{ri} for generating and displaying online documentation.

@command{ri} (Ruby Index) and RDoc (Ruby Documentation)@footnote{Not
to be confused with the Ruby Programming Language Documentation at
@url{http://ruby-doc.org,Ruby-Doc} (@pxref{Ruby-Doc})} are a closely
related pair of tools for providing documentation about Ruby programs.
@command{ri} and @command{rdoc} are standalone programs; you run them
from the command line.  The Ruby @command{ri} tool is used to view the
Ruby documentation off-line.  @dfn{RDoc} produces HTML and online
documentation for Ruby projects.

@url{https://github.com/ruby/rdoc, RDoc}

@url{http://ruby.github.io/rdoc, @command{rdoc}}

@c .....................................

@node RDoc
@subsection RDoc
@cindex RDoc
@cindex @command{rdoc}

RDoc and the tool @command{rdoc} are a program documentation system.
RDoc produces HTML and command-line documentation for Ruby projects.
If you put comments in your program files (Ruby or C) in the
prescribed RDoc format, @command{rdoc} scans your files, extracts the
comments, organizes them intelligently (indexed according to what they
comment on), and creates nicely formatted documentation from them.
You can see RDoc markup in many of the C files in the Ruby source tree
and many of the Ruby files in the Ruby installation.

@c _____________________________________

@node Writing Documentation
@subsubsection Writing Documentation for RDoc
@cindex writing documentation

To write documentation for RDoc place a comment above the class, module,
method, constant, or attribute you want documented:

@example
##
# This class represents an arbitrary shape by a series of points.

class Shape

  ##
  # Creates a new shape described by a +polyline+.
  #
  # If the +polyline+ does not end at the same point it started at the
  # first pointed is copied and placed at the end of the line.
  #
  # An ArgumentError is raised if the line crosses itself, but shapes may
  # be concave.

  def initialize polyline
    # ...
  end

end
@end example

@subheading Comment Markup Formats
@cindex comment markup format
@cindex @file{RDoc::Markup}
@cindex @file{TomDoc}
@cindex @file{Markdown}
@cindex @file{RD}

The default comment markup format is the @file{RDoc::Markup} format.
@file{TomDoc}, @file{Markdown} and @file{RD} format comments are also
supported.

@subheading Directives
@cindex directives
@cindex @file{RDoc::Markup@@Directives}
@cindex @file{RDoc::Parser::Ruby}
@cindex metaprogram methods

Comments can contain directives that tell RDoc information that it cannot
otherwise discover through parsing.  See @file{RDoc::Markup@@Directives} to
control what is or is not documented, to define method arguments or to break up
methods in a class by topic.  See @file{RDoc::Parser::Ruby} for directives used
to teach RDoc about metaprogrammed methods.

@subheading Documentation Coverage Report
@cindex documentation coverage report

To determine how well your project is documented run @command{rdoc -C lib} to
get a documentation coverage report.  @command{rdoc -C1 lib} includes parameter
names in the documentation coverage report.

@c _____________________________________

@node Generating Documention
@subsubsection Generating Documention
@cindex documentation, generating
@cindex @command{rdoc}


Create documentation using the @command{rdoc} command:

@example
$ rdoc --help
$ rdoc [options] [names...]
@end example

A typical use might be to generate documentation for a package of Ruby source.
The command @command{rdoc} generates documentation for all the Ruby and C
source files in and below the current directory.  These will be stored in a
documentation tree starting in the subdirectory @file{doc}.

You can make this slightly more useful for your readers by having the index
page contain the documentation for the primary file.

@example
$ rdoc --main README.rdoc
@end example

@subheading To generate documentation programmatically:

@example
gem 'rdoc'
require 'rdoc/rdoc'

options = RDoc::Options.new
# see RDoc::Options

rdoc = RDoc::RDoc.new
rdoc.document options
# see RDoc::RDoc
@end example

@c _____________________________________

@node Markup Directives
@subsubsection Markup Directives
@cindex markup directives

@dfn{Directives} are keywords surrounded by @kbd{:} characters.

@subheading Controlling what is documented

@table @code

@item :nodoc: / :nodoc: all
This directive prevents documentation for the element from being generated.  For
classes and modules, methods, aliases, constants, and attributes directly
within the affected class or module also will be omitted.  By default, though,
modules and classes within that class or module will be documented.  This is
turned off by adding the all modifier.

@end table

@subheading Method arguments

@table @code
@item :arg: or :args: @i{parameters}
Overrides the default argument handling with exactly these parameters.

@end table

@subheading Sections

Sections allow you to group methods in a class into sensible containers.  If you
use the sections 'Public', 'Internal' and 'Deprecated' (the three allowed
method statuses from TomDoc) the sections will be displayed in that order
placing the most useful methods at the top.  Otherwise, sections will be
displayed in alphabetical order.

@table @code
@item :category: @i{section}
Adds this item to the named section overriding the current section.  Use this to
group methods by section in RDoc output while maintaining a sensible ordering
(like alphabetical).

@end table

@subheading Other directives

@table @code
@item :markup: @i{type}
Overrides the default markup type for this comment with the specified markup
type.  For Ruby files, if the first comment contains this directive it is
applied automatically to all comments in the file.

Unless you are converting between markup formats you should use a
@file{.rdoc_options} file to specify the default documentation format for your
entire project.  See Saved Options at @file{RDoc::Options} for instructions.

@end table

@c .....................................

@node ri
@subsection @command{ri} Help System
@cindex @command{ri}
@cindex Ruby Index @command{ri}
@cindex Ruby Interactive

@quotation
The name stands for Ruby Interactive (not to be confused with Interactive Ruby).
@end quotation

The Ruby @command{ri} tool is used to view the Ruby documentation off-line.
Open a command window and invoke @command{ri} followed by the name of a Ruby
class, module or method.  @command{ri} will display documentation for you.  You
may specify a method name without a qualifying class or module name, but this
will just show you a list of all methods by that name (unless the method is
unique).  Normally, you can separate a class or module name from a method name
with a period.  If a class defines a class method and an instance method by the
same name, you must instead use @code{::} to refer to a class method or
@code{#} to refer to the instance method.  Here are some example invocations of
@command{ri}:

@example
ri Array  
ri Array.sort  
ri Hash#each  
ri Math::sqrt
@end example

@command{ri} dovetails with RDoc: It gives you a way to view the information
that RDoc has extracted and organized.  Specifically (although not exclusively,
if you customize it), @command{ri} is configured to display the RDoc
information from the Ruby source files.  Thus on any system that has Ruby fully
installed, you can get detailed information about Ruby with a simple
command-line invocation of @command{ri}.  Some more information is available here:

@subheading Classes

To see a list of all the classes for which @command{ri} has documentation, type
the following: @kbd{ri -c}.  Then try accessing the documentation for a sample
class: @kbd{ri Hash}.  Next, try viewing the documentation for a given method,
for example, one from the @file{Array} class, rather than @file{Hash}, just to
give as much variety as possible: @kbd{ri 'Array#<<'}.  You will sometimes need
to quote the method name, in this case @kbd{<<}, to avoid the shell
interpreting certain metacharacters.

In one of your shell's start-up files, you may care to alias @command{ri} to
@samp{ri -f ansi}, which will ensure you get a nice coloured display (as in the
example above) when displaying documentation.


@c .....................................

@node Ruby Debugger
@subsection The Ruby Debugger
@cindex debugger

The Ruby debugger is a library loaded into Ruby at run-time. This is done as follows:

@example
ruby -r debug [
            options
            ] [
            programfile
            ] [
            arguments
            ]
@end example

The debugger can do all the usual sorts of things you would expect it to, such
as set breakpoints, step into and over code, print out the call stack, etc.




@c -----------------------------------------------------------------------------

@node Developing Ruby
@section Developing Ruby
@cindex developing Ruby

@url{https://www.ruby-lang.org/en/community/ruby-core/, Ruby Core}

Now is a fantastic time to follow Ruby’s development.  With the increased
attention Ruby has received in the past few years, there’s a growing need for
good talent to help enhance Ruby and document its parts.  So, where do you
start?

@subheading Ruby Core
@cindex Ruby core

The topics related to Ruby development covered here are:

@itemize
@item
@ref{subversion, Using Subversion to Track Ruby Development}
@item
@ref{MainRubyRepo, How to Use Git With the Main Ruby Repository}
@item
@ref{PatchByPatch, Improving Ruby, Patch by Patch}
@item
Rules for Core Developers
@end itemize

@anchor{subversion}
@subsubheading Using Subversion to Track Ruby Development
@cindex Subversion
@cindex track Ruby development
@cindex Ruby development, tracking

Getting the latest Ruby source code is a matter of an anonymous checkout from
the @url{http://subversion.apache.org/, Subversion} repository.  From your
command line:

@example
@kbd{$ svn co https://svn.ruby-lang.org/repos/ruby/trunk ruby}
@end example

The @file{ruby} directory will now contain the latest source code for the
development version of Ruby (@file{ruby-trunk}).  Currently patches applied to
the trunk are backported to the stable 2.5, 2.4, and 2.3 branches (see below).

If you’d like to follow patching of Ruby 2.5, you should use the ruby_2_5
branch when checking out:
@cindex patching of Ruby

@example
$ svn co https://svn.ruby-lang.org/repos/ruby/branches/ruby_2_5
@end example

This will check out the respective development tree into a @file{ruby_2_5}
directory. Developers working on the maintenance branches are expected to
migrate their changes to Ruby’s trunk, so often the branches are very similar,
with the exception of improvements made by Matz and Nobu to the language
itself.

If you prefer, you may browse
@url{https://svn.ruby-lang.org/cgi-bin/viewvc.cgi/, Ruby’s Subversion
repository via the web}.
@cindex Subversion repository
@cindex repository, Subversion

@anchor{MainRubyRepo}
@subsubheading How to Use Git With the Main Ruby Repository
@cindex GitHub, ruby repository
@cindex respository, GitHub

Those who prefer to use Git over Subversion can find instructions with the
@url{https://github.com/ruby/ruby, mirror on GitHub}, both for those with
commit access and @url{https://github.com/shyouhei/ruby/wiki/noncommitterhowto,
everybody else}.

@anchor{PatchByPatch}
@subsubheading Improving Ruby, Patch by Patch
@cindex issue tracker
@cindex mailing lists
@cindex Ruby Core mailing list

The core team maintains an @url{https://bugs.ruby-lang.org/, issue tracker} for
submitting patches and bug reports to Matz and the gang.  These reports also
get submitted to the
@url{https://www.ruby-lang.org/en/community/mailing-lists/, Ruby-Core mailing
list} for discussion, so you can be sure your request won’t go unnoticed.  You
can also send your patches straight to the mailing list.  Either way, you are
encouraged to take part in the discussion that ensues.

Please look over the
@url{https://www.ruby-lang.org/en/community/ruby-core/writing-patches/, Patch
Writer’s Guide} for some tips, straight from Matz, on how to get your patches
considered.
@cindex Patch Writer's Guide

@url{https://www.ruby-lang.org/en/community/ruby-core/, Steps for Building a
Patch}




@c -----------------------------------------------------------------------------

@node Getting Started
@section Getting Started


@c .....................................


@node Try Ruby!
@subsection Try Ruby!

@url{https://ruby.github.io/TryRuby/, Try Ruby!}

An interactive tutorial that lets you try out Ruby right in your browser.  This
15-minute tutorial is aimed at beginners who want to get a feeling of the
language.


@c .....................................

@node Official FAQ
@subsection Official FAQ

The official frequently asked questions.

@url{https://www.ruby-lang.org/en/documentation/faq/, FAQ}

This document contains Frequently Asked Questions about Ruby with
answers.

This FAQ is based on
@url{http://ruby-doc.org/docs/ruby-doc-bundle/FAQ/FAQ.html, The Ruby
Language FAQ} originally compiled by Shugo Maeda and translated into
English by Kentaro Goto.  Thanks to Zachary Scott and Marcus
Stollsteimer for incorporating the FAQ into the site and for a major
overhaul of the content.

@itemize
@item
General questions
@item
How does Ruby stack up against…?
@item
Installing Ruby
@item
Variables, constants, and arguments
@item
@ref{FAQ Iterators}
@item
@ref{FAQ Syntax}
@item
Methods
@item
Classes and modules
@item
Built-in libraries
@item
Extension library
@item
Other features
@end itemize

@c _____________________________________


@node FAQ Iterators
@subsubsection FAQ Iterators
@cindex iterators

@subheading What is an iterator?
@cindex @file{Proc} object, passed to iterator
@cindex block object, passed to iterator

An iterator is a method which accepts a block or a @file{Proc}
object.  In the source file, the block is placed immediately after the
invocation of the method.  Iterators are used to produce user-defined
control structures --- especially loops.

Let’s look at an example to see how this works.  Iterators are often
used to repeat the same action on each element of a collection, like
this:

@example
data = [1, 2, 3]
data.each do |i|
  puts i
end
@end example

The @code{each} method of the array @code{data} is passed the @code{do
@dots{} end} block, and executes it repeatedly.  On each call, the
block is passed successive elements of the array.
@cindex @code{each} method of iterator

You can define blocks with @code{@{ @dots{} @}} in place of @code{do
@dots{} end}.

@example
data = [1, 2, 3]
data.each @{ |i|
  puts i
@}
@end example

This code has the same meaning as the last example.  However, in some
cases, precedence issues cause @code{do @dots{} end} and @code{@{
@dots{} @}} to act differently.
@cindex precedence, iterators, different results
@cindex binding of @code{@{ @dots{} @}}

@example
foobar a, b do @dots{} end	# foobar is the iterator.
foobar a, b @{ @dots{} @}	# b is the iterator.
@end example

This is because @code{@{ @dots{} @}} binds more tightly to the
preceding expression than does a @code{do @dots{} end} block.  The
first example is equivalent to @samp{foobar(a, b) do @dots{} end},
while the second is @samp{foobar(a, b @{ @dots{} @})}.

@subheading How can I pass a block to an iterator?

You simply place the block after the iterator call.  You can also pass
a @file{Proc} object by prepending @kbd{&} to the variable or constant
name that refers to the @file{Proc}.

@subheading How is a block used in an iterator?
@cindex block, used in an iterator
@cindex iterator, block
@cindex @code{yield} control structor, or statement

@emph{This section or parts of it might be out-dated or in need of
confirmation.}

There are three ways to execute a block from an iterator method:

@enumerate
@item
the @code{yield} control structure;
@cindex @code{yield} control structure in iterator

The @code{yield} statement calls the block, optionally passing it one
or more arguments.

@example
def my_iterator
  yield 1, 2
end

my_iterator @{|a, b| puts a, b @}
@end example

@item
calling a @file{Proc} argument (made from a block) with @code{call};

If a method definition has a block argument (the last formal parameter
has an ampersand (@kbd{&}) prepended), it will receive the attached
block, converted to a @file{Proc} object. This may be called using
@code{prc.call(args)}.

@example
def my_iterator(&b)
  b.call(1, 2)
end

my_iterator @{|a, b| puts a, b @}
@end example

and

@item
using @code{Proc.new} followed by a @code{call}.
@cindex @code{Proc.new}, followed by @code{call}
@cindex @code{lambda} as a synonym of @file{Proc}

@code{Proc.new} (or the equivalent @code{proc} or @code{lambda}
calls), when used in an iterator definition, takes the block which is
given to the method as its argument and generates a procedure object
from it.  (@code{proc} and @code{lambda} are effectively synonyms.)

@emph{[Update needed: @code{lambda} behaves in a slightly different
way and produces a warning @samp{tried to create Proc object without a
block}.]}

@example
def my_iterator
  Proc.new.call(3, 4)
  proc.call(5, 6)
  lambda.call(7, 8)
end

my_iterator @{|a, b| puts a, b @}
@end example

Perhaps surprisingly, @code{Proc.new} and friends do not in any sense
consume the block attached to the method --- each call to
@code{Proc.new} generates a new procedure object out of the same
block.

You can tell if there is a block associated with a method by calling
@code{block_given?}.
@cindex @code{block_given?}

@end enumerate

@subheading What does Proc.new without a block do?

@code{Proc.new} without a block cannot generate a procedure object and
an error occurs.  In a method definition, however, @code{Proc.new}
without a block implies the existence of a block at the time the
method is called, and so no error will occur.

@subheading How can I run iterators in parallel?

See @url{http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/5252}

@c _____________________________________

@node FAQ Syntax
@subsubsection FAQ Syntax

List of FAQ items:

@ref{immediate value, What is the difference between an immediate
value and a reference?}

@ref{nil vs false, What is the difference between @code{nil} and
@code{false}?}

@ref{empty string, The Empty String}

@ref{symbol object, A Symbol Object}

@ref{value of symbol, How can I access the value of a symbol?}

@ref{loop, Is @code{loop} a control structure?}

@ref{post-test loop, Ruby doesn't have a post-test loop}

@ref{hash literal, Why can’t I pass a hash literal to a method @code{p @{@}}?}

@ref{pos val, I can’t get @code{def pos=(val)} to work!}

@ref{\1 and \\1, What is the difference between @code{\1} and
@code{\\1}?}

@ref{2 dots vs 3 dots, What is the difference between @code{..} and
@code{...}?}

@ref{or and, What is the difference between or and ||?}

@ref{function pointers, Does Ruby have function pointers?}

@ref{load vs require, What is the difference between load and
require?}

@ref{exception handling, Does Ruby have exception handling?}

@anchor{immediate value}
@subheading What is the difference between an immediate value and a reference?
@cindex immediate values

@code{Fixnum}, @code{true}, @code{nil}, and @code{false} are
implemented as @dfn{immediate values}.  With immediate values,
variables hold the objects themselves, rather than references to them.

Singleton methods cannot be defined for such objects.  Two
@file{Fixnums} of the same value always represent the same object
instance, so (for example) instance variables for the @file{Fixnum}
with the value 1 are shared between all the 1's in the system.  This
makes it impossible to define a singleton method for just one of
these.

@anchor{nil vs false}
@subheading What is the difference between @code{nil} and @code{false}?
@cindex @code{nil} and @code{false}, similariaties and differences
@cindex @code{false} and @code{nil}
@cindex boolean context
@cindex ``falsey'' values
@cindex ``truthy'' values

First the similarity: @code{nil} and @code{false} are the only two
objects that evaluate to @code{false} in a boolean context.  (In other
words: they are the only ``falsy'' values; all other objects are
``truthy''.)

However, @code{nil} and @code{false} are instances of different
classes (@file{NilClass} and @file{FalseClass}), and have different behavior
elsewhere.
@cindex @file{NilClass}
@cindex @file{FalseClass}

We recommend that @dfn{predicate methods} (those whose name ends with
a question mark) return @code{true} or @code{false}.  Other methods that need to
indicate failure should return @code{nil}.
@cindex predicate methods

@anchor{empty string}
@subheading The Empty String
@cindex empty string
@cindex conditional expression, @code{false} values

An empty string (@code{""}) returns @code{true} in a conditional
expression!  In Perl, it’s @code{false}.  It’s very simple: in Ruby,
only @code{nil} and @code{false} are @code{false} in conditional
contexts.

You can use @code{empty?}, compare the string to @code{""}, or compare
the string’s size or length to 0 to find out if a string is empty.

@anchor{symbol object}
@subheading A Symbol Object
@cindex Symbol object
@cindex @code{"name".to_sym}
@cindex @code{"name".intern}

What does @code{:name} mean?

A colon followed by a name generates a @dfn{Symbol object} which
corresponds one-to-one with the identifier.  During the duration of a
program's execution the same Symbol object will be created for a given
name or string.  Symbols can also be created with @code{"name".intern}
or @code{"name".to_sym}.

Symbol objects can represent identifiers for methods, variables, and
so on.  Some methods, like @code{define_method},
@code{method_missing}, or @code{trace_var}, require a symbol.  Other
methods, e.g. @code{attr_accessor}, @code{send}, or @code{autoload},
also accept a string.

Due to the fact that they are created only once, Symbols are often
used as hash keys.  String hash keys would create a new object for
every single use, thereby causing some memory overhead.  There is even
a special syntax for symbol hash keys:
@cindex symbols as hash keys

@example
person_1 = @{ :name => "John", :age => 42 @}
person_2 = @{ name: "Jane", age: 24 @}        # alternate syntax
@end example

Symbols can also be used as enumeration values or to assign unique
values to constants:
@cindex symbols as enumeration values
@cindex symbols, unique constants

@example
status = :open  # :closed, ...

NORTH = :NORTH
SOUTH = :SOUTH
@end example

@anchor{value of symbol}
@subheading How can I access the value of a symbol?
@cindex symbol, access value of
@cindex @code{symbol.to_s}
@cindex @code{"#symbol"}
@cindex @code{eval}

To get the value of the variable corresponding to a symbol, you can
use @code{symbol.to_s} or @code{"#@{symbol@}"} to get the name of the
variable, and then @code{eval} that in the scope of the symbol to get
the variable’s contents:

@example
a = "This is the content of `a'"
b = eval("#@{:a@}")
a.object_id == b.object_id  # => true
@end example

You can also use:

@example
b = binding.local_variable_get(:a)
@end example
@cindex @code{binding.local_variable_get(:symbol)}

If your symbol corresponds to the name of a method, you can use
@code{send}:
@cindex @code{send}

@example
class Demo
  def hello
    "Hello, world"
  end
end

demo = Demo.new
demo.send(:hello)
@end example

Or you can use @code{Object#method} to return a corresponding @file{Method}
object, which you may then call:

@example
m = demo.method(:hello)  # => #<Method: Demo#hello>
m.call                   # => "Hello, world"
@end example

@anchor{loop}
@subheading Is @code{loop} a control structure?
@cindex @code{loop}
@cindex @file{Kernel}

Although @code{loop} looks like a control structure, it is actually a
method defined in @file{Kernel}.  The block which follows introduces a
new scope for local variables.

@anchor{post-test loop}
@subheading Ruby doesn’t have a post-test loop
@cindex @code{do @dots{} @} while}

Ruby does not have a @code{do @{ @dots{} @} while} construct, so how
can I implement loops that test the condition at the end?

Clemens Hintze says: ``You can use a combination of Ruby’s @code{begin
@dots{} end} and the @code{while} or @code{until} statement modifiers
to achieve the same effect:

@example
i = 0
begin
  puts "i = #@{i@}"
  i += 1
end until i > 4
@end example

@anchor{hash literal}
@subheading Why can’t I pass a hash literal to a method: @code{p @{@}}?

The @code{@{@}} is parsed as a block, not a @file{Hash} constructor.
You can force the @code{@{@}} to be treated as an expression by making
the fact that it's a parameter explicit: @code{p(@{@})}.

@anchor{pos val}
@subheading I can’t get @code{def pos=(val)} to work!

I have the following code, but I cannot use the method @code{pos = 1}.

@example
def pos=(val)
  @@pos = val
  puts @@pos
end
@end example

Methods with @kbd{=} appended must be called with an explicit receiver
(without the receiver, you are just assigning to a local
variable).  Invoke it as @code{self.pos = 1}.

@anchor{\1 and \\1}
@subheading What is the difference between @code{\1} and @code{\\1}?

They have the same meaning.  In a single quoted string, only @code{\'}
and @code{\\} are transformed and other combinations remain unchanged.

However, in a double quoted string, @code{"\1"} is the byte
@code{\001} (an octal bit pattern), while @code{"\\1"} is the two
character string containing a backslash and the character @code{"1"}.

@anchor{2 dots vs 3 dots}
@subheading What is the difference between @code{..} and @code{...}?
@cindex @code{..} vs. @code{...}
@cindex range operators @code{..} vs @code{...}

@code{..} includes the right hand side in the range, while @code{...}
does not:

@example
(5..8).to_a   # => [5, 6, 7, 8]
(5...8).to_a  # => [5, 6, 7]
@end example

@anchor{or and}
@subheading What is the difference between @code{or} and @code{||}?
@cindex precedence of @code{or}

@code{p(nil || "Hello")} prints @code{"Hello"}, while @code{p(nil or
"Hello")} gives a parse error.  Why?

@code{or} has a very low precedence; @code{p( (nil or "Hello") )} will
work.

The precedence of @code{or} is for instance also lower than that of @code{=},
whereas @code{ || } has a higher precedence:

@example
foo = nil || "Hello"  # parsed as: foo = (nil || "Hello")
foo  # => "Hello"

# but perhaps surprisingly:

foo = nil or "Hello"  # parsed as: (foo = nil) or "Hello"
foo  # => nil
@end example

@code{or} (and similarly @code{and}) is best used, not for combining
boolean expressions, but for control flow, like in:

@example
do_something  or raise "some error!"
@end example

where @code{do_something} returns @code{false} or @code{nil} when an
error occurs.

@anchor{function pointers}
@subheading Does Ruby have function pointers?
@cindex function pointers

A @file{Proc} object generated by @code{Proc.new}, @code{proc}, or
@code{lambda} can be referenced from a variable, so that variable
could be said to be a function pointer.  You can also get references to
methods within a particular object instance using @code{object.method}.

@anchor{load vs require}
@subheading What is the difference between load and require?
@cindex @command{load}
@cindex @command{require}

@command{load} will load and execute a Ruby program (@file{*.rb}).

@command{require} loads Ruby programs as well, but will also load
@dfn{binary Ruby extension modules} (shared libraries or DLLs).  In
addition, @command{require} ensures that a feature is never loaded
more than once.
@cindex binary Ruby extension modules
@cindex shared libraries
@cindex DLLs

@anchor{exception handling}
@subheading Does Ruby have exception handling?
@cindex exception handling

Ruby supports a flexible exception handling scheme:

@example
begin
  statements which may raise exceptions
rescue [exception class names]
  statements when an exception occurred
rescue [exception class names]
  statements when an exception occurred
ensure
  statements that will always run
end
@end example
@cindex @code{rescue} clause
@cindex @code{ensure} clause

If an exception occurs in the @code{begin} clause, the @code{rescue}
clause with the matching exception name is executed.  The
@code{ensure} clause is executed whether an exception occurred or not.
@code{rescue} and @code{ensure} clauses may be omitted.

If no exception class is designated for a @code{rescue} clause,
@file{StandardError} exception is implied, and exceptions which are in
a @code{is_a?} relation to @file{StandardError} are captured.

This expression returns the value of the @code{begin} clause.

The latest exception is accessed by the global variable @code{$!} (and
so its type can be determined using @code{$!.type}).

@c _____________________________________

@node FAQ Methods
@subsubsection FAQ Methods

@subheading How does Ruby choose which method to invoke?
@cindex method, invoking 

@subheading Are @code{+, -, *, ...} operators?
@cindex operators?

@subheading Where are @code{++} and @code{--} ?
@cindex @code{++} and @code{--}

@cindex singleton method
@anchor{singleton-method}
@subheading What is a singleton method?

A @dfn{singleton method} is an instance method associated with one specific
object.  You create a singleton method by including the object in the
definition:

@example
class Foo; end

foo = Foo.new
bar = Foo.new

def foo.hello
  puts "Hello"
end

foo.hello
@result{}Hello

bar.hello
@result{} prog.rb:11:in `<main>': undefined method `hello' for
#<Foo:0x000000010f5a40> (NoMethodError)
@end example

@xref{class-method}.

@subheading All these objects are fine, but does Ruby have any simple functions?
@cindex simple functions?

@subheading So where do all these function-like methods come from?
@cindex function-like methods, where from?

@subheading Can I access an object’s instance variables?
@cindex instance variables, accessing

@subheading What’s the difference between @code{private} and @code{protected}?
@cindex @code{private} vs @code{protected}

@subheading How can I change the visibility of a method?
@cindex visibility, changing

@subheading Can an identifier beginning with a capital letter be a method name?
@cindex identifier with capital letter, method?

@subheading Calling @code{super} gives an @file{ArgumentError}.
@cindex @code{super} gives @file{ArgumentError}
@cindex @file{ArgumentError}, after calling @code{super}

@subheading How can I call the method of the same name two levels up?
@cindex calling method 2 levels up

@subheading How can I invoke an original built-in method after redefining it?
@cindex invoking original method after redefinition

@subheading What is a destructive method?
@cindex destructive method
@cindex method, destructive

@subheading Why can destructive methods be dangerous?
@cindex dangerous, destructive methods

@subheading Can I return multiple values from a method?
@cindex return mutliple values

@c _____________________________________

@node FAQ Classes and Modules
@subsubsection FAQ Classes and Modules
@cindex classes and methods faq

@cindex class definition, repeating
@subheading Can a class definition be repeated?

@cindex class variables?
@subheading Are there class variables?

@cindex class instance variable?
@subheading What is a class instance variable?

@cindex class variables vs class instance variables
@subheading What is the difference between class variables and class instance variables?

@cindex class methods
@cindex methods, class
@subheading Does Ruby have class methods?
@cindex singleton method
@cindex metaclass
@anchor{class-method} A singleton method of a class object is called a
@dfn{class method} (@pxref{singleton-method, Singleton Method}).  (Actually,
the class method is defined in the metaclass, but that is pretty much
transparent).

Another way of looking at it is to say that @emph{a class method is a method
whose receiver is a class.}

It all comes down to the fact that you can call class methods without having to
have instances of that class (objects) as the receiver.

@example
class Foo
  def self.test
    "this is foo"
  end
end

# It is invoked this way.

Foo.test  # => "this is foo"
@end example

In this example, @code{Foo.test} is a class method.

Instance methods which are defined in class @file{Class} can be used as class
methods for every(!) class.

@cindex singleton class?
@subheading What is a singleton class?

@cindex module function?
@subheading What is a module function?

@cindex class vs module
@subheading What is the difference between a class and a module?

@cindex modules, subclassing?
@subheading Can you subclass modules?

@cindex mixin example
@subheading Give me an example of a mixin

@cindex class methods, defining, 2 ways
@subheading Why are there two ways of defining class methods?

You can define a class method in the class definition, and you can define a
class method at the top level.

@example
class Demo
  def self.class_method
  end
end

def Demo.another_class_method
end
@end example

There is only one significant difference between the two.  In the class
definition you can refer to the class’s constants directly, as the constants
are within scope.  At the top level, you have to use the @code{Class::CONST}
notation.

@cindex @code{include} vs @code{extend}
@subheading What is the difference between include and extend?

@cindex @code{self}, meaning
@subheading What does @code{self} mean?

@c _____________________________________

@node FAQ Built-In Libraries
@subsubsection FAQ Built-In Libraries

@subheading What does @code{instance_methods(false)} return?
@cindex @code{instance_methods(false)}

@subheading How do random number seeds work?
@cindex random number seeds

@subheading I read a file and changed it, but the file on disk has not changed.
@cindex files, reading vs modifying

@subheading How can I process a file and update its contents?
@cindex file, process and update contents

@subheading I wrote a file, copied it, but the end of the copy seems to be lost.
@cindex file, copy

@subheading How can I get the line number in the current input file?
@cindex file, line number
@cindex line number of input file

@subheading How can I use @command{less} to display my program’s output?
@cindex program output, display using @command{less}

@subheading What happens to a @file{File} object which is no longer referenced?
@cindex @file{File} object, no reference

@subheading I feel uneasy if I don’t close a file.
@cindex files, closing

@subheading How can I sort files by their modification time?
@cindex files, sorting by modification time

@subheading How can I count the frequency of words in a file?
@cindex files, counting words

@subheading How can I sort strings in alphabetical order?
@cindex strings, sort alphabetically

@subheading How can I expand tabs to spaces?
@cindex tabs, expand into spaces

@subheading How can I escape a backslash in a regular expression?
@cindex regular expression, escaping a backslash

@subheading What is the difference between @code{sub} and @code{sub!}?
@cindex @code{sub} vs @code{sub!}

@subheading Where does @code{\Z} match?
@cindex @code{\Z}

@subheading What is the difference between @code{thread} and @code{fork}?
@cindex @code{thread} vs @code{fork}
@cindex @code{fork} vs @code{thread}

@subheading How can I use @file{Marshal}?
@cindex @file{Marshal}

@subheading How can I use @code{trap}?
@cindex @code{trap}

@c _____________________________________

@node FAQ Extension Library
@subsubsection FAQ Extension Library

@subheading How can I use Ruby interactively?
@cindex interactively use Ruby

@subheading Is there a debugger for Ruby?
@cindex debugger for Ruby

@subheading How can I use a library written in C from Ruby?
@cindex C library, use

@subheading Can I use @file{Tcl/Tk} in Ruby?
@cindex @file{Tcl/Tk}, use

@subheading @file{Tk} won't work. Why?
@cindex @file{Tk}, won't work

@subheading Can I use @command{gtk+} or @command{xforms} interfaces in Ruby?
@cindex @command{gtk+}
@cindex @command{xforms}

@subheading How can I do date arithmetic?
@cindex arithmetic

@c _____________________________________

@node FAQ Other Features
@subsubsection FAQ Other Features

@subheading What does a ? b : c mean?
@cindex ternary operator

@subheading How can I count the number of lines in a file?
@cindex file, count lines in

@subheading What do @code{MatchData#begin} and @code{MatchData#end} return?
@cindex @code{MatchData#begin} and @code{MatchData#end}

@subheading How can I sum the elements in an array?
@cindex array, sum elements in

@subheading How can I use continuations?
@cindex continuations, using


@c .....................................

@node Ruby Koans
@subsection Ruby Koans

@url{http://rubykoans.com/, Ruby Koans}

The Koans walk you along the path to enlightenment in order to learn Ruby.  The
goal is to learn the Ruby language, syntax, structure, and some common
functions and libraries.  We also teach you culture.  


@c .....................................

@node Why’s (Poignant) Guide to Ruby
@subsection Why’s (Poignant) Guide to Ruby

@url{http://mislav.uniqpath.com/poignant-guide/, Why's Guide to Ruby}

An unconventional but interesting book that will teach you Ruby through
stories, wit, and comics.  Originally created by @cite{why the lucky stiff},
this guide remains a classic for Ruby learners.


@c .....................................

@node Ruby in Twenty Minutes
@subsection Ruby in Twenty Minutes

@url{https://www.ruby-lang.org/en/documentation/quickstart/, Ruby in Twenty
Minutes}

A nice tutorial covering the basics of Ruby. From start to finish it shouldn’t
take you more than twenty minutes.  It makes the assumption that you already
have Ruby installed.  (If you do not have Ruby on your computer install it
before you get started.)

@c _____________________________________


@node Interactive Ruby
@subsubsection Interactive Ruby
@cindex @command{irb}

Ruby comes with a program that will show the results of any Ruby statements you
feed it.  Playing with Ruby code in interactive sessions like this is a terrific
way to learn the language.

Open up @file{IRB} (which stands for Interactive Ruby).

@example
? irb
@print{} irb(main):001:0>

irb(main):001:0> "Hello World"
@result{} "Hello World"
@print{} irb(main):002:0>
@end example

The second line is just IRB’s way of telling us the result of the last
expression it evaluated.  To print:

@example
irb(main):002:0> puts "Hello World"
@print{} Hello World
@result{} nil
@print{} irb(main):003:0>
@end example

@command{puts} is the basic command to print something out in Ruby.  But then
what’s the @samp{=> nil} bit?  That’s the result of the expression.
@command{puts} always returns @code{nil}, which is Ruby’s
absolutely-positively-nothing value.

@c _____________________________________

@node Defining Methods
@subsubsection Defining Methods
@cindex methods, defining
@cindex @code{def}

Define a method:

@example
irb(main):010:0> def hi
irb(main):011:1> puts "Hello World!"
irb(main):012:1> end
=> :hi
@end example

The code @samp{def hi} starts the definition of the method.  The next line is
the body of the method.  Finally, the last line end tells Ruby we’re done
defining the method.  Ruby’s response @print{} @code{=> :hi} tells us that it
knows we're done defining the method.

Try running that method a few times:

@example
irb(main):013:0> hi
Hello World!
=> nil
irb(main):014:0> hi()
Hello World!
=> nil
@end example
@cindex method, invoking
@cindex parentheses, optional

If the method doesn't take parameters that's all you need.  You can add empty
parentheses if you’d like, but they’re not needed.

@subsubheading Define Method with a Parameter
@cindex method parameters
@cindex parameters, methods

What if we want to say hello to one person, and not the whole world? Just
redefine @code{hi} to take a name as a parameter.

@example
irb(main):015:0> def hi(name)
irb(main):016:1> puts "Hello #@{name@}!"
irb(main):017:1> end
=> :hi
irb(main):018:0> hi("Matz")
Hello Matz!
=> nil
@end example
@cindex insert code into a string

What's the @code{#@{name@}} bit?  That's Ruby's way of inserting something into
a string.  The bit between the braces is turned into a string (if it isn’t one
already) and then substituted into the outer string at that point.  You can also
use this to make sure that someone's name is properly capitalized:

@example
irb(main):019:0> def hi(name = "World")
irb(main):020:1> puts "Hello #@{name.capitalize@}!"
irb(main):021:1> end
=> :hi
irb(main):022:0> hi "chris"
Hello Chris!
=> nil
irb(main):023:0> hi
Hello World!
=> nil
@end example
@cindex parentheses, optional

A couple of other tricks to spot here.  One is that we're calling the method
without parentheses again.  If it's obvious what you’re doing, the parentheses
are optional.  The other trick is the default parameter World. What this is
saying is ``If the name isn't supplied, use the default name of "World"''.

@subheading Create a Class
@cindex class definition
@cindex @code{class} keyword

What if we want a real greeter around, one that remembers your name and
welcomes you and treats you always with respect.  You might want to use an
object for that.  Let’s create a “Greeter” class.

@example
irb(main):024:0> class Greeter
irb(main):025:1>   def initialize(name = "World")
irb(main):026:2>     @@name = name
irb(main):027:2>   end
irb(main):028:1>   def say_hi
irb(main):029:2>     puts "Hi #@{@@name@}!"
irb(main):030:2>   end
irb(main):031:1>   def say_bye
irb(main):032:2>     puts "Bye #@{@@name@}, come back soon."
irb(main):033:2>   end
irb(main):034:1> end
=> :say_bye
@end example
@cindex instance variable

The new keyword here is @code{class}.  This defines a new class called
@file{Greeter} and a bunch of methods for that class.  Also notice
@code{@@name}.  This is an instance variable, and is available to all the
methods of the class.  As you can see it’s used by @code{say_hi} and
@code{say_bye}.

@subheading Create an Object
@cindex object, create from class definition

Now let’s create a greeter object and use it:

@example
irb(main):035:0> greeter = Greeter.new("Pat")
=> #<Greeter:0x16cac @@name="Pat">
irb(main):036:0> greeter.say_hi
Hi Pat!
=> nil
irb(main):037:0> greeter.say_bye
Bye Pat, come back soon.
=> nil
@end example

@subheading Instance Variables
@cindex instance variables, encapsulation

Instance variables are hidden away inside the object.  They’re not terribly
hidden, you see them whenever you inspect the object, and there are other ways
of accessing them, but Ruby uses the good object-oriented approach of keeping
data sort-of hidden away.

So what methods do exist for Greeter objects?

@samp{Object#instance_methods}
@cindex @code{Object#instance_methods}

@example
irb(main):039:0> Greeter.instance_methods
=> [:say_hi, :say_bye, :instance_of?, :public_send,
    :instance_variable_get, :instance_variable_set,
    :instance_variable_defined?, :remove_instance_variable,
    :private_methods, :kind_of?, :instance_variables, :tap,
    :is_a?, :extend, :define_singleton_method, :to_enum,
    :enum_for, :<=>, :===, :=~, :!~, :eql?, :respond_to?,
    :freeze, :inspect, :display, :send, :object_id, :to_s,
    :method, :public_method, :singleton_method, :nil?, :hash,
    :class, :singleton_class, :clone, :dup, :itself, :taint,
    :tainted?, :untaint, :untrust, :trust, :untrusted?, :methods,
    :protected_methods, :frozen?, :public_methods, :singleton_methods,
    :!, :==, :!=, :__send__, :equal?, :instance_eval, :instance_exec, :__id__]
 @end example

We only defined two methods.  What’s going on here?  Well this is all of the
methods for Greeter objects, a complete list, including ones defined by
ancestor classes.  If we want to just list methods defined for Greeter we can
tell it to not include ancestors by passing it the parameter false, meaning we
don’t want methods defined by ancestors.

@samp{Object#instance_methods(false)}

@example
irb(main):040:0> Greeter.instance_methods(false)
=> [:say_hi, :say_bye]
@end example

So let’s see which methods our greeter object responds to:

@samp{Object#respond_to?}
@cindex @code{Object#respond_to?}

@example
irb(main):041:0> greeter.respond_to?("name")
=> false
irb(main):042:0> greeter.respond_to?("say_hi")
=> true
irb(main):043:0> greeter.respond_to?("to_s")
=> true
@end example

So, it knows @code{say_hi}, and @code{to_s} (meaning convert something to a
string, a method that's defined by default for every object), but it doesn't
know @code{name}.

@c _____________________________________

@node Altering Classes
@subsubsection Altering Classes

But what if you want to be able to view or change the name?  Ruby provides an
easy way of providing access to an object's variables.

@samp{attr_accessor :name}
@cindex @code{attr_accessor :name}

@example
irb(main):044:0> class Greeter
irb(main):045:1>   attr_accessor :name
irb(main):046:1> end
=> nil
@end example

In Ruby, you can open a class up again and modify it.  The changes will be
present in any new objects you create and even available in existing objects of
that class.  So, let’s create a new object and play with its @code{@@name}
property.
@cindex classes, modifying

@example
irb(main):047:0> greeter = Greeter.new("Andy")
=> #<Greeter:0x3c9b0 @@name="Andy">
irb(main):048:0> greeter.respond_to?("name")
=> true
irb(main):049:0> greeter.respond_to?("name=")
=> true
irb(main):050:0> greeter.say_hi
Hi Andy!
=> nil
irb(main):051:0> greeter.name="Betty"
=> "Betty"
irb(main):052:0> greeter
=> #<Greeter:0x3c9b0 @@name="Betty">
irb(main):053:0> greeter.name
=> "Betty"
irb(main):054:0> greeter.say_hi
Hi Betty!
=> nil
@end example

Using @code{attr_accessor} defined two new methods for us, @code{name} to get
the value, and @code{name=} to set it.
@cindex @code{attr_accessor}, methods defined

@c _____________________________________

@node Large Class Definition
@subsubsection Large Class Definition

What if we had some kind of MegaGreeter that could either greet the world, one
person, or a whole list of people?  Let’s write this one in a file instead of
directly in the interactive Ruby interpreter IRB.

@(ri20min.rb@)=
#!/usr/bin/env ruby

class MegaGreeter
  attr_accessor :names

  @<MegaGreeter---Initialize Method@>
  @<MegaGreeter---say_hi Method@>
  @<MegaGreeter---say_bye Method@>
end

if __FILE__ == $0
  @<MegaGreeter---Main Script@>
end

@

@subsubheading Initialize Method
@cindex @code{initialize} method

@<MegaGreeter---Initialize Method@>=
  # Create the object
  def initialize(names = "World")
    @names = names
  end
  
@

@subheading @code{say_hi} Method
@cindex respond to message, instance variable
@cindex @code{respond_to?} method

The @code{say_hi} method has become a bit more complicated.  It now looks at
the @code{@@names} instance variable to make decisions.  If it's @code{nil}, it
just prints out three dots.  No point greeting nobody, right?

If the @code{@@names} object responds to each, it is something that you can
iterate over, so iterate over it and greet each person in turn.  Finally, if
@code{@@names} is anything else, just let it get turned into a string
automatically and do the default greeting.

@<MegaGreeter---say_hi Method@>=
  # Say hi to everybody
  def say_hi
    if @names.nil?
      puts "..."
    elsif @names.respond_to?("each")
      # @names is a list of some kind, iterate!
      @names.each do |name|
        puts "Hello #{name}!"
      end
    else
      puts "Hello #{@names}!"
    end
  end
  
@

@subsubheading The Iterator
@cindex iterator
@cindex block
@cindex @code{yield}

Let’s look at that iterator in more depth:

@example
@@names.each do |name|
  puts "Hello #@{name@}!"
end
@end example

@code{each} is a method that accepts a block of code then runs that block of
code for every element in a list, and the bit between @code{do} and @code{end}
is just such a block.  A @dfn{block} is like an anonymous function or lambda.
The variable between pipe characters is the parameter for this block.

What happens here is that for every entry in a list, @code{name} is bound to
that list element, and then the expression puts @samp{"Hello #@{name@}!"} is
run with that name.

Internally, the @code{each} method will essentially call @code{yield}
@samp{"Albert"}, then @code{yield} @samp{"Brenda"} and then @code{yield}
@samp{"Charles"}, and so on.

@subsubheading The Real Power of Blocks

The real power of blocks is when dealing with things that are more complicated
than lists.  Beyond handling simple housekeeping details within the method, you
can also handle setup, teardown, and errors—all hidden away from the cares of
the user.

@subheading @code{say_bye} Method
@cindex @code{join} method, respond to

The @code{say_bye} method doesn't use @code{each}; instead it checks to see if
@code{@@names} @dfn{responds} to the @code{join} method, and if so, uses
it.  Otherwise, it just prints out the variable as a string.

@subsubheading Duck Typing
@cindex duck typing

This method of not caring about the actual type of a variable, just relying on
what methods it supports is known as @dfn{Duck Typing}, as in ``if it walks like
a duck and quacks like a duck@dots{}''.  The benefit of this is that it doesn't
unnecessarily restrict the types of variables that are supported.  If someone
comes up with a new kind of list class, as long as it implements the
@code{join} method with the same semantics as other lists, everything will work
as planned.

@<MegaGreeter---say_bye Method@>=
  # Say bye to everybody
  def say_bye
    if @names.nil?
      puts "..."
    elsif @names.respond_to?("join")
      # Join the list elements with commas
      puts "Goodbye #{@names.join(", ")}.  Come back soon!"
    else
      puts "Goodbye #{@names}.  Come back soon!"
    end
  end
  
@

@subheading MegaGreeter Main Script
@cindex @code{__FILE__} special variable
@cindex script code

There’s one final trick to notice, and that’s the line:

@example
if __FILE__ == $0
@end example

@var{__FILE__} is the magic variable that contains the name of the current
file.  $0 is the name of the file used to start the program.  This check says
``If this is the main file being used@dots{}''  This allows a file to be used
as a library, and not to execute code in that context, but if the file is being
used as an executable, then execute that code.

@<MegaGreeter---Main Script@>=
  mg = MegaGreeter.new
  mg.say_hi
  mg.say_bye

  # Change name to be "Zeke"
  mg.names = "Zeke"
  mg.say_hi
  mg.say_bye

  # Change the name to an array of names
  mg.names = ["Albert", "Brenda", "Charles",
              "Dave", "Engelbert"]
  mg.say_hi
  mg.say_bye

  # Change to nil
  mg.names = nil
  mg.say_hi
  mg.say_bye

@

@c _____________________________________

@node Run MegaGreeter
@subsubsection Run MegaGreeter

Run the program @file{ri20min.rb} as @samp{ruby ri20min.rb}.  The output should
be:

@example
Hello World!
Goodbye World.  Come back soon!
Hello Zeke!
Goodbye Zeke.  Come back soon!
Hello Albert!
Hello Brenda!
Hello Charles!
Hello Dave!
Hello Engelbert!
Goodbye Albert, Brenda, Charles, Dave, Engelbert.  Come back soon!
...
...
@end example

@post_create ri20min.rb mv ri20min.rb src/

@c .....................................

@node Ruby from Other Languages
@subsection Ruby from Other Languages

@url{https://www.ruby-lang.org/en/documentation/ruby-from-other-languages/,
Ruby from Other Languages}

This document contains two major sections.  The first attempts to be a
rapid-fire summary of what you can expect to see when going from language X
to Ruby.  The second section tackles the major language features and how they
might compare to what you’re already familiar with.

@c _____________________________________


@node To Ruby From C and C++
@subsubsection To Ruby From C and C++

@subheading Everything Is Differerent

It's difficult to write a bulleted list describing how your code will be
different in Ruby from C or C++ because it's quite a large difference.  One
reason is that the Ruby runtime does so much for you.  Ruby seems about as far
as you can get from C's ``no hidden mechanism'' principle---the whole point of
Ruby is to make the human's job easier at the expense of making the runtime
shoulder more of the work.

@subsubheading Ruby is Quicker to Code But Slower to Execute

That said, for one thing, you can expect your Ruby code to execute much more
slowly than ``equivalent'' C or C++ code.  At the same time, your head will spin
at how rapidly you can get a Ruby program up and running, as well as at how
few lines of code it will take to write it.  Ruby is much much simpler than
C++.

@subheading Dynamically Typed
@cindex dynamicly typed
@cindex statically typed

Ruby is dynamically typed, rather than statically typed---the runtime does as
much as possible at run-time.  For example, you don't need to know what
modules your Ruby program will ``link to'' (that is, load and use) or what
methods it will call ahead of time.

@subheading Extension Modules
@cindex extension modules

Happily, it turns out that Ruby and C have a healthy symbiotic relationship.
Ruby supports so-called @dfn{extension modules}.  These are modules that you
can use from your Ruby programs (and which, from the outside, will look and
act just like any other Ruby module), but which are written in C.  In this
way, you can compartmentalize the performance-critical parts of your Ruby
software, and smelt those down to pure C.

And, of course, Ruby itself is written in C.

@subheading Similarities With C

@itemize
@item
You may program procedurally if you like (but it will still be
object-oriented behind the scenes).
@item
Most of the operators are the same (including the compound assignment and
also bitwise operators).  Though, Ruby doesn’t have @code{++} or @code{--}.
@item
Ruby has @var{__FILE__} and @var{__LINE__}.
@item
You can also have constants, though there’s no special const keyword.
@code{Const}-ness is enforced by a naming convention instead --- names
starting with a capital letter are for constants.
@item
Strings go in double-quotes and are mutable
@item
Just like man pages, you can read most docs in your terminal window ---
though using the @command{ri} command.
@item
You’ve got the same sort of command-line debugger available.
@end itemize

@subheading Similarities with C++

@itemize
@item
You’ve got mostly the same operators (even @code{::}).  @code{<<} is often
used for appending elements to a list.  One note though: with Ruby you never
use @code{->} --- it's always just @code{.}.
@item
@code{public}, @code{private}, and @code{protected} do similar jobs.
@item
Inheritance syntax is still only one character, but it's @code{<} instead of
@code{:}.
@item
You may put your code into ``modules'', similar to how @code{namespace} in C++ is
used.
@item
Exceptions work in a similar manner, though the keyword names have been
changed to protect the innocent.
@end itemize

@subheading Differences From C
@cindex strongly typed objects

@itemize
@item
You don’t need to compile your code.  You just run it directly.
@item
Objects are strongly typed (and variable names themselves have no type at
all).
@item
There’s no macros or preprocessor; no casts; no pointers (nor pointer
arithmetic); no typedefs, sizeof, or enums.
@item
There are no header files.  You just define your functions (usually referred
to as ``methods'') and classes in the main source code files.
@item
There’s no @code{#define}.  Just use constants instead.
@item
@cindex heap
All variables live on the heap.  Further, you don’t need to free them
yourself --- the garbage collector takes care of that.
@item
Arguments to methods (i.e. functions) are passed by value, where the values
are always object references.
@item
It's @samp{require 'foo'} instead of @samp{#include <foo>} or @samp{#include
"foo"}.
@item
You cannot drop down to assembly.
@item
There’s no semicolons ending lines.
@item
You go without parentheses for @code{if} and @code{while} condition
expressions.
@cindex parentheses, none for condition expressions
@item
Parentheses for method (i.e. function) calls are often optional.
@cindex parentheses, optional for method calls
@item
You don’t usually use braces --- just end multi-line constructs (like
@code{while} loops) with an @code{end} keyword.
@cindex braces, none
@item
The @code{do} keyword is for so-called @dfn{blocks}.  There’s no ``do
statement'' like in C.
@cindex @code{do} keyword
@item
The term @dfn{block} means something different.  It's for a block of code
that you associate with a method call so the method body can call out to the
block while it executes.
@cindex block
@item
There are no variable declarations.  You just assign to new names on-the-fly
when you need them.
@item
When tested for truth, only @code{false} and @code{nil} evaluate to a
@code{false} value.  Everything else is true (including @code{0}, @code{0.0},
and @code{"0"}).
@cindex truth values
@item
There is no @code{char} --- they are just 1-letter strings.
@item
Strings don’t end with a null byte.
@item
Array literals go in brackets instead of braces.
@cindex array literals in brackets
@item
Arrays just automatically get bigger when you stuff more elements into them.
@cindex arrays are dynamic and mutable
@item
If you add two arrays, you get back a new and bigger array (of course,
allocated on the heap) instead of doing pointer arithmetic.
@cindex arrays, adding
@item
More often than not, everything is an expression (that is, things like
@code{while} statements actually evaluate to an @code{rvalue}).
@end itemize

@subheading Differences from C++

@itemize
@item
There’s no explicit references.  That is, in Ruby, every variable is just an
automatically dereferenced name for some object.
@item
Objects are strongly but @emph{dynamically} typed.  The runtime discovers
@emph{at runtime} if that method call actually works.
@cindex objects, strongly and dynamically typed
@item
The @dfn{constructor} is called @code{initialize} instead of the class name.
@cindex constructor
@item
All methods are always virtual.
@cindex methods are virtual
@item
``Class'' (@code{static}) variable names always begin with @code{@@@@} (as in
@code{@@@@total_widgets}).
@item
You don’t directly access member variables --- all access to public member
variables (known in Ruby as @dfn{attributes}) is via methods.
@cindex attributes
@cindex member variables, access to
@item
It's @code{self} instead of @code{this}.
@cindex object reference is @code{self}
@cindex @code{self}, object reference
@item
Some methods end in a @code{?} or a @code{!}.  It's actually part of the
method name.
@item
There's no multiple inheritance per se.  Though Ruby has @dfn{mixins}
(i.e. you can ``inherit'' all instance methods of a module).
@cindex multiple inheritance
@cindex mixins
@item
There are some enforced case-conventions (ex. class names start with a
capital letter, variables start with a lowercase letter).
@cindex case conventions, enforced
@item
Parentheses for method calls are usually optional.
@item
You can re-open a class anytime and add more methods.
@item
There’s no need of C++ templates (since you can assign any kind of object to
a given variable, and types get figured out at runtime anyway).  No casting
either.
@cindex templates
@cindex cast
@item
Iteration is done a bit differently.  In Ruby, you don't use a separate
iterator object (like @code{vector<T>::const_iterator iter}).  Instead you use an
iterator method of the container object (like @code{each}) that takes a block of
code to which it passes successive elements.
@cindex iteration
@cindex iterator method
@cindex block for iterator
@item
There’s only two container types: @file{Array} and @file{Hash}.
@cindex @file{Array}
@cindex @file{Hash}
@cindex container types
@item
There’s no type conversions.  With Ruby though, you’ll probably find that they
aren’t necessary.
@cindex type conversions
@item
Multithreading is built-in, but as of Ruby 1.8 they are @dfn{green threads}
(implemented only within the interpreter) as opposed to native threads.
@cindex multithreading
@cindex green threads vs native threads
@cindex threads, native vs green
@item
A unit testing lib comes standard with Ruby.
@cindex unit testing lib
@end itemize

@c _____________________________________

@node To Ruby From Java
@subsubsection To Ruby From Java

@subheading Ruby is Less Verbose

Java is mature.  It's tested.  And it's fast (contrary to what the anti-Java
crowd may still claim).  It's also quite verbose.  Going from Java to Ruby,
expect your code size to shrink down considerably.  You can also expect it to
take less time to knock together quick prototypes.

@subheading Similarities with Java

@itemize
@item
Memory is managed for you via a garbage collector.
@cindex memory management
@cindex garbage collector
@item
Objects are strongly typed.
@cindex objects, strongly typed
@item
There are @code{public}, @code{private}, and @code{protected} methods.
@cindex visibility features
@item
There are embedded doc tools (Ruby's is called @file{RDoc}).  The docs
generated by @command{rdoc} look very similar to those generated by
@command{javadoc}.
@cindex @file{RDoc}
@cindex @command{rdoc}
@cindex documentation tool
@cindex @command{javadoc}
@end itemize

@subheading Differences From Java

@itemize
@item
You don’t need to compile your code. You just run it directly.
@item
There are several different popular third-party GUI toolkits.  Ruby users can
try @file{WxRuby}, @file{FXRuby}, @file{Ruby-GNOME2}, @file{Qt}, or the
bundled-in @file{Ruby Tk} for example.
@cindex GUI toolkits
@cindex @file{WxRuby}
@cindex @file{FXRuby}
@cindex @file{Ruby-GNOME2}
@cindex @file{Qt}
@cindex @file{Ruby Tk}
@item
You use the @code{end} keyword after defining things like classes, instead of
having to put braces around blocks of code.
@item
You have @code{require} instead of @file{import}.
@cindex @code{require}
@cindex @code{import}
@item
All member variables are private.  From the outside, you access everything
via methods.
@cindex access control
@item
Parentheses in method calls are usually optional and often omitted.
@cindex parentheses, optional in method calls
@item
Everything is an object, including numbers like @code{2} and @code{3.14159}.
@cindex objects, everything including numbers
@item
There’s no static type checking.
@cindex static checking, none
@item
Variable names are just labels.  They don’t have a type associated with them.
@item
There are no type declarations.  You just assign to new variable names
as-needed and they just ``spring up'' (i.e. @samp{a = [1,2,3]} rather than
@samp{int[] a = @{1,2,3@};}).
@cindex type declarations, none
@item
There’s no casting.  Just call the methods.  Your unit tests should tell you
before you even run the code if you’re going to see an exception.
@cindex casting, none
@item
It's @samp{foo = Foo.new("hi")} instead of @samp{Foo foo = new Foo("hi")}.
@item
The constructor is always named @code{initialize} instead of the name of the
class.
@cindex constructor
@cindex @code{initialize}, constructor
@item
You have ``mixins'' instead of interfaces.
@cindex mixins
@cindex interfaces, none, use mixins
@item
@acronym{YAML} tends to be favored over @acronym{XML}.
@cindex YAML vs XML
@cindex XML vs YAML
@item
It's @code{nil} instead of @code{null}.
@cindex @code{nil} vs @code{null}
@cindex @code{null} vs @code{nil}
@item
@code{==} and @code{equals()} are handled differently in Ruby.  Use @code{==}
when you want to test ``equivalence'' in Ruby (@code{equals()} in Java).  Use
@code{equal?()} when you want to know if two objects are ``the same''
(@code{==} in Java).
@cindex equivalence vs the same
@cindex @code{==} vs @code{equals()}
@end itemize

@c _____________________________________

@node To Ruby From Perl
@subsubsection To Ruby From Perl

Perl is awesome.  Perl's docs are awesome.  The Perl community is ---
awesome.  However, the language is fairly large and arguably complex.  For
those Perlers who long for a simpler time, a more orthogonal language, and
elegant OO features built-in from the beginning, Ruby may be for you.

@subheading Similarities with Perl

@itemize
@item
You’ve got a package management system, somewhat like CPAN (though it’s
called @url{http://guides.rubygems.org/,RubyGems}).
@item
Regexes are built right in.
@cindex regexes
@item
There's a fairly large number of commonly-used built-ins.
@item
Parentheses are often optional.
@item
Strings work basically the same.
@item
There’s a general delimited string and regex quoting syntax similar to
Perl’s.  It looks like @verb{|%q{this}|} (single-quoted), or
@verb{|%Q{this}|} (double-quoted), and @verb{|%w{this for a single-quoted
list of words}|}.  You @verb{|%Q|can||} @verb{|%Q(use)|} @verb{|%Q^other^|}
delimiters if you like.
@item
You’ve got double-quotish variable interpolation, though it @samp{"looks
#@{like@} this"} (and you can put any Ruby code you like inside that
@code{#@{@}}).
@item
Shell command expansion uses @code{`backticks`}.
@item
You’ve got embedded doc tools (Ruby’s is called @command{rdoc}).
@cindex @command{rdoc}
@cindex doc tools
@end itemize

@subheading Differences From Perl

@itemize
@item
You don’t have the context-dependent rules like with Perl.
@item
A variable isn't the same as the object to which it refers.  Instead, it's
always just a reference to an object.
@item
Although @code{$} and @code{@@} are used as the first character in variable
names sometimes, rather than indicating type, they indicate scope (@code{$}
for globals, @code{@@} for object instance, and @code{@@@@} for class
attributes).
@cindex sygils in Ruby
@item
Array literals go in brackets instead of parentheses.
@item
Composing lists of other lists does not flatten them into one big
list.  Instead you get an array of arrays.
@item
It's @code{def} instead of @code{sub}.
@item
There's no semicolons needed at the end of each line.  Incidentally, you end
things like function definitions, class definitions, and case statements with
the @code{end} keyword.
@item
Objects are strongly typed.  You’ll be manually calling @code{foo.to_i},
@code{foo.to_s}, etc., if you need to convert between types.
@item
There’s no @code{eq}, @code{ne}, @code{lt}, @code{gt}, @code{ge}, nor
@code{le}.
@item
There’s no diamond operator (@code{<>}).  You usually use
@code{IO.some_method} instead.
@item
The fat comma @code{=>} is only used for hash literals.
@item
There’s no @code{undef}.  In Ruby you have @code{nil}.  @code{nil} is an
object (like anything else in Ruby).  It's not the same as an undefined
variable.  It evaluates to @code{false} if you treat it like a boolean.
@item
When tested for truth, only @code{false} and @code{nil} evaluate to a
@code{false} value.  Everything else is @code{true} (including @code{0},
@code{0.0}, and @code{"0"}).
@end itemize

@c _____________________________________

@node To Ruby From PHP
@subsubsection To Ruby From PHP

PHP is in widespread use for web applications, but if you want to use Ruby on
Rails or just want a language that’s more tailored for general use, Ruby is
worth a look.

@subheading Similarities with PHP

@itemize
@item
Ruby is dynamically typed, like in PHP, so you don’t need to worry about
having to declare variables.
@item
There are classes, and you can control access to them like in PHP 5 (public,
protected and private).
@item
Some variables start with @code{$}, like in PHP (but not all).
@item
There's @code{eval}, too.
@item
You can use string interpolation.  Instead of doing @samp{"$foo is a $bar"},
you can do @samp{"#@{foo@} is a #@{bar@}"} --- like in PHP, this doesn’t apply
for single-quoted strings.
@item
There’s heredocs.
@item
Ruby has exceptions, like PHP 5.
@item
There’s a fairly large standard library.
@item
Arrays and hashes work like expected, if you exchange @code{array()} for
@code{@{} and @code{@}}: @code{array('a' => 'b')} becomes @code{@{'a' =>
'b'@}}.
@item
@code{true} and @code{false} behave like in PHP, but @code{null} is called
@code{nil}.
@end itemize

@subheading Differences From PHP

@itemize
@item
There’s strong typing.  You’ll need to call @code{to_s}, @code{to_i} etc. to
convert between strings, integers and so on, instead of relying on the
language to do it.
@item
Strings, numbers, arrays, hashes, etc. are objects.  Instead of calling
@code{abs(-1)} it’s @code{-1.abs}.
@item
Parentheses are optional in method calls, except to clarify which parameters
go to which method calls.
@item
The standard library and extensions are organized in modules and classes.
@item
Reflection is an inherent capability of objects; you don’t need to use
@file{Reflection} classes like in PHP 5.
@item
Variables are references.
@item
There’s no @file{abstract} classes or @file{interfaces}.
@item
Hashes and arrays are not interchangeable.
@item
Only @code{false} and @code{nil} are false: @code{0}, @code{array()} and
@code{""} are all true in conditionals.
@item
Almost everything is a method call, even @code{raise} (@code{throw} in PHP).
@end itemize

@c _____________________________________

@node To Ruby From Python
@subsubsection To Ruby From Python

Python is another very nice general purpose programming language.  Going from
Python to Ruby, you'll find that there's a little bit more syntax to learn
than with Python.

@subheading Similarities With Python

@itemize
@item
There’s an interactive prompt (called @command{irb}).
@cindex @command{irb}
@item
You can read docs on the command line (with the @command{ri} command instead
of @command{pydoc}).
@item
There are no special line terminators (except the usual newline).
@item
String literals can span multiple lines like Python's triple-quoted strings.
@item
Brackets are for lists, and braces are for dicts (which, in Ruby, are called
``hashes'').
@item
Arrays work the same (adding them makes one long array, but composing them
like this @samp{a3 = [ a1, a2 ]} gives you an array of arrays).
@item
Objects are strongly and dynamically typed.
@item
Everything is an object, and variables are just references to objects.
@item
Although the keywords are a bit different, exceptions work about the same.
@item
You’ve got embedded doc tools (Ruby’s is called @command{rdoc}).
@cindex @command{rdoc}
@cindex doc tools
@item
There is good support for functional programming with first-class functions,
anonymous functions, and closures.
@end itemize

@subheading Differences From Python

@itemize
@item
Strings are mutable.
@item
You can make constants (variables whose value you don’t intend to change).
@item
There are some enforced case-conventions (ex. class names start with a
capital letter, variables start with a lowercase letter).
@item
There's only one kind of list container (an @file{Array}), and it's mutable.
@item
Double-quoted strings allow escape sequences (like @code{\t}) and a special
``expression substitution'' syntax (which allows you to insert the results of
Ruby expressions directly into other strings without having to @samp{"add " +
"strings " + "together"}).  Single-quoted strings are like Python's @code{r"raw
strings"}.
@item
There are no ``new style'' and ``old style'' classes.  Just one kind.  (Python 3+
doesn’t have this issue, but it isn’t fully backward compatible with Python
2.)
@item
You never directly access attributes.  With Ruby, it’s all method calls.
@item
Parentheses for method calls are usually optional.
@item
There's @code{public}, @code{private}, and @code{protected} to enforce
access, instead of Python's @code{_voluntary_} underscore
@code{__convention__}.
@item
``mixins'' are used instead of multiple inheritance.
@item
You can add or modify the methods of built-in classes.  Both languages let you
open up and modify classes at any point, but Python prevents modification of
built-ins --- Ruby does not.
@item
You’ve got @code{true} and @code{false} instead of @code{True} and
@code{False} (and @code{nil} instead of @code{None}).
@item
When tested for truth, only @code{false} and @code{nil} evaluate to a
@code{false} value.  Everything else is @code{true} (including @code{0},
@code{0.0}, @code{""}, and @code{[]}).
@item
It's @code{elsif} instead of @code{elif}.
@item
It's @code{require} instead of @code{import}.  Otherwise though, usage is the
same.
@item
The usual-style comments on the line(s) above things (instead of docstrings
below them) are used for generating docs.
@item
There are a number of shortcuts that, although give you more to remember, you
quickly learn.  They tend to make Ruby fun and very productive.
@item
There’s no way to unset a variable once set (like Python's @code{del}
statement).  You can reset a variable to @code{nil}, allowing the old
contents to be garbage collected, but the variable will remain in the symbol
table as long as it is in scope.
@item
The @code{yield} keyword behaves differently.  In Python it will return
execution to the scope outside the function's invocation.  External code is
responsible for resuming the function.  In Ruby @code{yield} will execute
another function that has been passed as the final argument, then immediately
resume.
@item
Python supports just one kind of anonymous functions, lambdas, while Ruby
contains blocks, Procs, and lambdas.
@end itemize


@c .....................................

@node Important Language Features
@subsection Important Language Features

Here are some pointers and hints on major Ruby features you'll see while
learning Ruby.

@c _____________________________________


@node Pointers on Iteration
@subsubsection Pointers on Iteration
@cindex iteration

Two Ruby features that are a bit unlike what you may have seen before, and
which take some getting used to, are ``blocks'' and iterators.  Instead of
looping over an index (like with C, C++, or pre-1.5 Java), or looping over a
list (like Perl's @code{for (@@a) @{@dots{}@}}, or Python's @code{for i in aList:
@dots{}}), with Ruby you'll very often instead see:

@example
some_list.each do |this_item|
  # We're inside the block.
  # deal with this_item.
end
@end example

For more info on @code{each} and its friends
@cindex @code{each}
@cindex @code{collect}
@cindex @code{find}
@cindex @code{inject}
@cindex @code{sort}

@itemize
@item
@code{collect},
@item
@code{find},
@item
@code{inject},
@item
@code{sort},
@end itemize

etc., see @command{ri Enumerable} (and then @command{ri
Enumerable#some_method}).
@cindex @command{ri}

@c _____________________________________

@node Everything has a value
@subsubsection Everything has a value
@cindex value, everthing has one

There’s no difference between an expression and a statement.  Everything has a
value, even if that value is @code{nil}.  This is possible:

@example
x = 10
y = 11
z = if x < y
      true
    else
      false
    end
z # => true
@end example

@c _____________________________________

@node Symbols are not lightweight Strings
@subsubsection Symbols are not lightweight Strings
@cindex symbols

Many Ruby newbies struggle with understanding what Symbols are, and what they
can be used for.

@dfn{Symbols} can best be described as identities.  A symbol is all about who it is,
not what it is.  Fire up @command{irb} and see the difference:

@example
irb(main):001:0> :george.object_id == :george.object_id
=> true
irb(main):002:0> "george".object_id == "george".object_id
=> false
irb(main):003:0>
@end example

The @code{object_id} methods returns the identity of an Object.  If two
objects have the same @code{object_id}, they are the same (point to the same
Object in memory).
@cindex @code{object_id} methods

As you can see, once you have used a Symbol once, any Symbol with the same
characters references the same Object in memory.  For any given two Symbols
that represent the same characters, the @code{object_id}s match.
@cindex Symbol

Now take a look at the String (@code{“george”}).  The @code{object_id}s don't
match.  That means they're referencing two different objects in memory.
Whenever you use a new String, Ruby allocates memory for it.

If you're in doubt whether to use a Symbol or a String, consider what’s more
important: the identity of an object (i.e. a Hash key), or the contents (in
the example above, @code{“george”}).
@cindex Symbol or String
@cindex String or Symbol

@c _____________________________________

@node Everything is an Object
@subsubsection Everything is an Object

@example
``Everything is an object'' isn't just hyperbole.  Even classes and integers are
objects, and you can do the same things with them as with any other object:

# This is the same as
# class MyClass
#   attr_accessor :instance_var
# end
MyClass = Class.new do
  attr_accessor :instance_var
end
@end example

@c _____________________________________

@node Variable Constants
@subsubsection Variable Constants

Constants are not really constant.  If you modify an already initialized
constant, it will trigger a warning, but not halt your program.  That isn't to
say you should redefine constants, though.

@c _____________________________________

@node Naming conventions
@subsubsection Naming conventions
@cindex conventions, naming

Ruby enforces some naming conventions.  If an identifier starts with a
capital letter, it is a constant.  If it starts with a dollar sign
(@code{$}), it is a global variable.  If it starts with @code{@@}, it is an
instance variable. If it starts with @code{@@@@}, it is a class variable.
@cindex constant naming convention
@cindex global variable @code{$}
@cindex varible, global @code{$}
@cindex instance variable @code{@@}
@cindex variable, instance @code{@@}
@cindex class variable @code{@@@@}
@cindex variable, class @code{@@@@}

Method names, however, are allowed to start with capital letters.  This can
lead to confusion, as the example below shows:

@example
Constant = 10
def Constant
  11
end
@end example

Now @code{Constant} is 10, but @code{Constant()} is 11.

@c _____________________________________

@node Keyword arguments
@subsubsection Keyword arguments

Like in Python, since Ruby 2.0 methods can be defined using keyword
arguments:

@example
def deliver(from: "A", to: nil, via: "mail")
  "Sending from #@{from@} to #@{to@} via #@{via@}."
end

deliver(to: "B")
# => "Sending from A to B via mail."
deliver(via: "Pony Express", from: "B", to: "A")
# => "Sending from B to A via Pony Express."
@end example

@c _____________________________________

@node The universal truth
@subsubsection The universal truth

In Ruby, everything except @code{nil} and @code{false} is considered true.
In C, Python and many other languages, @code{0} and possibly other values,
such as empty lists, are considered false.  Take a look at the following
Python code (the example applies to other languages, too):

@example
# in Python
if 0:
  print("0 is true")
else:
  print("0 is false")
@end example

This will print @samp{“0 is false”}.  The equivalent Ruby:

@example
# in Ruby
if 0
  puts "0 is true"
else
  puts "0 is false"
end
@end example

Prints @samp{“0 is true”}.

@c _____________________________________

@node Access modifiers are Methods
@subsubsection Access modifiers are Methods
@cindex access modifiers @code{public}, @code{private}, @code{protected}
@cindex access modifier scope
@cindex scope, access modifiers

Access modifiers apply until the end of scope.

In the following Ruby code,

@example
class MyClass
  private
  def a_method; true; end
  def another_method; false; end
end
@end example

You might expect @code{another_method} to be public.  Not so.  The
@code{private} access modifier continues until the end of the scope, or until
another access modifier pops up, whichever comes first.  By default, methods
are public:

@example
class MyClass
  # Now a_method is public
  def a_method; true; end

  private

  # another_method is private
  def another_method; false; end
end
@end example

@itemize
@item
@code{public}, 
@item
@code{private} and
@item
@code{protected}
@end itemize

are really methods, so they can take parameters.  If you pass a Symbol to one
of them, that method’s visibility is altered.

@c _____________________________________

@node Method access
@subsubsection Method access

In Java, @code{public} means a method is accessible by
anyone. @code{protected} means the class's instances, instances of descendant
classes, and instances of classes in the same package can access it, but not
anyone else; and @code{private} means nobody besides the class's instances
can access the method.

Ruby differs slightly.  @code{public} is, naturally, public.  @code{private}
means the method(s) are accessible only when they can be called without an
explicit receiver.  Only @code{self} is allowed to be the receiver of a
private method call.

@code{protected} is the one to be on the lookout for.  A @code{protected}
method can be called from a class or descendant class instances, but also
with another instance as its receiver.  Here is an example (adapted from The
Ruby Language FAQ):

@example
class Test
  # public by default
  def identifier
    99
  end

  def ==(other)
    identifier == other.identifier
  end
end

t1 = Test.new  # => #<Test:0x34ab50>
t2 = Test.new  # => #<Test:0x342784>
t1 == t2       # => true

# now make `identifier' protected; it still works
# because protected allows `other' as receiver

class Test
  protected :identifier
end

t1 == t2  # => true

# now make `identifier' private

class Test
  private :identifier
end

t1 == t2
# NoMethodError: private method `identifier' called for #<Test:0x342784>
@end example

@c _____________________________________

@node Classes are open
@subsubsection Classes are open
@cindex classes, open

Ruby classes are open.  You can open them up, add to them, and change them at
any time.  Even core classes, like @file{Fixnum} or even @file{Object}, the
parent of all objects.  Ruby on Rails defines a bunch of methods for dealing
with time on @file{Fixnum}.  Watch:

@example
class Fixnum
  def hours
    self * 3600 # number of seconds in an hour
  end
  alias hour hours
end

# 14 hours from 00:00 January 1st
# (aka when you finally wake up ;)
Time.mktime(2006, 01, 01) + 14.hours # => Sun Jan 01 14:00:00
@end example

@c _____________________________________

@node Funny method names
@subsubsection Funny method names

In Ruby, methods are allowed to end with question marks or exclamation marks.
By convention, methods that answer questions end in question marks
(e.g. @code{Array#empty?}, which returns @code{true} if the receiver is
empty).  Potentially ``dangerous'' methods by convention end with exclamation
marks (e.g. methods that modify @code{self} or the arguments, @code{exit!},
etc.).  Not all methods that change their arguments end with exclamation
marks, though.  @code{Array#replace} replaces the contents of an array with the
contents of another array.  It doesn’t make much sense to have a method like
that that doesn't modify self.

@c _____________________________________

@node Singleton methods
@subsubsection Singleton methods
@cindex singleton methods

@dfn{Singleton methods} are per-object methods.  They are only available on the
Object you defined it on.

@example
class Car
  def inspect
    "Cheap car"
  end
end

porsche = Car.new
porsche.inspect # => Cheap car
def porsche.inspect
  "Expensive car"
end

porsche.inspect # => Expensive car

# Other objects are not affected
other_car = Car.new
other_car.inspect # => Cheap car
@end example

@c _____________________________________

@node Missing methods
@subsubsection Missing methods
@cindex @code{method_missing} method

Ruby doesn't give up if it can't find a method that responds to a particular
message.  It calls the @code{method_missing} method with the name of the
method it couldn't find and the arguments.  By default, @code{method_missing}
raises a @file{NameError} exception, but you can redefine it to better fit
your application, and many libraries do.  Here is an example:

@example
# id is the name of the method called, the * syntax collects
# all the arguments in an array named 'arguments'
def method_missing(id, *arguments)
  puts "Method #@{id@} was called, but not found. It has " +
       "these arguments: #@{arguments.join(", ")@}"
end

__ :a, :b, 10
# => Method __ was called, but not found. It has these
# arguments: a, b, 10
@end example

The code above just prints the details of the call, but you are free to
handle the message in any way that is appropriate.

@c _____________________________________

@node Message passing --- not function calls
@subsubsection Message passing, not function calls

A method call is really a ``message'' to another object:

@example
# This
1 + 2
# Is the same as this ...
1.+(2)
# Which is the same as this:
1.send "+", 2
@end example

@c _____________________________________

@node Blocks are Objects
@subsubsection Blocks are Objects
@cindex blocks
@cindex @code{yield}
@cindex @code{Proc}

Blocks (closures, really) are heavily used by the standard library.  To call
a block, you can either use @code{yield}, or make it a @code{Proc} by
appending a special argument to the argument list, like so:

@example
def block(&the_block)
  # Inside here, the_block is the block passed to the method
  the_block # return the block
end
adder = block @{ |a, b| a + b @}
# adder is now a Proc object
adder.class # => Proc
@end example

You can create blocks outside of method calls, too, by calling
@code{Proc.new} with a block or calling the @code{lambda} method.
@cindex @code{lambda} method

Similarly, methods are also Objects in the making:

@example
method(:puts).call "puts is an object!"
# => puts is an object!
@end example

@c _____________________________________

@node Operators are syntactic sugar
@subsubsection Operators are syntactic sugar

Most operators in Ruby are just syntactic sugar (with some precedence rules)
for method calls.  You can, for example, override @file{Fixnum}’s @code{+}
method:

@example
class Fixnum
  # You can, but please don't do this
  def +(other)
    self - other
  end
end
@end example

You don’t need C++'s @code{operator+}, etc.

You can even have array-style access if you define the @code{[]} and
@code{[]=} methods.  To define the unary @code{+} and @code{-} (think
@samp{+1} and @samp{-2}), you must define the @code{+@@} and @code{-@@}
methods, respectively.  The operators below are not syntactic sugar,
though.  They are not methods, and cannot be redefined:

@example
=, .., ..., not, &&, and, ||, or, ::
@end example

In addition, @samp{+=, *=} etc. are just abbreviations for @samp{var = var +
other_var}, @samp{var = var * other_var}, etc. and therefore cannot be
redefined.


@c .....................................

@node Learning Ruby
@subsection Learning Ruby

@url{http://rubylearning.com/, Learning Ruby}

A thorough collection of Ruby study notes for those who are new to the language
and in search of a solid introduction to Ruby’s concepts and constructs.


@c .....................................

@node Ruby Essentials
@subsection Ruby Essentials

@url{http://www.techotopia.com/index.php/Ruby_Essentials, Ruby Essentials}

Ruby Essentials is a free on-line book designed to provide a concise and easy
to follow [sic] guide to learning Ruby.

@c _____________________________________


@node Interactive Ruby Execution
@subsubsection Interactive Ruby Execution
@cindex @command{irb} tool
@cindex Interactive Ruby (IRB)

Interactive Ruby code is entered using the @command{irb} tool.

Once irb is installed, launch it as follows:

@example
$ irb
irb(main):001:0>
@end example

Now, we can begin to execute Ruby code:

@example
irb(main):001:0> puts 'Hello Ruby'
Hello Ruby
=> nil
irb(main):002:0>
@end example

@c _____________________________________

@node Block Ruby Comments
@subsubsection Block Ruby Commenets
@cindex comment block markers
@cindex block ruby comments
@cindex @code{=begin}
@cindex @code{=end}
@cindex comments, multi-line

Multiple lines of text or code can be defined as comments using the Ruby
@code{=begin} and @code{=end} comment markers.  These are known as the @dfn{comment
block markers}.

@c _____________________________________

@node Variable Scope
@subsubsection Variable Scope
@cindex variable scope
@cindex scope, variables
@cindex variables, 4 types
@cindex constant

@dfn{Scope} defines where in a program a variable is accessible.  Ruby has four
types of variable scope, plus one constant type.  Each variable type is
declared by using a special character at the start of the variable name as
outlined in the following table.

@multitable @columnfractions .25 .25
@item local @tab [a-z] or _
@item global @tab @code{$}
@item instance @tab @code{@@}
@item class @tab @code{@@@@}
@item constant @tab [A-Z]
@end multitable

@subheading Detecting The Scope Of A Variable
@cindex scope, determine programmatically
@cindex @code{defined?} method

Sometimes you need to find out the scope programmatically.  A useful technique
to find out the scope of a variable is to use the @code{defined?}  method.
@code{defined?}  will return the scope of the variable referenced, or
@code{nil} if the variable is not defined in the current context.

@example
x = 10
=> 10
defined? x
=> "local-variable"

$x = 10
=> 10
defined? $x
=> "global-variable"
@end example

@subheading Predefined Global Variables
@cindex global variables, predefined

@xref{Globals}

@multitable @columnfractions .1 .9
@item @code{$@@} @tab The location of latest error

@item @code{$_} @tab The string last read by gets

@item @code{$.} @tab The line number last read by interpreter

@item @code{$&} @tab The string last matched by regexp

@item @code{$~} @tab The last regexp match, as an array of subexpressions

@item @code{$n} @tab The nth subexpression in the last match (same as $~[n])

@item @code{$=} @tab The case-insensitivity flag

@item @code{$/} @tab The input record separator

@item @code{$\} @tab The output record separator

@item @code{$0} @tab The name of the ruby script file currently executing

@item @code{$*} @tab The command line arguments used to invoke the script

@item @code{$$} @tab The Ruby interpreter's process ID

@item @code{$?} @tab The exit status of last executed child process

@end multitable




@c .....................................

@node Learn to Program
@subsection Learn to Program

@url{http://pine.fm/LearnToProgram/, Learn to Program}

A wonderful little tutorial by Chris Pine for programming newbies.  If you don’t
know how to program, start here.


@c .....................................

@url{http://ruby.learncodethehardway.org/, Learn Ruby the Hard Way}








@c -----------------------------------------------------------------------------

@node Manuals
@section Manuals

Manuals

@c .....................................


@node Ruby User's Guide
@subsection Ruby User's Guide

Translated from the original Japanese version written by Yukihiro Matsumoto
(the creator of Ruby), this version, by Goto Kentaro and Mark Slagell, is a
nice overview of many aspects of the Ruby language.

@url{http://www.rubyist.net/~slagell/ruby/, Ruby User's Guide}

@c _____________________________________


@node Ruby User's Guide On What Ruby IS
@subsubsection On What Ruby Is

Ruby is ``an interpreted scripting language for quick and easy object-oriented
programming'' --- what does this mean?
@cindex Ruby, what it is

@table @i

@item interpreted scripting language:
@itemize
@item
ability to make operating system calls directly
@item
powerful string operations and regular expressions
@item
immediate feedback during development
@end itemize

@item quick and easy:
@itemize
@item
variable declarations are unnecessary
@item
variables are not typed
@item
syntax is simple and consistent
@item
memory management is automatic
@end itemize

@item object oriented programming:
@itemize
@item
everything is an object
@item
classes, methods, inheritance, etc.
@item
singleton methods
@item
``mixin'' functionality by module
@item
iterators and closures
@end itemize

@item also:
@itemize
@item
multiple precision integers
@item
convenient exception processing
@item
dynamic loading
@item
threading support
@end itemize

@end table

@c _____________________________________

@node Ruby User's Guide On Simple Examples
@subsubsection On Simple Examples

@subheading Factorial in Ruby
@cindex factorial in Ruby
@pindex fact.rb

Let's write a function to compute factorials.  The mathematical definition of
@dfn{n factorial} is:

@display
n! = 1                (when n==0)
   = n * (n-1)!       (otherwise)
@end display

In ruby, this can be written as:

@(fact.rb@)=
# Program to find the factorial of a number
# Save this as fact.rb

def fact(n)
  if n == 0
    1
  else
    n * fact(n-1)
  end
end

puts fact(ARGV[0].to_i)

@

@post_create fact.rb mv fact.rb src/

@subsubheading Command Line Arguments ---  In Array @var{ARGV}
@cindex command line arguments in @code{ARGV}
@cindex @code{to_i} method

@code{ARGV} is an array which contains the command line arguments, and
@code{to_i} converts a character string to an integer.@footnote{Ruby
does not convert strings into integers automatically like perl does.}

@subsubheading The @code{end} Statement

You may notice the repeated occurrence of @code{end}.  Ruby has been called
``Algol-like'' because of this.  (Actually, the syntax of ruby more closely
mimics that of a language named @url{https://www.eiffel.org/,Eiffel}.)

@subsubheading Takeaway --- @code{return} Statement Optional

You may also notice the lack of a @code{return} statement.

@quotation
[A @code{return} statement] is unneeded because @strong{a ruby function
returns the last thing that was evaluated in it}.  Use of a @code{return}
statement here is permissible but unnecessary.
@end quotation
@cindex Algol and Ruby
@cindex Eiffel and Ruby
@cindex @code{return} statement unnecessary

@subsubheading Running @file{fact.rb}

Ruby can deal with any integer which is allowed by your machine's memory.  So
400! can be calculated:

@example
% ruby fact.rb 1
1
% ruby fact.rb 5
120

% ruby fact.rb 40
815915283247897734345611269596115894272000000000

% ruby fact.rb 400
64034522846623895262347970319503005850702583026002959458684
44594280239716918683143627847864746326467629435057503585681
08482981628835174352289619886468029979373416541508381624264
61942352307046244325015114448670890662773914918117331955996
44070954967134529047702032243491121079759328079510154537266
72516278778900093497637657103263503315339653498683868313393
52024373788157786791506311858702618270169819740062983025308
59129834616227230455833952075961150530223608681043329725519
48526744322324386699484224042325998055516106359423769613992 
31917134063858996537970147827206606320217379472010321356624 
61380907794230459736069956759583609615871512991382228657857 
95493616176544804532220078258184008484364155912294542753848 
03558374518022675900061399560145595206127211192918105032491 
00800000000000000000000000000000000000000000000000000000000 
0000000000000000000000000000000000000000000
@end example

@subheading The Input/Evaluation Loop

When you invoke ruby with no arguments, it reads commands from standard input
and executes them after the end of input:

@example
% ruby
puts "hello world"
puts "good-bye world"
^D
hello world
good-bye world
@end example

@anchor{RubyEval}
@subsubheading Ruby Evaluation Program --- @file{eval.rb}
@cindex @file{eval.rb}

Ruby also comes with a program called @file{eval.rb} (@pxref{Ruby Eval Utility})
that allows you to enter ruby code from the keyboard in an interactive
loop, showing you the results as you go.  It will be used extensively
through the rest of this guide.  You should use this enhanced
@url{http://www.rubyist.net/~slagell/ruby/eval.txt, @file{eval.rb}}
that adds visual indenting assistance, warning reports, and color
highlighting.

Here is a short @file{eval.rb} session:

@example
% ruby eval.rb
ruby> puts "Hello, world."
Hello, world.
   nil
ruby> exit
@end example

@samp{hello world} is produced by @code{puts}.  The next line, in this case
@code{nil}, reports on whatever was last evaluated;

@subsubheading No Distinction Between Statement and Expression
@cindex statement vs expression
@cindex expression vs statement

@quotation
Ruby does not distinguish between statements and expressions, so evaluating a
piece of code basically means the same thing as executing it.
@end quotation

Here, @code{nil} indicates that @code{puts} does not return a meaningful
value.  Note that we can leave this interpreter loop by saying
@command{exit}, although @key{C-D} still works too.

@c _____________________________________

@node Ruby User's Guide on Strings
@subsubsection On Strings
@cindex Strings

@subheading Quoting Strings
@cindex strings, quoting syntax and semantics

A string may be double-quoted (@samp{"..."}) or single-quoted (@samp{'...'}).

Double- and single-quoting have different effects in some cases.  A
double-quoted string allows character escapes by a leading backslash, and the
evaluation of embedded expressions using @code{#@{@}}.  A single-quoted string
does not do this interpreting; what you see is what you get.

@subheading String Methods
@cindex string @code{+} and @code{*}

You can concatenate strings with @code{+}, and repeat a string many times with
@code{*}.

Here are some things you can do with strings.

@table @i
@item Concatenation
@samp{word = "fo" + "o"} @result{} @samp{"foo"}
@item Repetition
@samp{word = word * 2} @result{} @samp{"foofoo"}
@item Extracting characters
(note that characters are integers in ruby)@*
@samp{word[0]} @result{} @samp{102} @samp{# 102 is ASCII code of `f'}@*
@samp{word[-1]} @result{} @samp{111} @samp{# 111 is ASCII code of `o'}
@item Extracting substrings
@example
ruby> herb = "parsley"
   "parsley"
ruby> herb[0,1]
   "p"
ruby> herb[-2,2]
   "ey"
ruby> herb[0..3]
   "pars"
ruby> herb[-5..-2]
   "rsle"
@end example
@item Testing for equality:
@samp{"foo" == "foo"} @result{} @samp{true}@*
@samp{"foo" == "bar"} @result{} @samp{false}
@end table

@c _____________________________________

@node Ruby User's Guide On Puzzle Program
@subsubsection On Puzzle Program
@pindex guess.rb

@(guess.rb@)=
# save this as guess.rb
words = ['foobar', 'baz', 'quux']
secret = words[rand(3)]

print "guess? "
while guess = STDIN.gets
  guess.chop!
  if guess == secret
    puts "You win!"
    break
  else
    puts "Sorry, you lose."
  end
  print "guess? "
end
puts "The word was ", secret, "."
@

@post_create guess.rb mv guess.rb src/

@subheading New Control Structure @code{while}
@cindex @code{while}

In this program, a new control structure, @code{while}, is used.  The
code between @code{while} and its corresponding @code{end} will
execute repeatedly as long as some specified condition remains true.
In this case, @samp{guess=STDIN.gets} is both an active statement
(collecting a line of user input and storing it as guess), and a
condition (if there is no input, guess, which repesents the value of
the whole @samp{guess=STDIN.gets} expression, has a @code{nil} value,
causing while to stop looping).

@subheading Standard Input Object --- @var{STDIN}
@cindex standard input object @var{stdin}
@cindex @var{stdin}
@cindex @var{stdin}.@code{gets}
@cindex read one line from standard input

@var{STDIN} is the standard input object.  Usually, @samp{guess=gets}
does the same thing as @samp{guess=STDIN.gets}.  In line 5 we read one
line from standard input by the method @var{STDIN}.@code{gets}.  If
@var{EOF} (end of file) occurs while getting the line, @code{gets}
returns @code{nil}.  So the code associated with this @code{while} will
repeat until it sees @key{^D} signifying the end of input.

@subheading @code{guess.chop!}
@cindex @code{guess.chop!}

@code{guess.chop!} in line 6 deletes the last character from
@code{guess}; in this case it will always be a @code{newline}
character, @code{gets} includes that character to reflect the user's
@key{return} keystroke, but we're not interested in it.

@subheading Printing Variables
@cindex @code{puts}

In line 15 we print the secret word.  We have written this as a
@code{puts} (@code{put s}tring) statement with two arguments, which
are printed one after the other; but it would have been equally
effective to do it with a single argument, writing secret as
@code{#@{secret@}} to make it clear that it is a variable to be
evaluated, not a literal word to be printed:

@example
puts "the word is #@{secret@}."
@end example

It builds a single string and presents it as a single argument to
@code{puts}.

@subheading @code{print} vs @code{puts}

Also, we are by now used to the idea of using @code{puts} for standard
script output, but this script uses @code{print} instead, in lines 4
and 13.  They are not quite the same thing.  @code{print} outputs
exactly what it is given; @code{puts} also ensures that the output
line ends.  Using @code{print} in lines 4 and 13 leaves the cursor
next to what was just printed, rather than moving it to the beginning
of the next line.  This creates a recognizable prompt for user
input.  In general, the four output calls below are equivalent:

@subheading Flushing Standard Output
@cindex flush standard output
@cindex buffering

Sometimes a text window is programmed to @emph{buffer} output for the
sake of speed, collecting individual characters and displaying them
only when it is given a @key{newline} character.  So if the guessing
game script misbehaves by not showing the prompt lines until after the
user supplies a guess, @emph{buffering} is the likely culprit.  To
make sure this doesn't happen, you can ``flush'' the output as soon as
you have printed the prompt.  It tells the standard output device (an
object named @var{STDOUT}), ``don't wait; display what you have in your
buffer right now.''  @samp{04 print "guess? "; STDOUT.flush}.  


@c _____________________________________

@node Ruby User's Guide on Regular Expressions
@subsubsection Regular Expressions
@cindex regular expressions

@example
ruby> def chab(s)   # "contains hex in angle brackets"
    |    (s =~ /<0(x|X)(\d|[a-f]|[A-F])+>/) != nil
    | end
  nil
ruby> chab "Not this one."
  false
ruby> chab "Maybe this? @{0x35@}"    # wrong kind of brackets
  false
ruby> chab "Or this? <0x38z7e>"    # bogus hex digit
  false
ruby> chab "Okay, this: <0xfc0004>."
  true
@end example

@subheading Program To Help Experiment With Regular Expressions

Here is a little program to help you experiment with regular
expressions.  Store it as @file{regx.rb} and run it by typing @kbd{ruby
regx.rb} at the command line.

The program requires input twice, once for a string and once for a
regular expression.  The string is tested against the regular
expression, then displayed with all the matching parts highlighted in
reverse video.

@pindex @file{regx.rb}
@(regx.rb@)=
# Requires an ANSI terminal!

st = "\033[7m"
en = "\033[m"

puts "Enter an empty string at any time to exit."

while true
  print "str> "; STDOUT.flush; str = gets.chop
  break if str.empty?
  print "pat> "; STDOUT.flush; pat = gets.chop
  break if pat.empty?
  re = Regexp.new(pat)
  puts str.gsub(re,"#{st}\\&#{en}")
end
@

@post_create regx.rb mv regx.rb src/

@subheading Explication of @file{regx.rb}

@subsubheading The @code{break} Statement
@cindex @code{break} statement

In line 6, the condition for @code{while} is hardwired to @code{true},
so it forms what looks like an infinite loop.  However we put @code{break}
statements in the 8th and 10th lines to escape the loop.

@subsubheading @code{if} Modifiers
@cindex @code{if} modifier

@example
break if str.empty?
break if pat.empty?
@end example

These two @code{break}s are also an example of @dfn{if modifiers}.  An
@code{if} modifier executes the statement on its left hand side if and
only if the specified condition is satisfied.  This construction is
unusual in that it operates logically from right to left, but it is
provided because for many people it mimics a similar pattern in
natural speech.  It also has the advantage of brevity, as it needs no
@code{end} statement to tell the interpreter how much of the following
code is supposed to be conditional.  An @code{if} modifier is
conventionally used in situations where a statement and condition are
short enough to fit comfortably together on one script line.

Note the difference in the user interface compared to the
string-guessing script.  This one lets the user quit by hitting the
@key{Return} key on an empty line.  We are testing for emptiness of the
input string, not for its nonexistence.

@subsubheading Nondestructive @code{chops} vs Destructive @code{chops!}
@cindex @code{chop}
@cindex @code{chop!}
@cindex destructive method vs nondestructive method

In lines 7 and 9 we have a @dfn{non-destructive} @code{chop}; again,
we're getting rid of the unwanted newline character we always get from
@code{gets}.  Add the exclamation point, and we have a
@dfn{destructive} chop.  What's the difference? In ruby, we
conventionally attach @kbd{!} or @kbd{?} to the end of certain method
names.  The exclamation point (@kbd{!}, sometimes pronounced aloud as
``bang!'') indicates something potentially destructive, that is to
say, something that can change the value of what it touches.
@code{chop!} affects a string directly, but @code{chop} gives you a
chopped copy without damaging the original.

@subsubheading @code{chomp} And @code{chomp!}

You'll also sometimes see @code{chomp} and @code{chomp}! used.  These
are more selective: the end of a string gets bit off only if it
happens to be a newline.  So for example, @code{"XYZ".chomp!} does
nothing.  If you need a trick to remember the difference, think of a
person or animal tasting something before deciding to take a bite, as
opposed to an axe chopping indiscriminately.

@subsubheading Predicate Method Naming Convention
@cindex predicate method
@cindex predicate method naming convention

The other method naming convention appears in lines 8 and 10.  A
question mark (@kbd{?}, sometimes pronounced aloud as ``huh?'')
indicates a @dfn{predicate} method, one that can return either true or
false.

@subsubheading Regular Expressions At Work
@cindex regular expressions at work
@cindex @code{gsub} method

Line 11 creates a regular expression object out of the string supplied
by the user.  The real work is finally done in line 12, which uses
@code{gsub} to globally substitute each match of that expression with
itself, but surrounded by ansi markups; also the same line outputs the
results.

In line 12 we see @code{\\&}.  This is a little tricky.  Since the
replacement string is in double quotes, the pair of backslashes will
be interpreted as a single backslash; what @code{gsub} actually sees
will be @code{\&}, and that happens to be a special code that refers
to whatever matched the pattern in the first place.  So the new string,
when displayed, looks just like the old one, except that the parts
that matched the given pattern are highlighted in inverse video.

@subheading The @code{=~} Matching Operator
@cindex @code{=~} matching operator
@cindex matching operator

@code{=~} is a matching operator with respect to regular expressions;
it returns the position in a string where a match was found, or
@code{nil} if the pattern did not match.

@example
ruby> "abcdef" =~ /d/
   3
ruby> "aaaaaa" =~ /d/
   nil
@end example

@c _____________________________________

@node Ruby User's Guide On Arrays And Hashes
@subsubsection On Arrays And Hashes
@cindex arrays

@subheading Creating An Array
@cindex array, creating

You can create an array by listing some items within square brackets
(@code{[]}) and separating them with commas.  Ruby's arrays can accomodate
diverse object types.  @samp{ary = [1, 2, "3"]} @result{} @samp{[1, 2, "3"]}

@subheading Concatenating and Repeating Arrays
@cindex arrays, concatenating
@cindex arrays, repeating

Arrays can be concatenated or repeated just as strings can.  @samp{ary
+ ["foo", "bar"]} @result{} @samp{[1, 2, "3", "foo", "bar"]};
@samp{ary * 2} @result{} @samp{[1, 2, "3", 1, 2, "3"]}.

@subheading Referring To Elements of Arrays
@cindex array, referring to elements

We can use index numbers to refer to any part of a array.
@samp{ary[0]} @result{} @samp{1}; @samp{ary[0,2]} @result{} @samp{[1, 2]};
@samp{ary[0..1]} @result{} @samp{[1, 2]}.

@subheading Converted To And From Strings
@cindex array, converting to and from string
@cindex @code{join}
@cindex @code{split}

Arrays can be converted to and from strings, using @code{join} and
@code{split} respecitvely.  @samp{str = ary.join(":")} @result{} @samp{"1:2:3"}.
@samp{str.split(":")} @result{} @samp{["1", "2", "3"]}.

@subheading Hashes
@cindex hash
@cindex dictionary
@cindex associative array
@cindex key, for hash

An @dfn{associative array} has elements that are accessed not by
sequential index numbers, but by keys which can have any sort of
value.  Such an array is sometimes called a @dfn{hash} or
@dfn{dictionary}; in the ruby world, we prefer the term hash.  A hash
can be constructed by quoting pairs of items within curly braces
(@code{@{@}}).  You use a key to find something in a hash, much as you
use an index to find something in an array.

@example
ruby> h = @{1 => 2, "2" => "4"@}
   @{1=>2, "2"=>"4"@}
ruby> h[1]
   2
ruby> h["2"]
   "4"
ruby> h[5]
   nil
ruby> h[5] = 10    # appending an entry
   10
ruby> h
   @{5=>10, 1=>2, "2"=>"4"@}
ruby> h.delete 1   # deleting an entry by key
   2
ruby> h[1]
   nil
ruby> h
   @{5=>10, "2"=>"4"@}
@end example

@c _____________________________________

@node Ruby User's Guide On Control Structures
@subsubsection On Control Structures
@cindex control structures

@subheading The @code{case} Statement

We use the @code{case} statement to test a sequence of conditions.
This is superficially similar to @code{switch} in C and Java but is
considerably more powerful, as we shall see.

@example
ruby> i=8
ruby> case i
    | when 1, 2..5
    |   puts "1..5"
    | when 6..10
    |   puts "6..10"
    | end
6..10
   nil
@end example

@subsubheading Testing For A Range Of Values
@cindex range expression

@code{2..5} is an expression which means the @emph{range} between 2
and 5, inclusive.  The following expression tests whether the value of
@code{i} falls within that range: @samp{(2..5) === i}.

@subsubheading The Relationship Operator
@cindex relationship operator @code{===}
@cindex @code{===}

@code{case} internally uses the @emph{relationship} operator
@code{===} to check for several conditions at a time.  In keeping with
ruby's object oriented nature, @code{===} is interpreted suitably for
the object that appeared in the @code{when} condition.

For example, the following code tests string equality in the first
@code{when}, and regular expression matching in the second @code{when}.

@example
ruby> case 'abcdef'
    | when 'aaa', 'bbb'
    |   puts "aaa or bbb"
    | when /def/
    |   puts "includes /def/"
    | end
includes /def/
   nil
@end example
   
@subheading The @code{while} Statement
@cindex @code{while} statement
@cindex loops using @code{while}

Ruby provides convenient ways to construct loops, although you will find in the
next chapter that learning how to use iterators will make it unnecessary to
write explicit loops very often.

A @code{while} is a repeated @code{if}.  We used it in our word-guessing puzzle
and in the regular expression programs (see the previous chapter); there, it
took the form @samp{while condition ... end} surrounding a block of code to be
repeated while condition was true.  But @code{while} and @code{if} can as
easily be applied to individual statements: @samp{puts "It's zero." if i==0}
@result{} @samp{It's zero.} and @samp{puts i+=1 while i<3} @result{} @samp{1 2
3}.

@subsubheading Negated Conditions
@cindex @code{unless}
@cindex @code{until}
@cindex negated conditions

Sometimes you want to negate a test condition.  An @code{unless} is a negated
@code{if}, and an @code{until} is a negated @code{while}.

@subheading Interrupting A Loop
@cindex @code{break}
@cindex @code{next}
@cindex @code{redo}
@cindex @code{return}
@cindex loop interrupts

There are four ways to interrupt the progress of a loop from
inside.

@enumerate
@item
First, @code{break} means, as in C, to escape from the loop entirely.
@item
Second, @code{next} skips to the beginning of the next iteration of
the loop (corresponding to C's continue).
@item
Third, ruby has @code{redo}, which restarts the current iteration.
@item
The fourth way to get out of a loop from the inside is @code{return}.  An
evaluation of @code{return} causes escape not only from a loop but from the
method that contains the loop.  If an argument is given, it will be returned
from the method call, otherwise @code{nil} is returned.
@end enumerate

The following is C code illustrating the meanings of @code{break}, @code{next},
and @code{redo}:

@example
while (condition) @{
label_redo:
   goto label_next;        /* ruby's "next" */
   goto label_break;       /* ruby's "break" */
   goto label_redo;        /* ruby's "redo" */
   ...
   ...
label_next:
@}
label_break:
...
@end example

@subheading The @code{for} Statement
@cindex @code{for} statement
@cindex @code{for} loop
@cindex loop, @code{for}
@cindex collection, looping over elements using @code{for}

C programmers will be wondering by now how to make a @code{for} loop.  Ruby's
@code{for} can serve the same purpose, but adds some flexibility.  The loop
below runs once for each element in a collection (array, hash, numeric
sequence, etc.), but doesn't make the programmer think about indices:

@example
for elt in collection
  # ... here, elt refers to an element of the collection
end
@end example

@cindex collection, looping over a range of values using @code{for}
The collection can be a range of values (this is what most people mean when
they talk about a @code{for} loop):

@example
ruby> for num in (4..6)
    |    puts num
    | end
4
5
6
   4..6
@end example
   
@subsubheading @code{for} Equivalent To @code{each}
@cindex @code{for} equivalent to @code{each}
@cindex @code{each} equivalent to @code{for}
@cindex iterator as substitute for @code{for} loop

But we're getting ahead of ourselves.  @code{for} is really another way of
writing @code{each}, which, it so happens, is our first example of an iterator.
The following two forms are equivalent:

@example
#  If you're used to C or Java, you might prefer this.
for element in collection
  ...
end

#  A Smalltalk programmer might prefer this.
collection.each @{|element|
  ...
@}
@end example

Iterators can often be substituted for conventional loops, and once you get
used to them, they are generally easier to deal with.

@c _____________________________________

@node Ruby User's Guide On Iterators
@subsubsection Ruby User's Guide On Iterators
@cindex iterators, Ruby User's Guide

Iterators are not an original concept with ruby.  They are in common use in
object-oriented languages.  They are also used in Lisp, though there they are
not called iterators.  However the concept of iterator is an unfamiliar one for
many so it should be explained in more detail.

An @dfn{iterator} is something that does the same thing many times.

@subheading Ruby Allows Us To Define Iterators
@cindex iterator, defining

So every OOP language includes some facilities for iteration.  Some languages
provide a special class for this purpose; ruby allows us to define iterators
directly.

@subsubheading Iterators In String
@cindex iterators of String class

Ruby's String type has some useful iterators:

@cindex @code{each_byte}
@code{each_byte} is an iterator for each character in the string.  Each
character is substituted into the local variable c: @samp{"abc".each_byte@{|c|
printf "<%c>", c@}; print "\n"}.

The @code{each_byte} iterator is both conceptually simpler and more likely to
continue to work even if the String class happens to be radically modified in
the future.  One benefit of iterators is that they tend to be robust in the
face of such changes; indeed that is a characteristic of good code in general.

@cindex @code{each_line}
Another iterator of String is @code{each_line}: @samp{"a\nb\nc\n".each_line@{|l| print l@}}.

The tasks that would take most of the programming effort in C (finding line
delimiters, generating substrings, etc.) are easily tackled using iterators.

The @code{for} statement appearing in the previous chapter does iteration by
way of an @code{each} iterator.  String's @code{each} works the same as
@code{each_line}, so let's rewrite the above example with @code{for}:

@example
ruby> for l in "a\nb\nc\n"
    |   print l 
    | end
a
b
c
   nil
@end example

@subheading Control Structures @code{retry} And @code{redo}
@cindex @code{retry}
@cindex @code{redo}
@cindex control structures @code{retry} and @code{redo}

We can use a control structure @code{retry} in conjunction with an iterated
loop, and it will retry the loop from the beginning.  @code{redo} causes just
the current iteration of the loop to be redone.

@subheading @code{yield} In Iterators
@cindex @code{yield}

@code{yield} occurs sometimes in a definition of an iterator.
@dfn{@code{yield}} moves control to the block of code that is passed to the
iterator (this will be explored in more detail in the chapter about procedure
objects).

The following example defines an iterator @code{repeat}, which repeats a block
of code the number of times specified in an argument.

@example
ruby> def repeat(num)
    |   while num > 0
    |     yield
    |     num -= 1
    |   end
    | end
   nil
ruby> repeat(3) @{ puts "foo" @}
foo
foo
foo
   nil
@end example

With @code{retry}, one can define an iterator which works something like ruby's
standard @code{while}.

@example
ruby> def WHILE(cond)
    |   return if not cond
    |   yield
    |   retry
    | end
   nil
ruby> i=0; WHILE(i<3) @{ print i; i+=1 @}
012   nil
@end example

@subheading Summary On Iterarors

There are a few restrictions, but you can write your original iterators; and in
fact, whenever you define a new data type, it is often convenient to define
suitable iterators to go with it.  In this sense, the above examples are not
terribly useful.  We can talk about practical iterators after we have a better
understanding of what classes are.

@c _____________________________________

@node Ruby User's Guide On Object-Oriented Thinking
@subsubsection On Object-Oriented Thinking

Ruby claims to be an object oriented scripting language; but what exactly does
@dfn{object oriented} mean?  Rather than sum it too quickly, let's think for a
moment about the traditional programming paradigm.

Traditionally, a programming problem is attacked by coming up with some kinds
of @emph{data representations}, and @emph{procedures} that operate on that
data.  Under this model, data is inert, passive, and helpless; it sits at the
complete mercy of a large procedural body, which is active, logical, and
all-powerful.

The problem with this approach is that programs are written by programmers, who
are only human and can only keep so much detail clear in their heads at any one
time.  As a project gets larger, its procedural core grows to the point where
it is difficult to remember how the whole thing works.  Minor lapses of
thinking and typographical errors become more likely to result in
well-concealed bugs.  Complex and unintended interactions begin to emerge
within the procedural core, and maintaining it becomes like trying to carry
around an angry squid without letting any tentacles touch your face.  There are
guidelines for programming that can help to minimize and localize bugs within
this traditional paradigm, but there is a better solution that involves
fundamentally changing the way we work.

What object-oriented programming does is to let us delegate most of the mundane
and repetitive logical work to the data itself; it changes our concept of data
from passive to active.  Put another way,

@itemize
@item
We stop treating each piece of data as a box with an open lid that lets us
reach in and throw things around.
@item
We start treating each piece of data as a working machine with a closed lid and
a few well-marked switches and dials.
@end itemize

What is described above as a ``machine'' may be very simple or complex on the
inside; we can't tell from the outside, and we don't allow ourselves to open
the machine up (except when we are absolutely sure something is wrong with its
design), so we are required to do things like flip the switches and read the
dials to interact with the data.  Once the machine is built, we don't want to
have to think about how it operates.

You might think we are just making more work for ourselves, but this approach
tends to do a nice job of preventing all kinds of things from going wrong.

It's worth noting here that the use of an OO language will not enforce proper
OO design.  Indeed it is possible in any language to write code that is
unclear, sloppy, ill-conceived, buggy, and wobbly all over.  What ruby does for
you (as opposed, especially, to C++) is to make the practice of OO programming
feel natural enough that even when you are working on a small scale you don't
feel a necessity to resort to ugly code to save effort.  We will be discussing
the ways in which ruby accomplishes that admirable goal as this guide
progresses; the next topic will be the "switches and dials" (object methods)
and from there we'll move on to the "factories" (classes).

@c _____________________________________

@node Ruby User's Guide on Methods
@subsubsection On Methods
@cindex methods

@subheading What Is A Method?
@cindex messages to objects

What is a @dfn{method}?  In OO programming, we don't think of operating on data
directly from outside an object; rather, objects have some understanding of how
to operate on themselves (when asked nicely to do so).  You might say we pass
messages to an object, and those messages will generally elicit some kind of an
action or meaningful reply.  This ought to happen without our necessarily
knowing or caring how the object really works inside.  The tasks we are allowed
to ask an object to perform (or equivalently, the messages it understands) are
that object's methods.

@subheading Invoking Methods Of An Object
@cindex invoke method
@cindex method invocation
@cindex dot notation

In ruby, we invoke a method of an object with dot notation (just as in C++ or
Java).  The object being talked to is named to the left of the dot.
@samp{"abcdef".length}.  Intuitively, this string object is being asked how
long it is.  Technically, we are invoking the @code{length} method of the
object @code{abcdef}.

Other objects may have a slightly different interpretation of length, or none
at all.  Decisions about how to respond to a message are made on the fly,
during program execution, and the action taken may change depending on what a
variable refers to.  What we mean by length can vary depending on what object
we are talking about.

@subheading Polymorphism
@cindex polymorphism

An array knows something about what it means to be an array.  Pieces of data in
ruby carry such knowledge with them, so that the demands made on them can
automatically be satisfied in the various appropriate ways.  This relieves the
programmer from the burden of memorizing a great many specific function names,
because a relatively small number of method names, corresponding to concepts
that we know how to express in natural language, can be applied to different
kinds of data and the results will be what we expect.  This feature of OO
programming languages (which, IMHO, Java has done a poor job of exploiting) is
called @dfn{polymorphism}.

@subheading Errors Are Raised
@cindex errors in OO
@cindex raise an error

When an object receives a message that it does not understand, an error is
@dfn{raised}: @samp{ERR: (eval):1: undefined method `length' for 5(Fixnum)}.
So it is necessary to know what methods are acceptable to an object, though we
need not know how the methods are processed.

@subheading Arguments To A Method
@cindex arguments to a method

If arguments are given to a method, they are generally surrounded by
parentheses, @samp{object.method(arg1, arg2)}, but they can be omitted if doing
so does not cause ambiguity, @samp{object.method arg1, arg2}.

@subheading The Special Variable @code{self}
@cindex @code{self}

There is a special variable self in ruby; it refers to whatever object calls a
method.  This happens so often that for convenience the @code{self.} may be
omitted from method calls from an object to itself:
@samp{self.method_name(args...)} is the same as @samp{method_name(args...)}.

What we would think of traditionally as a function call is just this
abbreviated way of writing method invocations by self.  This makes ruby what is
called a pure object oriented language.

@c _____________________________________

@node Ruby User's Guide on Classes
@subsubsection On Classes
@cindex classes
@cindex instance of a class

In OO programming terminology, a category of objects like ``dog'' is called a
class, and some specific object belonging to a class is called an instance of
that class.

@subheading Making An Object From A Class
@cindex class definition
@cindex @code{class} keyword
@cindex @code{end} keyword
@cindex keywords @code{class} and @code{end}
@cindex @code{def} keyword
@cindex keyword @code{def}
@cindex method definition

Generally, to make an object in ruby or any other OO language, first one
defines the characteristics of a class, then creates an instance.  To
illustrate the process, let's first define a simple @code{Dog} class.

@example
ruby> class Dog
    |   def speak
    |     puts "Bow Wow"
    |   end
    | end
   nil
@end example

In ruby, a @dfn{class definition} is a region of code between the keywords
@code{class} and @code{end}.  A @code{def} inside this region begins the
definition of a method of the class, which as we discussed in the previous
chapter, corresponds to some specific behavior for objects of that class.

@subheading Make A New Instance From A Class Definition
@cindex @code{new} keyword
@cindex keyword @code{new}
@cindex instantiating a class

Now that we have defined a @code{Dog} class, we can use it to make a dog:

@example
ruby> pochi = Dog.new
   #<Dog:0xbcb90>
@end example

We have made a new instance of the class @code{Dog}, and have given it the name
@code{pochi}.  The @code{new} method of any class makes a new instance.
Because @code{pochi} is a @code{Dog} according to our class definition, it has
whatever properties we decided a @code{Dog} should have.  Since our idea of
@code{Dog}-ness was very simple, there is just one trick we can ask
@code{pochi} to do.

@example
ruby> pochi.speak
Bow Wow
   nil
@end example

Making a new instance of a class is sometimes called @dfn{instantiating} that
class.  We need to have a dog before we can experience the pleasure of its
conversation; we can't merely ask the @code{Dog} class to bark for us.

@c _____________________________________

@node Ruby User's Guide on Inheritance
@subsubsection On Inheritance
@cindex inheritance
@cindex superclass
@cindex subclass

Our classification of objects in everyday life is naturally hierarchical.  We
know that all cats are mammals, and all mammals are animals.  Smaller classes
@dfn{inherit} characteristics from the larger classes to which they belong.  If
all mammals breathe, then all cats breathe.

We can express this concept in ruby:

@example
ruby> class Mammal
    |   def breathe
    |     puts "inhale and exhale"
    |   end
    | end
   nil
ruby> class Cat<Mammal
    |   def speak
    |     puts "Meow"
    |   end
    | end
   nil
@end example

Though we didn't specify how a @code{Cat} should breathe, every cat will
inherit that behavior from the @code{Mammal} class since @code{Cat} was defined
as a subclass of @code{Mammal}.  (In OO terminology, the smaller class is a
@dfn{subclass} and the larger class is a @dfn{superclass}.)  Hence from a
programmer's standpoint, cats get the ability to breathe for free; after we add
a @code{speak} method, our cats can both breathe and speak.

@example
ruby> tama = Cat.new
   #<Cat:0xbd80e8>
ruby> tama.breathe
inhale and exhale
   nil
ruby> tama.speak
Meow
   nil
@end example

@subheading Differential Programming

There will be situations where certain properties of the superclass should not
be inherited by a particular subclass.  Though birds generally know how to fly,
penguins are a flightless subclass of birds.

@example
ruby> class Bird
    |   def preen
    |     puts "I am cleaning my feathers."
    |   end
    |   def fly
    |     puts "I am flying."
    |   end
    | end
   nil
ruby> class Penguin<Bird
    |   def fly
    |     fail "Sorry. I'd rather swim."
    |   end
    | end
   nil
@end example

@cindex differential programming
Rather than exhaustively define every characteristic of every new
class, we need only to append or to redefine the differences between
each subclass and its superclass.  This use of inheritance is
sometimes called @dfn{differential programming}.  It is one of the
benefits of object-oriented programming.

@c _____________________________________

@node Ruby User's Guide on Redefinition Of Methods
@subsubsection On Redefinition of Methods
@cindex method redefinition
@cindex redefine a method

In a subclass, we can change the behavior of the instances by
redefining superclass methods.

@example
ruby> class Human
    |   def identify
    |     puts "I'm a person."
    |   end
    |   def train_toll(age)
    |     if age < 12
    |       puts "Reduced fare.";
    |     else
    |       puts "Normal fare.";
    |     end
    |   end
    | end
   nil
ruby> Human.new.identify
I'm a person.
   nil
ruby> class Student1<Human
    |   def identify
    |     puts "I'm a student."
    |   end
    | end
   nil
ruby> Student1.new.identify
I'm a student.
   nil
@end example

@cindex @code{super}
Suppose we would rather enhance the superclass's @code{identify} method than
entirely replace it.  For this we can use @code{super}.

@example
ruby> class Student2<Human
    |   def identify
    |     super
    |     puts "I'm a student too."
    |   end
    | end
   nil
ruby> Student2.new.identify
I'm a person.
I'm a student too.
   nil
@end example
   
@code{super} lets us pass arguments to the original method.  It is sometimes
said that there are two kinds of people @dots{}

@example
ruby> class Dishonest<Human
    |   def train_toll(age)
    |     super(11) # we want a cheap fare.
    |   end
    | end
   nil
ruby> Dishonest.new.train_toll(25)
Reduced fare. 
   nil

ruby> class Honest<Human
    |   def train_toll(age)
    |     super(age) # pass the argument we were given
    |   end
    | end
   nil
ruby> Honest.new.train_toll(25)
Normal fare. 
   nil
@end example

@c _____________________________________

@node Ruby User's Guide On Access Control
@subsubsection On Access Control
@cindex access control

Earlier, we said that ruby has no functions, only methods.  However there is
more than one kind of method.  In this chapter we introduce @dfn{access
controls}.

Consider what happens when we define a method in the ``top level'', not inside
a class definition.  We can think of such a method as analogous to a function
in a more traditional language like C.

@example
ruby> def square(n)
    |   n * n
    | end
   nil
ruby> square(5)
   25
@end example
   
Our new method would appear not to belong to any class, but in fact ruby gives
it to the @code{Object} class, which is a superclass of every other class.  As
a result, any object should now be able to use that method.  That turns out to
be true, but there's a small catch: it is a @emph{private} method of every
class.  We'll discuss some of what this means below, but one consequence is
that it may be invoked only in function style, as here:

@example
ruby> class Foo
    |   def fourth_power_of(x)
    |     square(x) * square(x)
    |   end
    | end
  nil
ruby> Foo.new.fourth_power_of 10
  10000
@end example
  
We are not allowed to explicitly apply the method to an object:

@example
ruby> "fish".square(5)
ERR: (eval):1: private method `square' called for "fish":String
@end example

This rather cleverly preserves ruby's pure-OO nature (functions are still
object methods, but the receiver is self implicitly) while providing functions
that can be written just as in a more traditional language.

@subheading Rationale For Private Methods: Encapsulation

A common mental discipline in OO programming, which we have hinted at in an
earlier chapter, concerns the separation of specification and implementation,
or what tasks an object is supposed to accomplish and how it actually
accomplishes them.  The internal workings of an object should be kept generally
hidden from its users; they should only care about what goes in and what comes
out, and trust the object to know what it is doing internally.  As such it is
often helpful for classes to have methods that the outside world does not see,
but which are used internally (and can be improved by the programmer whenever
desired, without changing the way users see objects of that class).  In the
trivial example below, think of engine as the invisible inner workings of the
class.

@example
ruby> class Test
    |   def times_two(a)
    |     puts "#@{a@} times two is #@{engine(a)@}"
    |   end
    |   def engine(b)
    |     b*2
    |   end
    |   private:engine  # this hides engine from users
    | end
   Test
ruby> test = Test.new
   #<Test:0x4017181c>
ruby> test.engine(6)
ERR: (eval):1: private method `engine' called for #<Test:0x4017181c>
ruby> test.times_two(6)
6 times two is 12.
   nil
@end example
   
We might have expected @code{test.engine(6)} to return 12, but instead we learn
that @code{engine} is inaccessible when we are acting as a user of a
@code{Test} object.  Only other @code{Test} methods, such as @code{times_two},
are allowed to use engine.  We are required to go through the public interface,
which consists of the @code{times_two} method.  The programmer who is in charge
of this class can change @code{engine} freely (here, perhaps by changing
@code{b*2} to @code{b+b}, assuming for the sake of argument that it improved
performance) without affecting how the user interacts with @code{Test} objects.
This example is of course much too simple to be useful; the benefits of access
controls become more clear only when we begin to create more complicated and
interesting classes.

@c _____________________________________

@node Ruby User's Guide On Singleton Methods
@subsubsection On Singleton Methods
@cindex singleton methods

The behavior of an instance is determined by its class, but there may be times
we know that a particular instance should have special behavior.  In most
languages, we must go to the trouble of defining another class, which would
then only be instantiated once.  In ruby we can give any object its own
methods.  A method given only to a single object is called a @dfn{singleton
method}.

Singleton methods are often used for elements of a graphic user interface
(GUI), where different actions need to be taken when different buttons are
pressed.

@cindex prototype-based languages
@cindex CLOS
@cindex Dylan
@cindex Self
@cindex NewtonScript
Singleton methods are not unique to ruby, as they appear in CLOS, Dylan, etc.
Also, some languages, for example, Self and NewtonScript, have singleton
methods only.  These are sometimes called @dfn{prototype-based} languages.

@c _____________________________________

@node Ruby User's Guide On Modules
@subsubsection On Modules
@cindex modules

Modules in ruby are similar to classes, except:

@itemize
@item
A module can have no instances.
@item
A module can have no subclasses.
@item
A module is defined by @code{module @dots{} end}.
@end itemize

Actually... the @code{Module} class of @code{module} is the superclass of the
@code{Class} class of @code{class}.  Got that?  No?  Let's move on.

@subheading Module As Collection

There are two typical uses of modules.  One is to collect related methods and
constants in a central location.  The @code{Math} module in ruby's standard
library plays such a role:

@example
ruby> Math.sqrt(2)
   1.41421
ruby> Math::PI
   3.14159
@end example

@cindex @code{::} operator
@cindex @code{include} statement
The @code{::} operator tells the ruby interpreter which module it should
consult for the value of a constant (conceivably, some module besides Math
might mean something else by PI).  If we want to refer to the methods or
constants of a module directly without using @code{::}, we can @code{include}
that module:

@example
ruby> include Math
   Object
ruby> sqrt(2)
   1.41421
ruby> PI
   3.14159
@end example

@subheading Module As Mixin
@cindex mixin
@cindex multiple inheritance

Another use of modules is called @dfn{mixin}.  Some OO programming languages,
including C++, allow @dfn{multiple inheritance}, that is, inheritance from more
than one superclass.  A real-world example of multiple inheritance is an alarm
clock; you can think of alarm clocks as belonging to the class of clocks and
also the class of things with buzzers.

@cindex mixin technique
@cindex include a module, mixin
Ruby purposely does not implement true multiple inheritance, but the @dfn{mixin
technique} is a good alternative.  Remember that modules cannot be instantiated
or subclassed; but if we @code{include} a module in a class definition, its
methods are effectively appended, or @emph{mixed in}, to the class.

@subsubheading Mixin As Properties

Mixin can be thought of as a way of asking for whatever particular properties
we want to have.  For example, if a class has a working @code{each} method,
mixing in the standard library's @code{Enumerable} module gives us @code{sort}
and @code{find} methods for free.

@subsubheading Modules Instead Of Multiple Inheritance

This use of modules gives us the basic functionality of multiple inheritance
but allows us to represent class relationships with a simple tree structure,
and so simplifies the language implementation considerably (a similar choice
was made by the designers of Java).

@c _____________________________________

@node Ruby User's Guide On Procedure Objects
@subsubsection On Procedure Objects (Procs)
@cindex procedure objects
@cindex Procs
@cindex @code{proc}

It is often desirable to be able to specify responses to unexpected events.  As
it turns out, this is most easily done if we can pass blocks of code as
arguments to other methods, which means we want to be able to treat code as if
it were data.

A new procedure object is formed using @code{proc}:

@example
ruby> quux = proc @{
    |   puts "QUUXQUUXQUUX!!!"
    | @}
   #<Proc:0x4017357c>
@end example

@cindex @code{call} method
@cindex Proc, invoke
@cindex @code{proc}, execute
Now what @code{quux} refers to is an object, and like most objects, it has
behavior that can be invoked.  Specifically, we can ask it to execute, via its
@code{call} method:

@example
ruby> quux.call
QUUXQUUXQUUX!!!
   nil
@end example

@cindex Proc as method argument
So, after all that, can @code{quux} be used as a method argument?
Sure.

@example
ruby> def run( p )
    |   puts "About to call a procedure..."
    |   p.call
    |   puts "There: finished."
    | end
   nil
ruby> run quux
About to call a procedure...
QUUXQUUXQUUX!!!
There: finished.
   nil
@end example

@cindex @code{trap} method, and Proc
The @code{trap} method lets us assign the response of our choice to
any system signal.

@example
ruby> inthandler = proc@{ puts "^C was pressed." @}
   #<Proc:0x401730a4>
ruby> trap "SIGINT", inthandler
   #<Proc:0x401735e0>
@end example

Normally pressing @key{^C} makes the interpreter quit.  Now a message is
printed and the interpreter continues running, so you don't lose the work you
were doing.  (You're not trapped in the interpreter forever; you can still exit
by typing @kbd{exit}.)

@subheading Anonymous Procedure Objects
@cindex anonymous procedure objects

A final note before we move on to other topics: it's not strictly necessary to
give a procedure object a name before binding it to a signal.  An equivalent
anonymous procedure object would look like @samp{trap "SIGINT", proc@{ puts "^C
was pressed." @}}, or more compactly still, @samp{ trap "SIGINT", 'puts "^C was
pressed."'}.  This abbreviated form provides some convenience and readability
when you write small anonymous procedures.

@c _____________________________________

@node Ruby User's Guide On Variables
@subsubsection On Variables
@cindex variables, description

Ruby has three kinds of variables, one kind of constant and exactly two
pseudo-variables.  The variables and the constants have no type.  While untyped
variables have some drawbacks, they have many more advantages and fit well with
ruby's quick and easy philosophy.

@subheading No Variable Declarations

Variables must be declared in most languages in order to specify their type,
modifiability (i.e., whether they are constants), and scope; since type is not
an issue, and the rest is evident from the variable name as you are about to
see, we do not need variable declarations in ruby.

The first character of an identifier categorizes it at a glance:

@float Table,table:variable-identifiers
@multitable @columnfractions .5 .5
@item $          @tab   global variable
@item @@         @tab   instance variable
@item [a-z] or _ @tab   local variable
@item [A-Z]      @tab   constant
@end multitable
@caption{List of Variable Identifiers}
@end float

@subheading Pseudo-Variables
@cindex pseudo-variables @code{self} and @code{nil}

The only exceptions to the above are ruby's pseudo-variables: @code{self},
which always refers to the currently executing object, and @code{nil}, which is
the meaningless value assigned to uninitialized variables.  Both are named as
if they are local variables, but @code{self} is a global variable maintained by
the interpreter, and @code{nil} is really a constant.  As these are the only
two exceptions, they don't confuse things too much.

You may not assign values to @code{self} or @code{nil}.  @code{main}, as a
value of @code{self}, refers to the top-level object.

@c _____________________________________

@node Ruby User's Guide On Global Variables
@subsubsection On Global Variables
@cindex global variables
@cindex variables, global

A @dfn{global variable} has a name beginning with @code{$}.  It can be referred
to from anywhere in a program.  Before initialization, a global variable has the
special value @code{nil}.

Global variables should be used sparingly.  They are dangerous because they can
be written to from anywhere.  Overuse of globals can make isolating bugs
difficult; it also tends to indicate that the design of a program has not been
carefully thought out.  Whenever you do find it necessary to use a global
variable, be sure to give it a descriptive name that is unlikely to be
inadvertently used for something else later (calling it something like $foo as
above is probably a bad idea).

@subheading Global Variables Can Be Traced
@cindex global variable, tracing
@cindex active variable
@cindex variable, active

One nice feature of a global variable is that it can be traced; you can specify
a procedure which is invoked whenever the value of the variable is changed.

@example
ruby> trace_var :$x, proc@{puts "$x is now #@{$x@}"@}
   nil
ruby> $x = 5
$x is now 5
   5
@end example

When a global variable has been rigged to work as a trigger to invoke a
procedure whenever changed, we sometimes call it an @dfn{active variable}.  For
instance, it might be useful for keeping a GUI display up to date.

@subheading List Of Major System Variables

@float Table,table:global-variables
@multitable @columnfractions .15 .85
@item
$!      @tab latest error message
@item
$@      @tab location of error
@item
$_      @tab string last read by @code{gets}
	     (has local scope)
@item
$.      @tab line number last read by interpreter
@item
$&      @tab string last matched by regexp
@item
$~      @tab the last regexp match, as an array of subexpressions
	     (has local scope)
@item
$@i{n}  @tab the @i{nth} subexpression in the last match
             (same as $~[@i{n}])
@item
$=      @tab case-insensitivity flag
@item
$/      @tab input record separator
@item
$\      @tab output record separator
@item
$0      @tab the name of the ruby script file
@item
$*      @tab the command line arguments
@item
$$      @tab interpreter's process ID
@item
$?      @tab exit status of last executed child process
@end multitable
@caption{List of Major System Variables}
@end float

@c _____________________________________

@node Ruby User's Guide On Instance Variables
@subsubsection On Instance Variables
@cindex instance variables
@cindex variable, instance

An instance variable has a name beginning with @code{@@}, and its scope is
confined to whatever object @code{self} refers to.  Two different objects, even
if they belong to the same class, are allowed to have different values for
their instance variables.  From outside the object, instance variables cannot
be altered or even observed (i.e., ruby's instance variables are never
@code{public}) except by whatever methods are explicitly provided by the
programmer.  As with globals, instance variables have the @code{nil} value
until they are initialized.

@subheading Instance Variables Are Not Declared

Instance variables do not need to be declared.  This indicates a flexible object
structure; in fact, each instance variable is dynamically appended to an object
when it is first assigned.

@c _____________________________________

@node Ruby User's Guide On Local Variables
@subsubsection On Local Variables
@cindex local variables
@cindex variable, local

A local variable has a name starting with a lower case letter or an underscore
character (@code{_}).  Local variables do not, like globals and instance variables,
have the value @code{nil} before initialization.

The first assignment you make to a local variable acts something like a
declaration.  If you refer to an uninitialized local variable, ruby will report
an error: @samp{ERR: (eval):1: undefined local variable or method `foo' for
main(Object)}.

Generally, the scope of a local variable is one of:
@cindex scope of local variable
@cindex local variable scope

@itemize
@item
@code{proc@{ ... @}}
@item
@code{loop@{ ... @}}
@item
@code{def ... end}
@item
@code{class ... end}
@item
@code{module ... end}
@item
the entire script (unless one of the above applies)
@end itemize

@cindex @code{defined?} operator
@code{defined?} is an operator which checks whether an identifier is defined.
It returns a description of the identifier if it is defined, or @code{nil}
otherwise.

Procedure objects that live in the same scope share whatever local variables
also belong to that scope.  Here, the local variable @code{bar} is shared by
@code{main} and the procedure objects @code{p1} and @code{p2}:

@example
ruby> bar=nil
   nil
ruby> p1 = proc@{|n| bar=n@}
   #<Proc:0x8deb0>
ruby> p2 = proc@{bar@}
   #<Proc:0x8dce8>
ruby> p1.call(5)
   5
ruby> bar
   5
ruby> p2.call
   5
@end example

Note that the @code{bar=nil} at the beginning cannot be omitted; it ensures
that the scope of bar will encompass @code{p1} and @code{p2}.  Otherwise
@code{p1} and @code{p2} would each end up with its own local variable bar, and
calling @code{p2} would have resulted in an @samp{undefined local variable or
method} error.  We could have said @code{bar=0} instead, but using @code{nil}
is a courtesy to others who will read your code later.  It indicates fairly
clearly that you are only establishing scope, because the value being assigned
is not intended to be meaningful.

@subheading @code{Proc} Objects Are Closures
@cindex closures, @code{proc} objects

A powerful feature of procedure objects follows from their ability to be passed
as arguments: shared local variables remain valid even when they are passed out
of the original scope.

@example
ruby> def box
    |   contents = nil
    |   get = proc@{contents@}
    |   set = proc@{|n| contents = n@}
    |   return get, set
    | end
   nil
ruby> reader, writer = box
   [#<Proc:0x40170fc0>, #<Proc:0x40170fac>] 
ruby> reader.call
   nil
ruby> writer.call(2)
   2
ruby> reader.call
   2
@end example

Ruby is particularly smart about scope.  It is evident in our example that the
@code{contents} variable is being shared between the @code{reader} and
@code{writer}.  But we can also manufacture multiple @code{reader-writer} pairs
using @code{box} as defined above; each pair shares a @code{contents} variable,
and the pairs do not interfere with each other.

@example
ruby> reader_1, writer_1 = box
   [#<Proc:0x40172820>, #<Proc:0x4017280c>]
ruby> reader_2, writer_2 = box
   [#<Proc:0x40172668>, #<Proc:0x40172654>]
ruby> writer_1.call(99)
   99
ruby> reader_1.call
   99
ruby> reader_2.call  # nothing is in this box yet
   nil
@end example

This kind of programming could be considered a perverse little object-oriented
framework.  The @code{box} method acts something like a class, with @code{get}
and @code{set} serving as methods (except those aren't really the method names,
which could vary with each box instance) and @code{contents} being the lone
instance variable.  Of course, using ruby's legitimate class framework leads to
much more readable code.

@c _____________________________________

@node Ruby User's Guide On Class Constants
@subsubsection On Class Constants
@cindex class constants
@cindex constant, class

A constant has a name starting with an uppercase character.  It should be
assigned a value at most once.  In the current implementation of ruby,
reassignment of a constant generates a warning but not an error (the non-ANSI
version of @code{eval.rb} does not report the warning).

@subheading Class Constants Accessible Outside Class

Constants may be defined within classes, but unlike instance variables, they
are accessible outside the class.
@cindex class constants, access to

@example
ruby> class ConstClass
    |   C1=101
    |   C2=102
    |   C3=103
    |   def show
    |     puts "#@{C1@} #@{C2@} #@{C3@}"
    |   end
    | end
   nil
ruby> C1
ERR: (eval):1: uninitialized constant C1
ruby> ConstClass::C1
   101
ruby> ConstClass.new.show
101 102 103
   nil
@end example

@cindex modules, class constants
@cindex class constants in modules
Constants can also be defined in modules.

@example
ruby> module ConstModule
    |   C1=101
    |   C2=102
    |   C3=103
    |   def showConstants
    |     puts "#@{C1@} #@{C2@} #@{C3@}"
    |   end
    | end
   nil
ruby> C1
ERR: (eval):1: uninitialized constant C1
ruby> include ConstModule
   Object
ruby> C1
   101
ruby> showConstants
101 102 103
   nil
ruby> C1=99  # not really a good idea
   99
ruby> C1
   99
ruby> ConstModule::C1
   101
ruby> ConstModule::C1=99   # .. this was not allowed in earlier versions
   (eval):1: warning: already initialized constant C1
   99
ruby> ConstModule::C1  # "enough rope to shoot yourself in the foot"
   99
@end example

@c _____________________________________

@node Ruby User's Guide On Exception Processing And @code{rescue}
@subsubsection On Exception Processing and @code{rescue}
@cindex exception processing
@cindex @code{rescue}

An executing program can run into unexpected problems.  A file that it wants to
read might not exist; the disk might be full when it wants to save some data;
the user may provide it with some unsuitable kind of input.

A robust program will handle these situations sensibly and gracefully.  Meeting
that expectation can be an exasperating task.  C programmers are expected to
check the result of every system call that could possibly fail, and immediately
decide what is to be done.

This is such a tiresome practice that programmers can tend to grow careless and
neglect it, and the result is a program that doesn't handle exceptions well.  On
the other hand, doing the job right can make programs hard to read, because
there is so much error handling cluttering up the meaningful code.

@subheading @code{begin} And @code{rescue} Blocks

In ruby, as in many modern languages, we can handle exceptions for blocks of
code in a compartmentalized way, thus dealing with surprises effectively but
not unduly burdening either the programmer or anyone else trying to read the
code later.  The block of code marked with @code{begin} executes until there is
an exception, which causes control to be transferred to a block of error
handling code, which is marked with @code{rescue}.  If no exception occurs, the
@code{rescue} code is not used.  The following method returns the first line of
a text file, or @code{nil} if there is an exception:

@example
def first_line( filename )
  begin
    file = open("some_file")
    info = file.gets
    file.close
    info  # Last thing evaluated is the return value
  rescue
    nil   # Can't read the file? then don't return a string
  end
end
@end example

There will be times when we would like to be able to creatively work around a
problem.  Here, if the file we want is unavailable, we try to use standard input
instead:

@example
begin
  file = open("some_file")
rescue
  file = STDIN
end

begin
  # ... process the input ...
rescue
  # ... and deal with any other exceptions here.
end
@end example

@cindex @code{retry}
@code{retry} can be used in the @code{rescue} code to start the @code{begin}
code over again.  It lets us rewrite the previous example a little more
compactly:

@example
fname = "some_file"
begin
  file = open(fname)
  # ... process the input ...
rescue
  fname = "STDIN"
  retry
end
@end example

@subheading @code{raise}ing Exceptions
@cindex @code{raise} exception
@cindex global variable @code{$!}
@cindex @code{$!}

Every ruby library raises an exception if any error occurs, and you can raise
exceptions explicitly in your code too.  To raise an exception, use
@code{raise}.  It takes one argument, which should be a string that describes
the exception.  The argument is optional but should not be omitted.  It can be
accessed later via the special global variable @code{$!}.

@example
ruby> raise "test error"
   test error
ruby> begin
    |   raise "test2"
    | rescue
    |   puts "An error occurred: #@{$!@}"
    | end
An error occurred: test2
   nil
@end example

@c _____________________________________

@node Ruby User's Guide On Exception Processing and @code{ensure}
@subsubsection On Exception Processing And @code{ensure}
@cindex exception processing
@cindex @code{ensure}

There may be cleanup work that is necessary when a method finishes its
work.  Perhaps an open file should be closed, buffered data should be flushed,
etc.  If there were always only one exit point for each method, we could
confidently put our cleanup code in one place and know that it would be
executed; however, a method might return from several places, or our intended
cleanup code might be unexpectedly skipped because of an exception.

For this reason we add another keyword to the @code{begin...rescue...end}
scheme, which is @code{ensure}.  The @code{ensure} code block executes
regardless of the success or failure of the @code{begin} block.

@example
file = open("/tmp/some_file", "w")
begin
  # ... write to the file ...
rescue
  # ... handle the exceptions ...
ensure
  file.close   # ... and this always happens.
end
@end example

It is possible to use @code{ensure} without @code{rescue}, or vice versa, but
if they are used together in the same @code{begin...end} block, the
@code{rescue} must precede the @code{ensure}.

@c _____________________________________

@node Ruby User's Guide On Accessors
@subsubsection On Accessors
@cindex accessors
@cindex attributes
@cindex instance variabes, as attributes
@cindex attribute accessors
@cindex writer accessor
@cindex reader accessor

We briefly discussed instance variables in an earlier chapter, but haven't done
much with them yet.  An object's instance variables are its @dfn{attributes},
the things that distinguish it from other objects of the same class.  It is
important to be able to write and read these attributes; doing so requires
methods called attribute accessors.  We'll see in a moment that we don't always
have to write accessor methods explicitly, but let's go through all the motions
for now.  The two kinds of accessors are writers and readers.

@subheading Accessors: Writers And Readers

@example
ruby> class Fruit
    |   def set_kind(k)  # a writer
    |     @@kind = k
    |   end
    |   def get_kind     # a reader
    |     @@kind
    |   end
    | end
   nil
ruby> f1 = Fruit.new
   #<Fruit:0xfd7e7c8c>
ruby> f1.set_kind("peach")  # use the writer
   "peach"
ruby> f1.get_kind           # use the reader
   "peach"
ruby> f1                    # inspect the object
   #<Fruit:0xfd7e7c8c @@kind="peach">
@end example

Simple enough; we can store and retrieve information about what kind of fruit
we're looking at.  But our method names are a little wordy.  The following is
more concise, and more conventional:

@example
ruby> class Fruit
    |   def kind=(k)
    |     @@kind = k
    |   end
    |   def kind
    |     @@kind
    |   end
    | end
   nil
ruby> f2 = Fruit.new
   #<Fruit:0xfd7e7c8c>
ruby> f2.kind = "banana"
   "banana"
ruby> f2.kind
   "banana"
@end example
   
@subheading The @code{inspect} Method
@cindex @code{inspect} method

A short digression is in order.  You've noticed by now that when we try to look
at an object directly, we are shown something cryptic like
@samp{#<anObject:0x83678>}.  This is just a default behavior, and we are free
to change it.  All we need to do is add a method named @code{inspect}.  It
should return a string that describes the object in some sensible way,
including the states of some or all of its instance variables.

@example
ruby> class Fruit
    |   def inspect
    |     "a fruit of the #@{@@kind@} variety"
    |   end
    | end
   nil
ruby> f2
   "a fruit of the banana variety"
@end example

@subheading @code{to_s} And @code{p} Methods
@cindex @code{to_s} method
@cindex @code{p} method

A related method is @code{to_s} (convert to string), which is used when
printing an object.  In general, you can think of @code{inspect} as a tool for
when you are writing and debugging programs, and @code{to_s} as a way of
refining program output.  @file{eval.rb} (@pxref{Ruby Eval Utility} uses
@code{inspect} whenever it displays results.  You can use the @code{p} method
to easily get debugging output from programs.

@example
# These two lines are equivalent:
p anObject
puts anObject.inspect
@end example

@subheading Making Accessors
@cindex accessors, using shortcuts

Since many instance variables need accessor methods, Ruby provides convenient
shortcuts for the standard forms.

@float Table,table:accessor-shortcuts
@multitable @columnfractions .35 .65
@headitem Shortcut @tab Effect
@item
attr_reader :v @tab def v; @v; end
@item
attr_writer :v @tab def v=(value); @v=value; end
@item
attr_accessor :v @tab attr_reader :v; attr_writer :v
@item
attr_accessor :v, :w @tab attr_accessor :v; attr_accessor :w
@end multitable
@caption{List of Accessor Shortcuts}
@end float

Let's take advantage of this and add freshness information.  First we ask for an
automatically generated reader and writer, and then we incorporate the new
information into @code{inspect}:

@example
ruby> class Fruit
    |   attr_accessor :condition
    |   def inspect
    |     "a #@{@@condition@} #@{@@kind@}"
    |   end
    | end
   nil
ruby> f2.condition = "ripe"
   "ripe"
ruby> f2
   "a ripe banana"
@end example

If nobody eats our ripe fruit, perhaps we should let time take its toll.

@example
ruby> class Fruit
    |   def time_passes
    |     @@condition = "rotting"
    |   end
    | end
   nil
ruby> f2
   "a ripe banana"
ruby> f2.time_passes
   "rotting"
ruby> f2
   "a rotting banana"
@end example

But while playing around here, we have introduced a small problem.  What happens
if we try to create a third piece of fruit now?  Remember that instance
variables don't exist until values are assigned to them.

@example
ruby> f3 = Fruit.new
ERR: failed to convert nil into String
@end example

It is the @code{inspect} method that is complaining here, and with good reason.
We have asked it to report on the kind and condition of a piece of fruit, but
as yet @code{f3} has not been assigned either attribute.  If we wanted to, we
could rewrite the @code{inspect} method so it tests instance variables using
the @code{defined?}  method and then only reports on them if they exist, but
maybe that's not very useful; since every piece of fruit has a kind and
condition, it seems we should make sure those always get defined somehow.  That
is the topic of the next chapter.

@c _____________________________________

@node Ruby User's Guide On Object Initialization
@subsubsection On Object Initialization
@cindex initialization of objects
@cindex @code{initialize} method

Our @code{Fruit} class from the previous chapter had two instance variables,
one to describe the kind of fruit and another to describe its condition.  It
was only after writing a custom @code{inspect} method for the class that we
realized it didn't make sense for a piece of fruit to lack those
characteristics.  Fortunately, ruby provides a way to ensure that instance
variables always get initialized.

@subheading Default Argument Values in @code{initialize}
@cindex default argument values
@cindex argument values, setting default values

Whenever Ruby creates a new object, it looks for a method named
@code{initialize} and executes it.  So one simple thing we can do is use an
@code{initialize} method to put default values into all the instance variables,
so the @code{inspect} method will have something to say.

There will be times when a default value doesn't make a lot of sense.  Is there
such a thing as a default kind of fruit?  It may be preferable to require that
each piece of fruit have its kind specified at the time of its creation.  To do
this, we would add a formal argument to the @code{initialize} method.  For
reasons we won't get into here, arguments you supply to @code{new} are actually
delivered to @code{initialize}.

@example
ruby> class Fruit
    |   def initialize( k )
    |     @@kind = k
    |     @@condition = "ripe"
    |   end
    | end
   nil
ruby> f5 = Fruit.new "mango"
   "a ripe mango"
ruby> f6 = Fruit.new
ERR: (eval):1:in `initialize': wrong # of arguments(0 for 1)
@end example

Above we see that once an argument is associated with the @code{initialize}
method, it can't be left off without generating an error.  If we want to be more
considerate, we can use the argument if it is given, or fall back to default
values otherwise.

@example
ruby> class Fruit
    |   def initialize( k="apple" )
    |     @@kind = k
    |     @@condition = "ripe"
    |   end
    | end
   nil
ruby> f5 = Fruit.new "mango"
   "a ripe mango"
ruby> f6 = Fruit.new
   "a ripe apple"
@end example

You can use @dfn{default argument values} for any method, not just @code{initialize}.
The argument list must be arranged so that those with default values come last.

@subheading Object Reflection, Variable-Length Argument Lists, Method Overloading
@cindex reflection
@cindex variable-length argument lists
@cindex argument lists, variable length
@cindex method overloading

Sometimes it is useful to provide several ways to initialize an
object.  Although it is outside the scope of this tutorial, ruby supports object
reflection and variable-length argument lists, which together effectively allow
method overloading.
   
@c _____________________________________

@node Ruby User's Guide On Nuts And Bolts
@subsubsection On Nuts And Bolts

@subheading Statement Delimiters
@cindex statement delimiters

Some languages require some kind of punctuation, often a semicolon (@kbd{;}),
to end each statement in a program.  Ruby instead follows the convention used
in shells like @command{sh} and @command{csh}.  Multiple statements on one line
must be separated by semicolons, but they are not required at the end of a
line; a linefeed is treated like a semicolon.  If a line ends with a backslash
(@kbd{\}), the linefeed following it is ignored; this allows you to have a
single logical line that spans several lines.

@subheading Comments
@cindex comments

Why write comments?  Although well written code tends to be self-documenting,
it is often helpful to scribble in the margins, and it can be a mistake to
believe that others will be able to look at your code and immediately see it
the way you do.  Besides, for practical purposes, you yourself are a different
person within a few days anyway; which of us hasn't gone back to fix or enhance
a program after the passage of time and said, I know I wrote this, but what in
blazes does it mean?

Some experienced programmers will point out, quite correctly, that
contradictory or outdated comments can be worse than none at all.  Certainly,
comments shouldn't be a substitute for readable code; if your code is unclear,
it's probably also buggy.  You may find that you need to comment more while you
are learning ruby, and then less as you become better at expressing your ideas
in simple, elegant, readable code.

Ruby follows a common scripting convention, which is to use a pound symbol
(@kbd{#}) to denote the start of a comment.  Anything following an unquoted
@kbd{#}, to the end of the line on which it appears, is ignored by the
interpreter.

Also, to facilitate large comment blocks, the ruby interpreter also ignores
anything between a line starting with @kbd{=begin} and another line starting
with @kbd{=end}.

@example
#!/usr/bin/env ruby

=begin
**********************************************************************
  This is a comment block, something you write for the benefit of
  human readers (including yourself).  The interpreter ignores it.
  There is no need for a '#' at the start of every line.
**********************************************************************
=end
@end example

@subheading Organizing Your Code

Ruby's unusually high level of dynamism means that classes, modules, and
methods exist only after their defining code runs.  If you're used to
programming in a more static language, this can sometimes lead to surprises.

@example
# The below results in an "undefined method" error:

puts successor(3)

def successor(x)
  x + 1
end
@end example

Although the interpreter checks over the entire script file for syntax before
executing it, the @code{def successor ... end} code has to actually run in
order to create the @code{successor} method.  So the order in which you arrange
a script can matter.

This does not, as it might seem at first glance, force you to organize your
code in a strictly bottom-up fashion.  When the interpreter encounters a method
definition, it can safely include undefined references, as long as you can be
sure they will be defined by the time the method is actually invoked:

@example
# Conversion of fahrenheit to celsius, broken
# down into two steps.

def f_to_c(f)
  scale(f - 32.0)  # This is a forward reference, but it's okay.
end

def scale(x)
  x * 5.0 / 9.0
end

printf "%.1f is a comfortable temperature.\n", f_to_c(72.3)
@end example

So while this may seem less convenient than what you may be used to in Perl or
Java, it is less restrictive than trying to write C without prototypes (which
would require you to always maintain a partial ordering of what references
what).  Putting top-level code at the bottom of a source file always works.
And even this is less of an annoyance than it might at first seem.  A sensible
and painless way to enforce the behavior you want is to define a @code{main}
function at the top of the file, and call it from the bottom.

@example
#!/usr/bin/env ruby

def main
  # Express the top level logic here...
end

# ... put support code here, organized as you see fit ...

main # ... and start execution here.
@end example

@subheading @code{load} And @code{require}

@cindex @code{include}
@cindex @code{require}
@cindex @code{load}
It also helps that ruby provides tools for breaking complicated programs into
readable, reusable, logically related chunks.  We have already seen the use of
@code{include} for accessing modules (@pxref{Ruby User's Guide On Modules}.
You will also find the @code{load} and @code{require} facilities useful.

@table @code
@item load
works as if the file it refers to were copied and pasted in
(something like the @code{#include} preprocessor directive in C).
@item require
is somewhat more sophisticated, causing code to be loaded at
most once and only when needed.
@end table


@c .....................................

@node Ruby Programming Wikibook
@subsection Ruby Programming Wikibook

@url{http://en.wikibooks.org/wiki/Ruby_programming_language, Ruby Programming
Wikibook}

A free online manual with beginner and intermediate content plus a thorough
language reference.




@c .....................................

@node Pragmatic Programmer's Guide
@subsection The Pragmatic Programmer's Guide
@cindex Programming Ruby
@cindex Pragmatic Programmer's Guide
@cindex David Thomas
@cindex Andrew Hunt

@url{http://ruby-doc.com/docs/ProgrammingRuby/,Programming Ruby}

@subsubheading What This Book Is

This book is a tutorial and reference for the Ruby programming language.  Use
Ruby, and you'll write better code, be more productive, and enjoy programming
more.

@subsubheading What Ruby Is

Take a true object-oriented language, such as Smalltalk.  Drop the unfamiliar
syntax and move to more conventional, file-based source code.  Now add in a
good measure of the flexibility and convenience of languages such as Python
and Perl.

You end up with Ruby.

@subsubheading Ruby is OO

OO aficionados will find much to like in Ruby:  things such as pure object
orientation (everything's an object), metaclasses, closures, iterators, and
ubiquitous heterogeneous collections.  Smalltalk users will feel right at home
(and C++ and Java users will feel jealous).

@subsubheading Ruby is Perl and Python

At the same time, Perl and Python wizards will find many of their favorite
features:  full regular expression support, tight integration with the
underlying operating system, convenient shortcuts, and dynamic evaluation.

@subsubheading Principle of Lease Surprise

Ruby follows the Principle of Least Surprise --- things work the way you
would expect them to, with very few special cases or exceptions.

@subsubheading Ruby is a ``Transparent'' Language

We call Ruby a ``transparent'' language.  By that we mean that Ruby doesn't
obscure the solutions you write behind lots of syntax and the need to churn
out reams of support code just to get simple things done.  With Ruby you write
programs close to the problem domain.  Rather than constantly mapping your
ideas and designs down to the pedestrian level of most languages, with Ruby
you'll find you can express them directly and express them elegantly.  This
means you code faster.  It also means your programs stay readable and
maintainable.

@subsubheading Ruby is a ``Scripting'' Language

What exactly is a scripting language?  Frankly we don't know if it's a
distinction worth making.  In Ruby, you can access all the underlying
operating system features.  You can do the same stuff in Ruby that you can in
Perl or Python, and you can do it more cleanly.  But Ruby is fundamentally
different.  It is a true programming language, too, with strong theoretical
roots and an elegant, lightweight syntax.  You could hack together a mess of
``scripts'' with Ruby, but you probably won't.  Instead, you'll be more
inclined to engineer a solution, to produce a program that is easy to
understand, simple to maintain, and a piece of cake to extend and reuse in
the future.

@subsubheading Ruby is a General Purpose Programming Language

Although we have used Ruby for scripting jobs, most of the time we use it as
a general-purpose programming language.  We've used it to write GUI
applications and middle-tier server processes, and we're using it to format
large parts of this book.  Others have used it for managing server machines
and databases.  Ruby is serving Web pages, interfacing to databases and
generating dynamic content.  People are writing artificial intelligence and
machine learning programs in Ruby, and at least one person is using it to
investigate natural evolution.  Ruby's finding a home as a vehicle for
exploratory mathematics.  And people all over the world are using it as a way
of gluing together all their different applications.  It truly is a great
language for producing solutions in a wide variety of problem domains.

@subsubheading Should I Use Ruby?

However, Ruby is probably more applicable than you might think.  It is easy to
extend, both from within the language and by linking in third-party
libraries.  It is portable across a number of platforms.  It's relatively
lightweight and consumes only modest system resources.  And it's easy to
learn; we've known people who've put Ruby code into production systems within
a day of picking up drafts of this book.  We've used Ruby to implement parts
of an X11 window manager, a task that's normally considered severe C
coding.  Ruby excelled, and helped us write code in hours that would otherwise
have taken days.









@c -----------------------------------------------------------------------------

@node Editors and IDEs
@section Editors and IDEs








@c -----------------------------------------------------------------------------

@node Further Reading
@section Further Reading

@cite{Programming Ruby}, by Marek Hulan, et al., contains succinct advanced
information about Ruby.  @mybibcite{ProgrammingRuby}








@c *****************************************************************************

@node Implementations
@chapter Implementations




@c -----------------------------------------------------------------------------

@node YARV Implementation
@section YARV Implementation
@cindex YARV implementation
@cindex Matsumoto, Yokihiro
@cindex Sasada, Koichi
@cindex KRI
@cindex MRI

@acronym{YARV} stands for ``Yet Another Ruby VM'' and is a bytecode interpreter
that was developed for the Ruby programming language by Koichi Sasada.  See
@uref{http://www.atdot.net/yarv/oopsla2005eabstract-rc1.pdf,YARV}.  The goal of
the project was to greatly reduce the execution time of Ruby programs.  Since
@acronym{YARV} has become the official Ruby interpreter for Ruby 1.9, it is
also named @acronym{KRI} (``Koichi's Ruby Interpreter''), in the same vein as
the original Ruby @acronym{MRI}, named for Ruby's creator Yukihiro Matsumoto.

@acronym{YARV} was merged into the Ruby Subversion repository on January 1,
2007.  It was released as part of Ruby 1.9.0 on December 26, 2007, replacing
Ruby @acronym{MRI}.


@c -----------------------------------------------------------------------------

@node JRuby Implementation
@section JRuby Implementation
@cindex jruby

@heading The Ruby Programming Language On The JVM

JRuby 9.2.x is our new major version of JRuby.  It is expected to be
compatible with Ruby 2.5.x and stay in sync with C Ruby.  JRuby 9.2.0.0
is our first release for 2.5 support.

@noindent @url{https://www.jruby.org, JRuby}

@noindent @url{https://www.jruby.org/download, Latest Release}

@noindent @url{https://github.com/jruby/jruby/wiki, JRuby Wiki}




@c -----------------------------------------------------------------------------

@node Rubinius Implementation
@section Rubinius Implementation
@cindex @file{Rubinius}

@dfn{Rubinius} is an alternative Ruby implementation created by Evan Phoenix.

@url{https://rubinius.com,Rubinius} follows in the Lisp and Smalltalk
traditions, by natively implementing as much of Ruby as possible in Ruby code.

The current @file{Rubinius} release is version 3.107.  @file{Rubinius} provides
Homebrew binaries that should be compatible with 10.8 (Mountain Lion) and newer
OS X releases.  To install @file{Rubinius} on Homebrew, follow these steps:
@example
$ brew update
$ brew tap rubinius/apps
$ brew install rubinius
@end example


@c -----------------------------------------------------------------------------

@node The Rubinius Book
@section The Rubinius Book
@cindex @file{Rubinius} book

@url{https://book.rubinius.com, The Rubinius Book}








@c *****************************************************************************

@node My Ruby Reference
@chapter My Ruby Reference
@cindex reference




@c -----------------------------------------------------------------------------

@node Operators
@section Operators
@cindex operators
@cindex operators that are methods
@cindex methods that are operators

Most operators are actually method calls.  For example, @samp{a + b} is
interpreted as @samp{a.+(b)}, where the @kbd{+} method in the object referred
to by variable @code{a} is called with @code{b} as its argument.

For each operator (@samp{+ - * / % ** & | ^ << >> && ||}), there is a
corresponding form of abbreviated assignment operator (@samp{+= -=} etc.).

@cindex method overriding
@cindex overriding methods
Operators that are methods may be overridden.


@c .....................................

@node Arithmetic Operators
@subsection Arithmetic Operators
@cindex arithmetic operators
@cindex operators, arithmetic

@float Table,ArithmeticOperators
@multitable @columnfractions .1 .9

@item
@code{+} @tab Addition --- Adds values on either side of the operator.

@item
@code{-} @tab Subtraction --- Subtracts right hand operand from left hand
operand.

@item
@code{*} @tab Multiplication --- Multiplies values on either side of the
operator.

@item
@code{/} @tab Division --- Divides left hand operand by right hand operand.

@item
@code{%} @tab Modulus --- Divides left hand operand by right hand operand and
returns remainder.

@item
@code{**} @tab Exponent − Performs exponential (power) calculation on
operators.

@end multitable
@shortcaption{Arithmetic Operators}
@caption{Table of Arithmetic Operators}
@end float


@c .....................................

@node Comparison Operators
@subsection Comparison Operators
@cindex comparison operators
@cindex operators, comparison


@c .....................................

@node Assignment Operators
@subsection Assighnment Operators
@cindex assignment operators
@cindex operators, assignment


@c .....................................

@node Bitwise Operators
@subsection Bitwise Operators
@cindex bitwise operators
@cindex operators, bitwise


@c .....................................

@node Logical Operators
@subsection Logical Operators
@cindex logical operators
@cindex operators, logical


@c .....................................

@node Ternary Operator
@subsection Ternary Operator
@cindex ternary operator
@cindex operator, ternary


@c .....................................

@node Range Operators
@subsection Range Operators
@cindex range operators
@cindex operators, range


@c .....................................

@node Defined? Operators
@subsection Defined? Operators
@cindex @code{defined?} operators
@cindex operators, @code{defined}


@c .....................................

@node Dot And Colon Operators
@subsection Dot and Colon Operators
@cindex dot operators
@cindex colon operators
@cindex operators, dot and colon


@c .....................................

@node Operator Precedence
@subsection Operator Precedence
@cindex operator precedence
@cindex precedence, operator








@c *****************************************************************************
@c APPENDICES
@c *****************************************************************************








@c *****************************************************************************

@node Ruby-Doc
@appendix Ruby-Doc
@cindex Ruby-Doc
@cindex Ruby Documentation
@cindex Core API
@cindex core reference
@cindex Standard Library API
@cindex Standard Library reference
@cindex standard library
@cindex reference, core
@cindex reference, standard library
@cindex standard lib
@cindex core

Help and documentation for the Ruby programming language.

@itemize

@item
@url{http://ruby-doc.org/, Ruby-Doc Core Reference Home}

@item
@url{http://ruby-doc.org/core, Core API}
@cindex core api

These are the API documents for the base classes and modules in the current
stable release of Ruby 2.5.

@item
@url{http://ruby-doc.org/stdlib/, Standard Library API}
@cindex standard library api

These are the API documents for the standard library classes and modules in
version 2.5

@item
@url{http://ruby-doc.org/gettingstarted, Getting Started}
@cindex getting started
@cindex resources, getting started

A collection of resources for those just starting out with Ruby.

@item
@url{http://ruby-doc.org/downloads/, Ruby-Doc Downloads}
@cindex downloads, ruby-doc resources

@item
@url{https://github.com/ruby/rubyspec, The Ruby Specification Project}
@cindex specificationm, ruby

@end itemize




@c -----------------------------------------------------------------------------


@node API Documentation
@appendixsec API Documentation
@cindex Ruby 2.5.1. API

This is the API documentation for Ruby 2.5.1.

@ref{Files API}

@ref{Classes And Modules API}

@ref{Methods API}

@iftex
@page
@end iftex

@c _____________________________________


@node Files API
@appendixsubsec Files API
@cindex api, files
@cindex files api

@ifnottex
@float Table,table:api
@end ifnottex

@table @b
@item Grammar
@url{http://ruby-doc.org/core-2.5.1/_lib/racc/rdoc/grammar_en_rdoc.html}

@item Contributing
@url{http://ruby-doc.org/core-2.5.1/doc/contributing_rdoc.html}

@item DTrace Probes
@url{http://ruby-doc.org/core-2.5.1/doc/dtrace_probes_rdoc.html}

@item Extension
@url{http://ruby-doc.org/core-2.5.1/doc/extension_rdoc.html}
@anchor{Globals}

@item Globals
@url{http://ruby-doc.org/core-2.5.1/doc/globals_rdoc.html}
@cindex globals

@item Keywords
@url{http://ruby-doc.org/core-2.5.1/doc/keywords_rdoc.html}
@cindex keywords

@item Marshall
@url{http://ruby-doc.org/core-2.5.1/doc/marshal_rdoc.html}

@item RegExp
@url{http://ruby-doc.org/core-2.5.1/doc/regexp_rdoc.html}

@item Security
@url{http://ruby-doc.org/core-2.5.1/doc/security_rdoc.html}

@item Standard Library
@url{http://ruby-doc.org/core-2.5.1/doc/standard_library_rdoc.html}
@cindex standard library

@item Syntax
@url{http://ruby-doc.org/core-2.5.1/doc/syntax_rdoc.html}
@cindex syntax

@item Assignment
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/assignment_rdoc.html}

@item Calling Methods
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/calling_methods_rdoc.html}
@cindex methods, calling

@item Control Expressions
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/control_expressions_rdoc.html}

@item Exceptions
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/exceptions_rdoc.html}
@cindex exceptions

@item Literals
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/literals_rdoc.html}

@item Methods
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/methods_rdoc.html}
@cindex methods api

@item Miscellaneous
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/miscellaneous_rdoc.html}

@item Modules and Classes
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/modules_and_classes_rdoc.html}

@item Precedence
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/precedence_rdoc.html}
@cindex precedence

@item Refinements
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/refinements_rdoc.html}

@item README
@url{http://ruby-doc.org/core-2.5.1/sample/drb/README_rdoc.html}

@end table

@ifnottex
@caption{Core API}
@end float
@end  ifnottex

@iftex
@page
@end iftex


@c .....................................

@node Classes And Modules API
@appendixsubsec Classes And Modules API
@cindex API, classes and modules
@cindex classes api
@cindex modules api

@ifnottex
@float Table,table:api-classes-and-modules
@end ifnottex

@table @code
@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html,ARGF}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ArgumentError.html,ArgumentError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Array.html,Array}
Class

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html,BasicObject}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html,Binding}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Class.html,Class}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ClosedQueueError.html,ClosedQueueError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html,Comparable}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html,Complex}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Complex/compatible.html,Complex::compatible}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ConditionVariable.html,ConditionVariable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Continuation.html,Continuation}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Data.html,Data}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html,Dir}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html,ENV}
Class

@item @url{http://ruby-doc.org/core-2.5.1/EOFError.html,EOFError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html,Encoding}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/CompatibilityError.html,Encoding::CompatibilityError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html,Encoding::Converter}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/ConverterNotFoundError.html,Encoding::ConverterNotFoundError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html,Encoding::InvalidByteSequenceError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/UndefinedConversionError.html,Encoding::UndefinedConversionError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/EncodingError.html,EncodingError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html,Enumerable}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html,Enumerator}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Generator.html,Enumerator::Generator}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html,Enumerator::Lazy}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Yielder.html,Enumerator::Yielder}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Errno.html,Errno}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html,Exception}
Class

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html,FalseClass}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html,Fiber}
Class

@item @url{http://ruby-doc.org/core-2.5.1/FiberError.html,FiberError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/File.html,File}
Class

@item @url{http://ruby-doc.org/core-2.5.1/File/Constants.html,File::Constants}
Module

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html,File::Stat}
Class

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html,FileTest}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Float.html,Float}
Class

@item @url{http://ruby-doc.org/core-2.5.1/FloatDomainError.html,FloatDomainError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/FrozenError.html,FrozenError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/GC.html,GC}
Module

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html,GC::Profiler}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html,Hash}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO.html,IO}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/EAGAINWaitReadable.html,IO::EAGAINWaitReadable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/EAGAINWaitWritable.html,IO::EAGAINWaitWritable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/EINPROGRESSWaitReadable.html,IO::EINPROGRESSWaitReadable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/EINPROGRESSWaitWritable.html,IO::EINPROGRESSWaitWritable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/EWOULDBLOCKWaitReadable.html,IO::EWOULDBLOCKWaitReadable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/EWOULDBLOCKWaitWritable.html,IO::EWOULDBLOCKWaitWritable}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IO/WaitReadable.html,IO::WaitReadable}
Module

@item @url{http://ruby-doc.org/core-2.5.1/IO/WaitWritable.html,IO::WaitWritable}
Module

@item @url{http://ruby-doc.org/core-2.5.1/IOError.html,IOError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/IndexError.html,IndexError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html,Integer}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Interrupt.html,Interrupt}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html,Kernel}
Module

@item @url{http://ruby-doc.org/core-2.5.1/KeyError.html,KeyError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/LoadError.html,LoadError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/LocalJumpError.html,LocalJumpError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Marshal.html,Marshal}
Module

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html,MatchData}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Math.html,Math}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Math/DomainError.html,Math::DomainError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Method.html,Method}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Module.html,Module}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html,Mutex}
Class

@item @url{http://ruby-doc.org/core-2.5.1/NameError.html,NameError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html,NilClass}
Class

@item @url{http://ruby-doc.org/core-2.5.1/NoMemoryError.html,NoMemoryError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/NoMethodError.html,NoMethodError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/NotImplementedError.html,NotImplementedError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html,Numeric}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Object.html,Object}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html,ObjectSpace}
Module

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html,ObjectSpace::WeakMap}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html,Proc}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Process.html,Process}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html,Process::GID}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html,Process::Status}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html,Process::Sys}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html,Process::UID}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Process/Waiter.html,Process::Waiter}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html,Queue}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Random.html,Random}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Random/Formatter.html,Random::Formatter}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Range.html,Range}
Class

@item @url{http://ruby-doc.org/core-2.5.1/RangeError.html,RangeError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html,Rational}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Rational/compatible.html,Rational::compatible}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html,Regexp}
Class

@item @url{http://ruby-doc.org/core-2.5.1/RegexpError.html,RegexpError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM.html,RubyVM}
Class

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html,RubyVM::InstructionSequence}
Class

@item @url{http://ruby-doc.org/core-2.5.1/RuntimeError.html,RuntimeError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ScriptError.html,ScriptError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/SecurityError.html,SecurityError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Signal.html,Signal}
Module

@item @url{http://ruby-doc.org/core-2.5.1/SignalException.html,SignalException}
Class

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html,SizedQueue}
Class

@item @url{http://ruby-doc.org/core-2.5.1/StandardError.html,StandardError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/StopIteration.html,StopIteration}
Class

@item @url{http://ruby-doc.org/core-2.5.1/String.html,String}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html,Struct}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html,Symbol}
Class

@item @url{http://ruby-doc.org/core-2.5.1/SyntaxError.html,SyntaxError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/SystemCallError.html,SystemCallError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/SystemExit.html,SystemExit}
Class

@item @url{http://ruby-doc.org/core-2.5.1/SystemStackError.html,SystemStackError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html,Thread}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace.html,Thread::Backtrace}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html,Thread::Backtrace::Location}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ThreadError.html,ThreadError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ThreadGroup.html,ThreadGroup}
Class

@item @url{http://ruby-doc.org/core-2.5.1/Time.html,Time}
Class

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html,TracePoint}
Class

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html,TrueClass}
Class

@item @url{http://ruby-doc.org/core-2.5.1/TypeError.html,TypeError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html,UnboundMethod}
Class

@item @url{http://ruby-doc.org/core-2.5.1/UncaughtThrowError.html,UncaughtThrowError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/UnicodeNormalize.html,UnicodeNormalize}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Warning.html,Warning}
Module

@item @url{http://ruby-doc.org/core-2.5.1/Warning/buffer.html,Warning::buffer}
Class

@item @url{http://ruby-doc.org/core-2.5.1/ZeroDivisionError.html,ZeroDivisionError}
Class

@item @url{http://ruby-doc.org/core-2.5.1/fatal.html,fatal}
Class

@end table

@ifnottex
@caption{List of Classes and Modules}
@end float
@end ifnottex

@iftex
@page
@end iftex


@c .....................................

@node Methods API
@appendixsubsec Methods API
@cindex methods api

@ifnottex
@float Table,table:api-methods
@end ifnottex

@table @code
@item @url{http://ruby-doc.org/core-2.5.1/SystemCallError.html#method-c-3D-3D-3D,===}
@code{SystemCallError::===} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-DEBUG,DEBUG}
@code{Thread::DEBUG} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-DEBUG-3D,DEBUG=}
@code{Thread::DEBUG=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-c-5B-5D,[]}
@code{Array::[]} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-5B-5D,[]}
@code{Dir::[]} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-5B-5D,[]}
@code{ENV::[]} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-c-5B-5D,[]}
@code{Hash::[]} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-5B-5D-3D,[]=}
@code{ENV::[]=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html#method-c-_id2ref,_id2ref}
@code{ObjectSpace::_id2ref} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-abort,abort}
@code{Process::abort} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-abort_on_exception,abort_on_exception}
@code{Thread::abort_on_exception} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-abort_on_exception-3D,abort_on_exception=}
@code{Thread::abort_on_exception=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-absolute_path,absolute_path}
@code{File::absolute_path} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-acos,acos}
@code{Math::acos} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-acosh,acosh}
@code{Math::acosh} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-add_stress_to_class,add_stress_to_class}
@code{GC::add_stress_to_class} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-aliases,aliases}
@code{Encoding::aliases} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-c-all_symbols,all_symbols}
@code{Symbol::all_symbols} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-argv0,argv0}
@code{Process::argv0} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-c-asciicompat_encoding,asciicompat_encoding}
@code{Encoding/Converter::asciicompat_encoding} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-asin,asin}
@code{Math::asin} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-asinh,asinh}
@code{Math::asinh} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-assoc,assoc}
@code{ENV::assoc} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-at,at}
@code{Time::at} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-atan,atan}
@code{Math::atan} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-atan2,atan2}
@code{Math::atan2} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-atanh,atanh}
@code{Math::atanh} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-atime,atime}
@code{File::atime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-basename,basename}
@code{File::basename} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-binread,binread}
@code{IO::binread} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-binwrite,binwrite}
@code{IO::binwrite} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-birthtime,birthtime}
@code{File::birthtime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-blockdev-3F,blockdev?}
@code{File::blockdev?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-cbrt,cbrt}
@code{Math::cbrt} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-change_privilege,change_privilege}
@code{Process/GID::change_privilege} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-change_privilege,change_privilege}
@code{Process/UID::change_privilege} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-chardev-3F,chardev?}
@code{File::chardev?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-chdir,chdir}
@code{Dir::chdir} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-children,children}
@code{Dir::children} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-chmod,chmod}
@code{File::chmod} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-chown,chown}
@code{File::chown} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-chroot,chroot}
@code{Dir::chroot} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-clear,clear}
@code{ENV::clear} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-clear,clear}
@code{GC/Profiler::clear} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-clock_getres,clock_getres}
@code{Process::clock_getres} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-clock_gettime,clock_gettime}
@code{Process::clock_gettime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-compatible-3F,compatible?}
@code{Encoding::compatible?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-compile,compile}
@code{Regexp::compile} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-compile,compile}
@code{RubyVM/InstructionSequence::compile} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-compile_file,compile_file}
@code{RubyVM/InstructionSequence::compile_file} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-compile_option,compile_option}
@code{RubyVM/InstructionSequence::compile_option} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-compile_option-3D,compile_option=}
@code{RubyVM/InstructionSequence::compile_option=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-c-constants,constants}
@code{Module::constants} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-copy_stream,copy_stream}
@code{IO::copy_stream} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-cos,cos}
@code{Math::cos} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-cosh,cosh}
@code{Math::cosh} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-count,count}
@code{GC::count} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html#method-c-count_objects,count_objects}
@code{ObjectSpace::count_objects} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-ctime,ctime}
@code{File::ctime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-c-current,current}
@code{Fiber::current} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-current,current}
@code{Thread::current} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-daemon,daemon}
@code{Process::daemon} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-default_external,default_external}
@code{Encoding::default_external} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-default_external-3D,default_external=}
@code{Encoding::default_external=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-default_internal,default_internal}
@code{Encoding::default_internal} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-default_internal-3D,default_internal=}
@code{Encoding::default_internal=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html#method-c-define_finalizer,define_finalizer}
@code{ObjectSpace::define_finalizer} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-delete,delete}
@code{Dir::delete} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-delete,delete}
@code{ENV::delete} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-delete,delete}
@code{File::delete} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-delete_if,delete_if}
@code{ENV::delete_if} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-detach,detach}
@code{Process::detach} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-directory-3F,directory?}
@code{File::directory?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-dirname,dirname}
@code{File::dirname} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-disable,disable}
@code{GC::disable} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-disable,disable}
@code{GC/Profiler::disable} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-disasm,disasm}
@code{RubyVM/InstructionSequence::disasm} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-disassemble,disassemble}
@code{RubyVM/InstructionSequence::disassemble} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Marshal.html#method-c-dump,dump}
@code{Marshal::dump} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-each,each}
@code{ENV::each} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-each_child,each_child}
@code{Dir::each_child} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-each_key,each_key}
@code{ENV::each_key} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html#method-c-each_object,each_object}
@code{ObjectSpace::each_object} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-each_pair,each_pair}
@code{ENV::each_pair} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-each_value,each_value}
@code{ENV::each_value} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-egid,egid}
@code{Process::egid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-egid-3D,egid=}
@code{Process::egid=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-eid,eid}
@code{Process/GID::eid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-eid,eid}
@code{Process/UID::eid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-empty-3F,empty?}
@code{Dir::empty?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-empty-3F,empty?}
@code{ENV::empty?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-empty-3F,empty?}
@code{File::empty?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-enable,enable}
@code{GC::enable} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-enable,enable}
@code{GC/Profiler::enable} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-enabled-3F,enabled?}
@code{GC/Profiler::enabled?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-entries,entries}
@code{Dir::entries} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-erf,erf}
@code{Math::erf} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-erfc,erfc}
@code{Math::erfc} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-escape,escape}
@code{Regexp::escape} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-euid,euid}
@code{Process::euid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-euid-3D,euid=}
@code{Process::euid=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-c-exception,exception}
@code{Exception::exception} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-exclusive,exclusive}
@code{Thread::exclusive} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-exec,exec}
@code{Process::exec} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-executable-3F,executable?}
@code{File::executable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-executable_real-3F,executable_real?}
@code{File::executable_real?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-exist-3F,exist?}
@code{Dir::exist?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-exist-3F,exist?}
@code{File::exist?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-exists-3F,exists?}
@code{Dir::exists?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-exists-3F,exists?}
@code{File::exists?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-exit,exit}
@code{Process::exit} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-exit,exit}
@code{Thread::exit} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-exit-21,exit!}
@code{Process::exit!} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-exp,exp}
@code{Math::exp} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-expand_path,expand_path}
@code{File::expand_path} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-extname,extname}
@code{File::extname} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-fetch,fetch}
@code{ENV::fetch} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-file-3F,file?}
@code{File::file?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-find,find}
@code{Encoding::find} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch,fnmatch}
@code{File::fnmatch} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch-3F,fnmatch?}
@code{File::fnmatch?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-for_fd,for_fd}
@code{IO::for_fd} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-foreach,foreach}
@code{Dir::foreach} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-foreach,foreach}
@code{IO::foreach} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-fork,fork}
@code{Process::fork} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-fork,fork}
@code{Thread::fork} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-frexp,frexp}
@code{Math::frexp} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-from_name,from_name}
@code{Process/GID::from_name} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-from_name,from_name}
@code{Process/UID::from_name} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-ftype,ftype}
@code{File::ftype} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-gamma,gamma}
@code{Math::gamma} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html#method-c-garbage_collect,garbage_collect}
@code{ObjectSpace::garbage_collect} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-getegid,getegid}
@code{Process/Sys::getegid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-geteuid,geteuid}
@code{Process/Sys::geteuid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-getgid,getgid}
@code{Process/Sys::getgid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-getpgid,getpgid}
@code{Process::getpgid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-getpgrp,getpgrp}
@code{Process::getpgrp} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-getpriority,getpriority}
@code{Process::getpriority} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-getrlimit,getrlimit}
@code{Process::getrlimit} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-getsid,getsid}
@code{Process::getsid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-getuid,getuid}
@code{Process/Sys::getuid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-getwd,getwd}
@code{Dir::getwd} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-gid,gid}
@code{Process::gid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-gid-3D,gid=}
@code{Process::gid=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-glob,glob}
@code{Dir::glob} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-gm,gm}
@code{Time::gm} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-grant_privilege,grant_privilege}
@code{Process/GID::grant_privilege} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-grant_privilege,grant_privilege}
@code{Process/UID::grant_privilege} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-groups,groups}
@code{Process::groups} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-groups-3D,groups=}
@code{Process::groups=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-grpowned-3F,grpowned?}
@code{File::grpowned?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-handle_interrupt,handle_interrupt}
@code{Thread::handle_interrupt} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-has_key-3F,has_key?}
@code{ENV::has_key?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-has_value-3F,has_value?}
@code{ENV::has_value?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-home,home}
@code{Dir::home} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-hypot,hypot}
@code{Math::hypot} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-identical-3F,identical?}
@code{File::identical?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-include-3F,include?}
@code{ENV::include?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-index,index}
@code{ENV::index} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-initgroups,initgroups}
@code{Process::initgroups} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-inspect,inspect}
@code{ENV::inspect} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-invert,invert}
@code{ENV::invert} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-issetugid,issetugid}
@code{Process/Sys::issetugid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-join,join}
@code{File::join} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-keep_if,keep_if}
@code{ENV::keep_if} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-key,key}
@code{ENV::key} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-key-3F,key?}
@code{ENV::key?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-keys,keys}
@code{ENV::keys} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-kill,kill}
@code{Process::kill} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-kill,kill}
@code{Thread::kill} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-last_match,last_match}
@code{Regexp::last_match} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-last_status,last_status}
@code{Process::last_status} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-latest_gc_info,latest_gc_info}
@code{GC::latest_gc_info} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-lchmod,lchmod}
@code{File::lchmod} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-lchown,lchown}
@code{File::lchown} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-ldexp,ldexp}
@code{Math::ldexp} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-length,length}
@code{ENV::length} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-lgamma,lgamma}
@code{Math::lgamma} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-link,link}
@code{File::link} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-list,list}
@code{Encoding::list} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Signal.html#method-c-list,list}
@code{Signal::list} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-list,list}
@code{Thread::list} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Marshal.html#method-c-load,load}
@code{Marshal::load} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-load_from_binary,load_from_binary}
@code{RubyVM/InstructionSequence::load_from_binary} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-load_from_binary_extra_data,load_from_binary_extra_data}
@code{RubyVM/InstructionSequence::load_from_binary_extra_data} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-local,local}
@code{Time::local} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-locale_charmap,locale_charmap}
@code{Encoding::locale_charmap} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-log,log}
@code{Math::log} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-log10,log10}
@code{Math::log10} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-log2,log2}
@code{Math::log2} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-lstat,lstat}
@code{File::lstat} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-lutime,lutime}
@code{File::lutime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-main,main}
@code{Thread::main} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-malloc_allocated_size,malloc_allocated_size}
@code{GC::malloc_allocated_size} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-malloc_allocations,malloc_allocations}
@code{GC::malloc_allocations} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-maxgroups,maxgroups}
@code{Process::maxgroups} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-maxgroups-3D,maxgroups=}
@code{Process::maxgroups=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-member-3F,member?}
@code{ENV::member?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-mkdir,mkdir}
@code{Dir::mkdir} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-mkfifo,mkfifo}
@code{File::mkfifo} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-mktime,mktime}
@code{Time::mktime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-mtime,mtime}
@code{File::mtime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-c-name_list,name_list}
@code{Encoding::name_list} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-c-nesting,nesting}
@code{Module::nesting} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-c-new,new}
@code{Array::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-c-new,new}
@code{BasicObject::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Class.html#method-c-new,new}
@code{Class::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ConditionVariable.html#method-c-new,new}
@code{ConditionVariable::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-new,new}
@code{Dir::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-c-new,new}
@code{Encoding/Converter::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-c-new,new}
@code{Enumerator::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-c-new,new}
@code{Enumerator/Lazy::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-c-new,new}
@code{Exception::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-new,new}
@code{File::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-c-new,new}
@code{File/Stat::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-c-new,new}
@code{Hash::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-new,new}
@code{IO::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-c-new,new}
@code{Module::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-c-new,new}
@code{Mutex::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/NameError.html#method-c-new,new}
@code{NameError::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/NoMethodError.html#method-c-new,new}
@code{NoMethodError::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-c-new,new}
@code{Proc::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-c-new,new}
@code{Queue::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-c-new,new}
@code{Random::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-c-new,new}
@code{Range::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-new,new}
@code{Regexp::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-new,new}
@code{RubyVM/InstructionSequence::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/SignalException.html#method-c-new,new}
@code{SignalException::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-c-new,new}
@code{SizedQueue::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-c-new,new}
@code{String::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-c-new,new}
@code{Struct::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/SyntaxError.html#method-c-new,new}
@code{SyntaxError::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/SystemCallError.html#method-c-new,new}
@code{SystemCallError::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/SystemExit.html#method-c-new,new}
@code{SystemExit::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-new,new}
@code{Thread::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-new,new}
@code{Time::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-c-new,new}
@code{TracePoint::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/UncaughtThrowError.html#method-c-new,new}
@code{UncaughtThrowError::new} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-c-new_seed,new_seed}
@code{Random::new_seed} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-now,now}
@code{Time::now} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-c-of,of}
@code{RubyVM/InstructionSequence::of} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-open,open}
@code{Dir::open} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-open,open}
@code{File::open} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-open,open}
@code{IO::open} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-owned-3F,owned?}
@code{File::owned?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-pass,pass}
@code{Thread::pass} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-path,path}
@code{File::path} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-pending_interrupt-3F,pending_interrupt?}
@code{Thread::pending_interrupt?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-pid,pid}
@code{Process::pid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-pipe,pipe}
@code{IO::pipe} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-pipe-3F,pipe?}
@code{File::pipe?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-c-polar,polar}
@code{Complex::polar} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-popen,popen}
@code{IO::popen} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-ppid,ppid}
@code{Process::ppid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-pwd,pwd}
@code{Dir::pwd} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-quote,quote}
@code{Regexp::quote} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-c-rand,rand}
@code{Random::rand} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-rassoc,rassoc}
@code{ENV::rassoc} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-raw_data,raw_data}
@code{GC/Profiler::raw_data} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-re_exchange,re_exchange}
@code{Process/GID::re_exchange} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-re_exchange,re_exchange}
@code{Process/UID::re_exchange} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-re_exchangeable-3F,re_exchangeable?}
@code{Process/GID::re_exchangeable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-re_exchangeable-3F,re_exchangeable?}
@code{Process/UID::re_exchangeable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-read,read}
@code{IO::read} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-readable-3F,readable?}
@code{File::readable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-readable_real-3F,readable_real?}
@code{File::readable_real?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-readlines,readlines}
@code{IO::readlines} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-readlink,readlink}
@code{File::readlink} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-realdirpath,realdirpath}
@code{File::realdirpath} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-realpath,realpath}
@code{File::realpath} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-c-rect,rect}
@code{Complex::rect} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-c-rectangular,rectangular}
@code{Complex::rectangular} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-rehash,rehash}
@code{ENV::rehash} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-reject,reject}
@code{ENV::reject} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-reject-21,reject!}
@code{ENV::reject!} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-remove_stress_to_class,remove_stress_to_class}
@code{GC::remove_stress_to_class} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-rename,rename}
@code{File::rename} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-replace,replace}
@code{ENV::replace} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-report,report}
@code{GC/Profiler::report} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-report_on_exception,report_on_exception}
@code{Thread::report_on_exception} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-report_on_exception-3D,report_on_exception=}
@code{Thread::report_on_exception=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Marshal.html#method-c-restore,restore}
@code{Marshal::restore} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-result,result}
@code{GC/Profiler::result} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-rid,rid}
@code{Process/GID::rid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-rid,rid}
@code{Process/UID::rid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-rmdir,rmdir}
@code{Dir::rmdir} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-c-search_convpath,search_convpath}
@code{Encoding/Converter::search_convpath} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-select,select}
@code{ENV::select} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-select,select}
@code{IO::select} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-select-21,select!}
@code{ENV::select!} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setegid,setegid}
@code{Process/Sys::setegid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-seteuid,seteuid}
@code{Process/Sys::seteuid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setgid,setgid}
@code{Process/Sys::setgid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-setgid-3F,setgid?}
@code{File::setgid?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-setpgid,setpgid}
@code{Process::setpgid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-setpgrp,setpgrp}
@code{Process::setpgrp} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-setpriority,setpriority}
@code{Process::setpriority} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-setproctitle,setproctitle}
@code{Process::setproctitle} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setregid,setregid}
@code{Process/Sys::setregid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setresgid,setresgid}
@code{Process/Sys::setresgid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setresuid,setresuid}
@code{Process/Sys::setresuid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setreuid,setreuid}
@code{Process/Sys::setreuid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setrgid,setrgid}
@code{Process/Sys::setrgid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-setrlimit,setrlimit}
@code{Process::setrlimit} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setruid,setruid}
@code{Process/Sys::setruid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-setsid,setsid}
@code{Process::setsid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Sys.html#method-c-setuid,setuid}
@code{Process/Sys::setuid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-setuid-3F,setuid?}
@code{File::setuid?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-shift,shift}
@code{ENV::shift} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-sid_available-3F,sid_available?}
@code{Process/GID::sid_available?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-sid_available-3F,sid_available?}
@code{Process/UID::sid_available?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Signal.html#method-c-signame,signame}
@code{Signal::signame} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-sin,sin}
@code{Math::sin} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-sinh,sinh}
@code{Math::sinh} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-size,size}
@code{ENV::size} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-size,size}
@code{File::size} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-size-3F,size?}
@code{File::size?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-socket-3F,socket?}
@code{File::socket?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-spawn,spawn}
@code{Process::spawn} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-split,split}
@code{File::split} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-c-sqrt,sqrt}
@code{Integer::sqrt} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-sqrt,sqrt}
@code{Math::sqrt} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-c-srand,srand}
@code{Random::srand} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-start,start}
@code{GC::start} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-start,start}
@code{Thread::start} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-stat,stat}
@code{File::stat} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-stat,stat}
@code{GC::stat} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM.html#method-c-stat,stat}
@code{RubyVM::stat} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-c-stat,stat}
@code{TracePoint::stat} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-sticky-3F,sticky?}
@code{File::sticky?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-c-stop,stop}
@code{Thread::stop} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-store,store}
@code{ENV::store} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-stress,stress}
@code{GC::stress} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-stress-3D,stress=}
@code{GC::stress=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/GID.html#method-c-switch,switch}
@code{Process/GID::switch} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/UID.html#method-c-switch,switch}
@code{Process/UID::switch} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-symlink,symlink}
@code{File::symlink} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-symlink-3F,symlink?}
@code{File::symlink?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-sysopen,sysopen}
@code{IO::sysopen} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-tan,tan}
@code{Math::tan} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Math.html#method-c-tanh,tanh}
@code{Math::tanh} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-times,times}
@code{Process::times} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-to_a,to_a}
@code{ENV::to_a} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-to_h,to_h}
@code{ENV::to_h} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-to_hash,to_hash}
@code{ENV::to_hash} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-to_s,to_s}
@code{ENV::to_s} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-c-to_tty-3F,to_tty?}
@code{Exception::to_tty?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC/Profiler.html#method-c-total_time,total_time}
@code{GC/Profiler::total_time} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-c-trace,trace}
@code{TracePoint::trace} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Signal.html#method-c-trap,trap}
@code{Signal::trap} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-truncate,truncate}
@code{File::truncate} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-c-try_convert,try_convert}
@code{Array::try_convert} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-c-try_convert,try_convert}
@code{Hash::try_convert} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-try_convert,try_convert}
@code{IO::try_convert} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-try_convert,try_convert}
@code{Regexp::try_convert} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-c-try_convert,try_convert}
@code{String::try_convert} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-uid,uid}
@code{Process::uid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-uid-3D,uid=}
@code{Process::uid=} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-umask,umask}
@code{File::umask} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace.html#method-c-undefine_finalizer,undefine_finalizer}
@code{ObjectSpace::undefine_finalizer} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-c-union,union}
@code{Regexp::union} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-c-unlink,unlink}
@code{Dir::unlink} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-unlink,unlink}
@code{File::unlink} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-update,update}
@code{ENV::update} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-c-urandom,urandom}
@code{Random::urandom} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-c-used_modules,used_modules}
@code{Module::used_modules} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-c-utc,utc}
@code{Time::utc} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-utime,utime}
@code{File::utime} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-value-3F,value?}
@code{ENV::value?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-values,values}
@code{ENV::values} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/ENV.html#method-c-values_at,values_at}
@code{ENV::values_at} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-c-verify_internal_consistency,verify_internal_consistency}
@code{GC::verify_internal_consistency} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-wait,wait}
@code{Process::wait} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-wait2,wait2}
@code{Process::wait2} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-waitall,waitall}
@code{Process::waitall} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-waitpid,waitpid}
@code{Process::waitpid} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process.html#method-c-waitpid2,waitpid2}
@code{Process::waitpid2} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-world_readable-3F,world_readable?}
@code{File::world_readable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-world_writable-3F,world_writable?}
@code{File::world_writable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-writable-3F,writable?}
@code{File::writable?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-writable_real-3F,writable_real?}
@code{File::writable_real?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-c-write,write}
@code{IO::write} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-c-yield,yield}
@code{Fiber::yield} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-c-zero-3F,zero?}
@code{File::zero?} (Class Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-21,!}
@code{BasicObject#!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-21-3D,!=}
@code{BasicObject#!=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-21-7E,!~}
@code{Object#!~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-25,%}
@code{Float#%} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-25,%}
@code{Integer#%} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-25,%}
@code{Numeric#%} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-25,%}
@code{String#%} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-26,&}
@code{Array#&} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html#method-i-26,&}
@code{FalseClass#&} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-26,&}
@code{Integer#&} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-26,&}
@code{NilClass#&} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-26,&}
@code{Process/Status#&} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html#method-i-26,&}
@code{TrueClass#&} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-2A,*}
@code{Array#*} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-2A,*}
@code{Complex#*} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-2A,*}
@code{Float#*} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-2A,*}
@code{Integer#*} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-2A,*}
@code{Rational#*} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-2A,*}
@code{String#*} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-2A-2A,**}
@code{Complex#**} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-2A-2A,**}
@code{Float#**} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-2A-2A,**}
@code{Integer#**} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-2A-2A,**}
@code{Rational#**} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-2B,+}
@code{Array#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-2B,+}
@code{Complex#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-2B,+}
@code{Float#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-2B,+}
@code{Integer#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-2B,+}
@code{Rational#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-2B,+}
@code{String#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-2B,+}
@code{Time#+} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-2B0,+0}
@code{Numeric#+0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-2B0,+0}
@code{String#+0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-2D,-}
@code{Array#-} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-2D,-}
@code{Complex#-} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-2D,-}
@code{Float#-} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-2D,-}
@code{Integer#-} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-2D,-}
@code{Rational#-} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-2D,-}
@code{Time#-} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-2D0,-0}
@code{Complex#-0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-2D0,-0}
@code{Float#-0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-2D0,-0}
@code{Integer#-0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-2D0,-0}
@code{Numeric#-0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-2D0,-0}
@code{Rational#-0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-2D0,-0}
@code{String#-0} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-2F,/}
@code{Complex#/} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-2F,/}
@code{Float#/} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-2F,/}
@code{Integer#/} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-2F,/}
@code{Rational#/} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-3C,<}
@code{Comparable#<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3C,<}
@code{Float#<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-3C,<}
@code{Hash#<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3C,<}
@code{Integer#<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3C,<}
@code{Module#<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-3C-3C,<<}
@code{Array#<<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-3C-3C,<<}
@code{IO#<<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3C-3C,<<}
@code{Integer#<<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-3C-3C,<<}
@code{Queue#<<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-3C-3C,<<}
@code{SizedQueue#<<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-3C-3C,<<}
@code{String#<<} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-3C-3D,<=}
@code{Comparable#<=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3C-3D,<=}
@code{Float#<=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-3C-3D,<=}
@code{Hash#<=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3C-3D,<=}
@code{Integer#<=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3C-3D,<=}
@code{Module#<=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-3C-3D-3E,<=>}
@code{Array#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-3C-3D-3E,<=>}
@code{File/Stat#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3C-3D-3E,<=>}
@code{Float#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3C-3D-3E,<=>}
@code{Integer#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3C-3D-3E,<=>}
@code{Module#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-3C-3D-3E,<=>}
@code{Numeric#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-3C-3D-3E,<=>}
@code{Object#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-3C-3D-3E,<=>}
@code{Rational#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-3C-3D-3E,<=>}
@code{String#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-3C-3D-3E,<=>}
@code{Symbol#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-3C-3D-3E,<=>}
@code{Time#<=>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-3D-3D,==}
@code{Array#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-3D-3D,==}
@code{BasicObject#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-3D-3D,==}
@code{Comparable#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-3D-3D,==}
@code{Complex#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-3D-3D,==}
@code{Encoding/Converter#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-3D-3D,==}
@code{Exception#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3D-3D,==}
@code{Float#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-3D-3D,==}
@code{Hash#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3D-3D,==}
@code{Integer#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-3D-3D,==}
@code{MatchData#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-3D-3D,==}
@code{Method#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3D-3D,==}
@code{Module#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-3D-3D,==}
@code{Process/Status#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-i-3D-3D,==}
@code{Random#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-3D-3D,==}
@code{Range#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-3D-3D,==}
@code{Rational#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-3D-3D,==}
@code{Regexp#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-3D-3D,==}
@code{String#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-3D-3D,==}
@code{Struct#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-3D-3D,==}
@code{Symbol#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-3D-3D,==}
@code{UnboundMethod#==} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html#method-i-3D-3D-3D,===}
@code{FalseClass#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3D-3D-3D,===}
@code{Float#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3D-3D-3D,===}
@code{Integer#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-3D-3D-3D,===}
@code{Method#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3D-3D-3D,===}
@code{Module#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-3D-3D-3D,===}
@code{NilClass#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-3D-3D-3D,===}
@code{Object#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-3D-3D-3D,===}
@code{Proc#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-3D-3D-3D,===}
@code{Range#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-3D-3D-3D,===}
@code{Regexp#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-3D-3D-3D,===}
@code{String#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-3D-3D-3D,===}
@code{Symbol#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html#method-i-3D-3D-3D,===}
@code{TrueClass#===} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-3D-7E,=~}
@code{Object#=~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-3D-7E,=~}
@code{Regexp#=~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-3D-7E,=~}
@code{String#=~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-3D-7E,=~}
@code{Symbol#=~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-3E,>}
@code{Comparable#>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3E,>}
@code{Float#>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-3E,>}
@code{Hash#>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3E,>}
@code{Integer#>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3E,>}
@code{Module#>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-3E-3D,>=}
@code{Comparable#>=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-3E-3D,>=}
@code{Float#>=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-3E-3D,>=}
@code{Hash#>=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3E-3D,>=}
@code{Integer#>=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-3E-3D,>=}
@code{Module#>=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-3E-3E,>>}
@code{Integer#>>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-3E-3E,>>}
@code{Process/Status#>>} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-Array,Array}
@code{Kernel#Array} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-Complex,Complex}
@code{Kernel#Complex} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-Float,Float}
@code{Kernel#Float} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-Hash,Hash}
@code{Kernel#Hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-Integer,Integer}
@code{Kernel#Integer} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-Rational,Rational}
@code{Kernel#Rational} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-String,String}
@code{Kernel#String} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-5B-5D,[]}
@code{Array#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Continuation.html#method-i-5B-5D,[]}
@code{Continuation#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-5B-5D,[]}
@code{Hash#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-5B-5D,[]}
@code{Integer#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-5B-5D,[]}
@code{MatchData#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-5B-5D,[]}
@code{Method#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-5B-5D,[]}
@code{ObjectSpace/WeakMap#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-5B-5D,[]}
@code{Proc#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-5B-5D,[]}
@code{String#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-5B-5D,[]}
@code{Struct#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-5B-5D,[]}
@code{Symbol#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-5B-5D,[]}
@code{Thread#[]} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-5B-5D-3D,[]=}
@code{Array#[]=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-5B-5D-3D,[]=}
@code{Hash#[]=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-5B-5D-3D,[]=}
@code{ObjectSpace/WeakMap#[]=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-5B-5D-3D,[]=}
@code{String#[]=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-5B-5D-3D,[]=}
@code{Struct#[]=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-5B-5D-3D,[]=}
@code{Thread#[]=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html#method-i-5E,^}
@code{FalseClass#^} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-5E,^}
@code{Integer#^} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-5E,^}
@code{NilClass#^} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html#method-i-5E,^}
@code{TrueClass#^} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-__callee__,__callee__}
@code{Kernel#__callee__} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-__dir__,__dir__}
@code{Kernel#__dir__} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-__id__,__id__}
@code{BasicObject#__id__} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-__method__,__method__}
@code{Kernel#__method__} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-__send__,__send__}
@code{BasicObject#__send__} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-`,`}
@code{Kernel#`} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-abort,abort}
@code{Kernel#abort} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-abort_on_exception,abort_on_exception}
@code{Thread#abort_on_exception} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-abort_on_exception-3D,abort_on_exception=}
@code{Thread#abort_on_exception=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-abs,abs}
@code{Complex#abs} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-abs,abs}
@code{Float#abs} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-abs,abs}
@code{Integer#abs} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-abs,abs}
@code{Numeric#abs} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-abs,abs}
@code{Rational#abs} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-abs2,abs2}
@code{Complex#abs2} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-abs2,abs2}
@code{Numeric#abs2} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-absolute_path,absolute_path}
@code{RubyVM/InstructionSequence#absolute_path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-absolute_path,absolute_path}
@code{Thread/Backtrace/Location#absolute_path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ThreadGroup.html#method-i-add,add}
@code{ThreadGroup#add} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-add_trace_func,add_trace_func}
@code{Thread#add_trace_func} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-advise,advise}
@code{IO#advise} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-alias_method,alias_method}
@code{Module#alias_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-i-alive-3F,alive?}
@code{Fiber#alive?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-alive-3F,alive?}
@code{Thread#alive?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-all-3F,all?}
@code{Enumerable#all?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-allbits-3F,allbits?}
@code{Integer#allbits?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Class.html#method-i-allocate,allocate}
@code{Class#allocate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-ancestors,ancestors}
@code{Module#ancestors} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-angle,angle}
@code{Complex#angle} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-angle,angle}
@code{Float#angle} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-angle,angle}
@code{Numeric#angle} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-any-3F,any?}
@code{Array#any?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-any-3F,any?}
@code{Enumerable#any?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-any-3F,any?}
@code{Hash#any?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-anybits-3F,anybits?}
@code{Integer#anybits?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-append,append}
@code{Array#append} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-append_features,append_features}
@code{Module#append_features} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-arg,arg}
@code{Complex#arg} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-arg,arg}
@code{Float#arg} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-arg,arg}
@code{Numeric#arg} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NoMethodError.html#method-i-args,args}
@code{NoMethodError#args} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-argv,argv}
@code{ARGF#argv} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-arity,arity}
@code{Method#arity} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-arity,arity}
@code{Proc#arity} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-arity,arity}
@code{UnboundMethod#arity} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-ascii_compatible-3F,ascii_compatible?}
@code{Encoding#ascii_compatible?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-ascii_only-3F,ascii_only?}
@code{String#ascii_only?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-asctime,asctime}
@code{Time#asctime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-assoc,assoc}
@code{Array#assoc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-assoc,assoc}
@code{Hash#assoc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-at,at}
@code{Array#at} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-at_exit,at_exit}
@code{Kernel#at_exit} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-atime,atime}
@code{File#atime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-atime,atime}
@code{File/Stat#atime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-attr,attr}
@code{Module#attr} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-attr_accessor,attr_accessor}
@code{Module#attr_accessor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-attr_reader,attr_reader}
@code{Module#attr_reader} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-attr_writer,attr_writer}
@code{Module#attr_writer} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-autoclose-3D,autoclose=}
@code{IO#autoclose=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-autoclose-3F,autoclose?}
@code{IO#autoclose?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-autoload,autoload}
@code{Kernel#autoload} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-autoload,autoload}
@code{Module#autoload} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-autoload-3F,autoload?}
@code{Kernel#autoload?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-autoload-3F,autoload?}
@code{Module#autoload?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-b,b}
@code{String#b} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-backtrace,backtrace}
@code{Exception#backtrace} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-backtrace,backtrace}
@code{Thread#backtrace} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-backtrace_locations,backtrace_locations}
@code{Exception#backtrace_locations} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-backtrace_locations,backtrace_locations}
@code{Thread#backtrace_locations} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-base_label,base_label}
@code{RubyVM/InstructionSequence#base_label} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-base_label,base_label}
@code{Thread/Backtrace/Location#base_label} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-begin,begin}
@code{MatchData#begin} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-begin,begin}
@code{Range#begin} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-between-3F,between?}
@code{Comparable#between?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-bind,bind}
@code{UnboundMethod#bind} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-binding,binding}
@code{Kernel#binding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-binding,binding}
@code{Proc#binding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-binding,binding}
@code{TracePoint#binding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-binmode,binmode}
@code{ARGF#binmode} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-binmode,binmode}
@code{IO#binmode} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-binmode-3F,binmode?}
@code{ARGF#binmode?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-binmode-3F,binmode?}
@code{IO#binmode?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-birthtime,birthtime}
@code{File#birthtime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-birthtime,birthtime}
@code{File/Stat#birthtime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-bit_length,bit_length}
@code{Integer#bit_length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-blksize,blksize}
@code{File/Stat#blksize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-block_given-3F,block_given?}
@code{Kernel#block_given?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-blockdev-3F,blockdev?}
@code{File/Stat#blockdev?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-blockdev-3F,blockdev?}
@code{FileTest#blockdev?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-blocks,blocks}
@code{File/Stat#blocks} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ConditionVariable.html#method-i-broadcast,broadcast}
@code{ConditionVariable#broadcast} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-bsearch,bsearch}
@code{Array#bsearch} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-bsearch,bsearch}
@code{Range#bsearch} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-bsearch_index,bsearch_index}
@code{Array#bsearch_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-bytes,bytes}
@code{ARGF#bytes} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-bytes,bytes}
@code{IO#bytes} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-i-bytes,bytes}
@code{Random#bytes} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-bytes,bytes}
@code{String#bytes} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-bytesize,bytesize}
@code{String#bytesize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-byteslice,byteslice}
@code{String#byteslice} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Continuation.html#method-i-call,call}
@code{Continuation#call} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-call,call}
@code{Method#call} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-call,call}
@code{Proc#call} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-callcc,callcc}
@code{Kernel#callcc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-callee_id,callee_id}
@code{TracePoint#callee_id} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-caller,caller}
@code{Kernel#caller} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-caller_locations,caller_locations}
@code{Kernel#caller_locations} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-capitalize,capitalize}
@code{String#capitalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-capitalize,capitalize}
@code{Symbol#capitalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-capitalize-21,capitalize!}
@code{String#capitalize!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-captures,captures}
@code{MatchData#captures} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-casecmp,casecmp}
@code{String#casecmp} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-casecmp,casecmp}
@code{Symbol#casecmp} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-casecmp-3F,casecmp?}
@code{String#casecmp?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-casecmp-3F,casecmp?}
@code{Symbol#casecmp?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-casefold-3F,casefold?}
@code{Regexp#casefold?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-catch,catch}
@code{Kernel#catch} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-cause,cause}
@code{Exception#cause} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-ceil,ceil}
@code{Float#ceil} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-ceil,ceil}
@code{Integer#ceil} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-ceil,ceil}
@code{Numeric#ceil} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-ceil,ceil}
@code{Rational#ceil} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-center,center}
@code{String#center} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-chardev-3F,chardev?}
@code{File/Stat#chardev?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-chardev-3F,chardev?}
@code{FileTest#chardev?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-chars,chars}
@code{ARGF#chars} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-chars,chars}
@code{IO#chars} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-chars,chars}
@code{String#chars} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-chmod,chmod}
@code{File#chmod} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-chomp,chomp}
@code{Kernel#chomp} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-chomp,chomp}
@code{String#chomp} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-chomp-21,chomp!}
@code{String#chomp!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-chop,chop}
@code{Kernel#chop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-chop,chop}
@code{String#chop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-chop-21,chop!}
@code{String#chop!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-chown,chown}
@code{File#chown} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-chr,chr}
@code{Integer#chr} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-chr,chr}
@code{String#chr} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-chunk,chunk}
@code{Enumerable#chunk} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-chunk,chunk}
@code{Enumerator/Lazy#chunk} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-chunk_while,chunk_while}
@code{Enumerable#chunk_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-chunk_while,chunk_while}
@code{Enumerator/Lazy#chunk_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Comparable.html#method-i-clamp,clamp}
@code{Comparable#clamp} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-class,class}
@code{Object#class} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-class_eval,class_eval}
@code{Module#class_eval} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-class_exec,class_exec}
@code{Module#class_exec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-class_variable_defined-3F,class_variable_defined?}
@code{Module#class_variable_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-class_variable_get,class_variable_get}
@code{Module#class_variable_get} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-class_variable_set,class_variable_set}
@code{Module#class_variable_set} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-class_variables,class_variables}
@code{Module#class_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-clear,clear}
@code{Array#clear} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-clear,clear}
@code{Hash#clear} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-clear,clear}
@code{Queue#clear} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-clear,clear}
@code{SizedQueue#clear} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-clear,clear}
@code{String#clear} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-clone,clone}
@code{Method#clone} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-clone,clone}
@code{Numeric#clone} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-clone,clone}
@code{Object#clone} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-clone,clone}
@code{UnboundMethod#clone} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-close,close}
@code{ARGF#close} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-close,close}
@code{Dir#close} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-close,close}
@code{IO#close} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-close,close}
@code{Queue#close} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-close,close}
@code{SizedQueue#close} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-close_on_exec-3D,close_on_exec=}
@code{IO#close_on_exec=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-close_on_exec-3F,close_on_exec?}
@code{IO#close_on_exec?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-close_read,close_read}
@code{IO#close_read} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-close_write,close_write}
@code{IO#close_write} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-closed-3F,closed?}
@code{ARGF#closed?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-closed-3F,closed?}
@code{IO#closed?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-closed-3F,closed?}
@code{Queue#closed?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-codepoints,codepoints}
@code{ARGF#codepoints} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-codepoints,codepoints}
@code{IO#codepoints} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-codepoints,codepoints}
@code{String#codepoints} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-coerce,coerce}
@code{Float#coerce} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-coerce,coerce}
@code{Integer#coerce} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-coerce,coerce}
@code{Numeric#coerce} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-collect,collect}
@code{Array#collect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-collect,collect}
@code{Enumerable#collect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-collect,collect}
@code{Enumerator/Lazy#collect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-collect-21,collect!}
@code{Array#collect!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-collect_concat,collect_concat}
@code{Enumerable#collect_concat} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-collect_concat,collect_concat}
@code{Enumerator/Lazy#collect_concat} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-combination,combination}
@code{Array#combination} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-compact,compact}
@code{Array#compact} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-compact,compact}
@code{Hash#compact} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-compact-21,compact!}
@code{Array#compact!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-compact-21,compact!}
@code{Hash#compact!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-compare_by_identity,compare_by_identity}
@code{Hash#compare_by_identity} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-compare_by_identity-3F,compare_by_identity?}
@code{Hash#compare_by_identity?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-concat,concat}
@code{Array#concat} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-concat,concat}
@code{String#concat} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-conj,conj}
@code{Complex#conj} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-conj,conj}
@code{Numeric#conj} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-conjugate,conjugate}
@code{Complex#conjugate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-conjugate,conjugate}
@code{Numeric#conjugate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-const_defined-3F,const_defined?}
@code{Module#const_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-const_get,const_get}
@code{Module#const_get} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-const_missing,const_missing}
@code{Module#const_missing} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-const_set,const_set}
@code{Module#const_set} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-constants,constants}
@code{Module#constants} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-convert,convert}
@code{Encoding/Converter#convert} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-convpath,convpath}
@code{Encoding/Converter#convpath} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-coredump-3F,coredump?}
@code{Process/Status#coredump?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-count,count}
@code{Array#count} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-count,count}
@code{Enumerable#count} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-count,count}
@code{String#count} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-cover-3F,cover?}
@code{Range#cover?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-crypt,crypt}
@code{String#crypt} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-ctime,ctime}
@code{File#ctime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-ctime,ctime}
@code{File/Stat#ctime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-ctime,ctime}
@code{Time#ctime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-curry,curry}
@code{Method#curry} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-curry,curry}
@code{Proc#curry} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-cycle,cycle}
@code{Array#cycle} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-cycle,cycle}
@code{Enumerable#cycle} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-day,day}
@code{Time#day} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-default,default}
@code{Hash#default} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-default-3D,default=}
@code{Hash#default=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-default_proc,default_proc}
@code{Hash#default_proc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-default_proc-3D,default_proc=}
@code{Hash#default_proc=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-define_method,define_method}
@code{Module#define_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-define_singleton_method,define_singleton_method}
@code{Object#define_singleton_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-defined_class,defined_class}
@code{TracePoint#defined_class} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-delete,delete}
@code{Array#delete} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-delete,delete}
@code{Hash#delete} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-delete,delete}
@code{String#delete} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-delete-21,delete!}
@code{String#delete!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-delete_at,delete_at}
@code{Array#delete_at} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-delete_if,delete_if}
@code{Array#delete_if} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-delete_if,delete_if}
@code{Hash#delete_if} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-delete_prefix,delete_prefix}
@code{String#delete_prefix} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-delete_prefix-21,delete_prefix!}
@code{String#delete_prefix!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-delete_suffix,delete_suffix}
@code{String#delete_suffix} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-delete_suffix-21,delete_suffix!}
@code{String#delete_suffix!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-denominator,denominator}
@code{Complex#denominator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-denominator,denominator}
@code{Float#denominator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-denominator,denominator}
@code{Integer#denominator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-denominator,denominator}
@code{Numeric#denominator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-denominator,denominator}
@code{Rational#denominator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-deprecate_constant,deprecate_constant}
@code{Module#deprecate_constant} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-deq,deq}
@code{Queue#deq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-deq,deq}
@code{SizedQueue#deq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-destination_encoding,destination_encoding}
@code{Encoding/Converter#destination_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding,destination_encoding}
@code{Encoding/InvalidByteSequenceError#destination_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/UndefinedConversionError.html#method-i-destination_encoding,destination_encoding}
@code{Encoding/UndefinedConversionError#destination_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding_name,destination_encoding_name}
@code{Encoding/InvalidByteSequenceError#destination_encoding_name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/UndefinedConversionError.html#method-i-destination_encoding_name,destination_encoding_name}
@code{Encoding/UndefinedConversionError#destination_encoding_name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-detect,detect}
@code{Enumerable#detect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-dev,dev}
@code{File/Stat#dev} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-dev_major,dev_major}
@code{File/Stat#dev_major} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-dev_minor,dev_minor}
@code{File/Stat#dev_minor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-dig,dig}
@code{Array#dig} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-dig,dig}
@code{Hash#dig} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-dig,dig}
@code{Struct#dig} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-digits,digits}
@code{Integer#digits} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-directory-3F,directory?}
@code{File/Stat#directory?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-directory-3F,directory?}
@code{FileTest#directory?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-disable,disable}
@code{TracePoint#disable} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-disasm,disasm}
@code{RubyVM/InstructionSequence#disasm} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-disassemble,disassemble}
@code{RubyVM/InstructionSequence#disassemble} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-display,display}
@code{Object#display} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-div,div}
@code{Integer#div} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-div,div}
@code{Numeric#div} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-divmod,divmod}
@code{Float#divmod} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-divmod,divmod}
@code{Integer#divmod} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-divmod,divmod}
@code{Numeric#divmod} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-downcase,downcase}
@code{String#downcase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-downcase,downcase}
@code{Symbol#downcase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-downcase-21,downcase!}
@code{String#downcase!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-downto,downto}
@code{Integer#downto} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-drop,drop}
@code{Array#drop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-drop,drop}
@code{Enumerable#drop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-drop,drop}
@code{Enumerator/Lazy#drop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-drop_while,drop_while}
@code{Array#drop_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-drop_while,drop_while}
@code{Enumerable#drop_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-drop_while,drop_while}
@code{Enumerator/Lazy#drop_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-dst-3F,dst?}
@code{Time#dst?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-dummy-3F,dummy?}
@code{Encoding#dummy?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-dump,dump}
@code{String#dump} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-dup,dup}
@code{Numeric#dup} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-dup,dup}
@code{Object#dup} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-each,each}
@code{ARGF#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-each,each}
@code{Array#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-each,each}
@code{Dir#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-each,each}
@code{Enumerator#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-each,each}
@code{Hash#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-each,each}
@code{IO#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-each,each}
@code{ObjectSpace/WeakMap#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-each,each}
@code{Range#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-each,each}
@code{Struct#each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-each_byte,each_byte}
@code{ARGF#each_byte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-each_byte,each_byte}
@code{IO#each_byte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-each_byte,each_byte}
@code{String#each_byte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-each_char,each_char}
@code{ARGF#each_char} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-each_char,each_char}
@code{IO#each_char} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-each_char,each_char}
@code{String#each_char} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-each_child,each_child}
@code{RubyVM/InstructionSequence#each_child} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-each_codepoint,each_codepoint}
@code{ARGF#each_codepoint} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-each_codepoint,each_codepoint}
@code{IO#each_codepoint} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-each_codepoint,each_codepoint}
@code{String#each_codepoint} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-each_cons,each_cons}
@code{Enumerable#each_cons} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-each_entry,each_entry}
@code{Enumerable#each_entry} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-each_grapheme_cluster,each_grapheme_cluster}
@code{String#each_grapheme_cluster} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-each_index,each_index}
@code{Array#each_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-each_key,each_key}
@code{Hash#each_key} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-each_key,each_key}
@code{ObjectSpace/WeakMap#each_key} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-each_line,each_line}
@code{ARGF#each_line} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-each_line,each_line}
@code{IO#each_line} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-each_line,each_line}
@code{String#each_line} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-each_pair,each_pair}
@code{Hash#each_pair} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-each_pair,each_pair}
@code{ObjectSpace/WeakMap#each_pair} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-each_pair,each_pair}
@code{Struct#each_pair} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-each_slice,each_slice}
@code{Enumerable#each_slice} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-each_value,each_value}
@code{Hash#each_value} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-each_value,each_value}
@code{ObjectSpace/WeakMap#each_value} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-each_with_index,each_with_index}
@code{Enumerable#each_with_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-each_with_index,each_with_index}
@code{Enumerator#each_with_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-each_with_object,each_with_object}
@code{Enumerable#each_with_object} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-each_with_object,each_with_object}
@code{Enumerator#each_with_object} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-empty-3F,empty?}
@code{Array#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-empty-3F,empty?}
@code{FileTest#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-empty-3F,empty?}
@code{Hash#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-empty-3F,empty?}
@code{Queue#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-empty-3F,empty?}
@code{SizedQueue#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-empty-3F,empty?}
@code{String#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-empty-3F,empty?}
@code{Symbol#empty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-enable,enable}
@code{TracePoint#enable} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-enabled-3F,enabled?}
@code{TracePoint#enabled?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ThreadGroup.html#method-i-enclose,enclose}
@code{ThreadGroup#enclose} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ThreadGroup.html#method-i-enclosed-3F,enclosed?}
@code{ThreadGroup#enclosed?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-encode,encode}
@code{String#encode} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-encode-21,encode!}
@code{String#encode!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-encoding,encoding}
@code{Regexp#encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-encoding,encoding}
@code{String#encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-encoding,encoding}
@code{Symbol#encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-end,end}
@code{MatchData#end} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-end,end}
@code{Range#end} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-end_with-3F,end_with?}
@code{String#end_with?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-enq,enq}
@code{Queue#enq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-enq,enq}
@code{SizedQueue#enq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-entries,entries}
@code{Enumerable#entries} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-enum_for,enum_for}
@code{Enumerator/Lazy#enum_for} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-enum_for,enum_for}
@code{Object#enum_for} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-eof,eof}
@code{ARGF#eof} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-eof,eof}
@code{IO#eof} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-eof-3F,eof?}
@code{ARGF#eof?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-eof-3F,eof?}
@code{IO#eof?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-eql-3F,eql?}
@code{Array#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-eql-3F,eql?}
@code{Float#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-eql-3F,eql?}
@code{Hash#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-eql-3F,eql?}
@code{MatchData#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-eql-3F,eql?}
@code{Method#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-eql-3F,eql?}
@code{Numeric#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-eql-3F,eql?}
@code{Object#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-eql-3F,eql?}
@code{Range#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-eql-3F,eql?}
@code{Regexp#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-eql-3F,eql?}
@code{String#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-eql-3F,eql?}
@code{Struct#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-eql-3F,eql?}
@code{Time#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-eql-3F,eql?}
@code{UnboundMethod#eql?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-equal-3F,equal?}
@code{BasicObject#equal?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SystemCallError.html#method-i-errno,errno}
@code{SystemCallError#errno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-error_bytes,error_bytes}
@code{Encoding/InvalidByteSequenceError#error_bytes} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/UndefinedConversionError.html#method-i-error_char,error_char}
@code{Encoding/UndefinedConversionError#error_char} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html#method-i-eval,eval}
@code{Binding#eval} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-eval,eval}
@code{Kernel#eval} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-eval,eval}
@code{RubyVM/InstructionSequence#eval} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-even-3F,even?}
@code{Integer#even?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-event,event}
@code{TracePoint#event} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-exception,exception}
@code{Exception#exception} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-exclude_end-3F,exclude_end?}
@code{Range#exclude_end?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-exec,exec}
@code{Kernel#exec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-executable-3F,executable?}
@code{File/Stat#executable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-executable-3F,executable?}
@code{FileTest#executable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-executable_real-3F,executable_real?}
@code{File/Stat#executable_real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-executable_real-3F,executable_real?}
@code{FileTest#executable_real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-exist-3F,exist?}
@code{FileTest#exist?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-exists-3F,exists?}
@code{FileTest#exists?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-exit,exit}
@code{Kernel#exit} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-exit,exit}
@code{Thread#exit} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-exit-21,exit!}
@code{Kernel#exit!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/LocalJumpError.html#method-i-exit_value,exit_value}
@code{LocalJumpError#exit_value} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-exited-3F,exited?}
@code{Process/Status#exited?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-exitstatus,exitstatus}
@code{Process/Status#exitstatus} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-extend,extend}
@code{Object#extend} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-extend_object,extend_object}
@code{Module#extend_object} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-extended,extended}
@code{Module#extended} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-external_encoding,external_encoding}
@code{ARGF#external_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-external_encoding,external_encoding}
@code{IO#external_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-fail,fail}
@code{Kernel#fail} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-fcntl,fcntl}
@code{IO#fcntl} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-fdatasync,fdatasync}
@code{IO#fdatasync} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-fdiv,fdiv}
@code{Complex#fdiv} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-fdiv,fdiv}
@code{Float#fdiv} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-fdiv,fdiv}
@code{Integer#fdiv} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-fdiv,fdiv}
@code{Numeric#fdiv} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-fdiv,fdiv}
@code{Rational#fdiv} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-feed,feed}
@code{Enumerator#feed} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-fetch,fetch}
@code{Array#fetch} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-fetch,fetch}
@code{Hash#fetch} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-fetch,fetch}
@code{Thread#fetch} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-fetch_values,fetch_values}
@code{Hash#fetch_values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-file,file}
@code{ARGF#file} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-file-3F,file?}
@code{File/Stat#file?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-file-3F,file?}
@code{FileTest#file?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-filename,filename}
@code{ARGF#filename} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-fileno,fileno}
@code{ARGF#fileno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-fileno,fileno}
@code{Dir#fileno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-fileno,fileno}
@code{IO#fileno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-fill,fill}
@code{Array#fill} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-finalize,finalize}
@code{ObjectSpace/WeakMap#finalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-find,find}
@code{Enumerable#find} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-find_all,find_all}
@code{Enumerable#find_all} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-find_all,find_all}
@code{Enumerator/Lazy#find_all} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-find_index,find_index}
@code{Array#find_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-find_index,find_index}
@code{Enumerable#find_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-finish,finish}
@code{Encoding/Converter#finish} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-finite-3F,finite?}
@code{Complex#finite?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-finite-3F,finite?}
@code{Float#finite?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-finite-3F,finite?}
@code{Numeric#finite?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-first,first}
@code{Array#first} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-first,first}
@code{Enumerable#first} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-first,first}
@code{Range#first} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-first_lineno,first_lineno}
@code{RubyVM/InstructionSequence#first_lineno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-fixed_encoding-3F,fixed_encoding?}
@code{Regexp#fixed_encoding?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-flat_map,flat_map}
@code{Enumerable#flat_map} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-flat_map,flat_map}
@code{Enumerator/Lazy#flat_map} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-flatten,flatten}
@code{Array#flatten} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-flatten,flatten}
@code{Hash#flatten} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-flatten-21,flatten!}
@code{Array#flatten!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-flock,flock}
@code{File#flock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-floor,floor}
@code{Float#floor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-floor,floor}
@code{Integer#floor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-floor,floor}
@code{Numeric#floor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-floor,floor}
@code{Rational#floor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-flush,flush}
@code{IO#flush} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-force_encoding,force_encoding}
@code{String#force_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-fork,fork}
@code{Kernel#fork} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-format,format}
@code{Kernel#format} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-freeze,freeze}
@code{Module#freeze} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-freeze,freeze}
@code{Object#freeze} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-freeze,freeze}
@code{String#freeze} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-friday-3F,friday?}
@code{Time#friday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-frozen-3F,frozen?}
@code{Array#frozen?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-frozen-3F,frozen?}
@code{Object#frozen?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-fsync,fsync}
@code{IO#fsync} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-ftype,ftype}
@code{File/Stat#ftype} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-full_message,full_message}
@code{Exception#full_message} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/GC.html#method-i-garbage_collect,garbage_collect}
@code{GC#garbage_collect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-gcd,gcd}
@code{Integer#gcd} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-gcdlcm,gcdlcm}
@code{Integer#gcdlcm} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-getbyte,getbyte}
@code{ARGF#getbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-getbyte,getbyte}
@code{IO#getbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-getbyte,getbyte}
@code{String#getbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-getc,getc}
@code{ARGF#getc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-getc,getc}
@code{IO#getc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-getgm,getgm}
@code{Time#getgm} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-getlocal,getlocal}
@code{Time#getlocal} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-gets,gets}
@code{ARGF#gets} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-gets,gets}
@code{IO#gets} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-gets,gets}
@code{Kernel#gets} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-getutc,getutc}
@code{Time#getutc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-gid,gid}
@code{File/Stat#gid} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-global_variables,global_variables}
@code{Kernel#global_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-gmt-3F,gmt?}
@code{Time#gmt?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-gmt_offset,gmt_offset}
@code{Time#gmt_offset} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-gmtime,gmtime}
@code{Time#gmtime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-gmtoff,gmtoff}
@code{Time#gmtoff} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-grapheme_clusters,grapheme_clusters}
@code{String#grapheme_clusters} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-grep,grep}
@code{Enumerable#grep} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-grep,grep}
@code{Enumerator/Lazy#grep} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-grep_v,grep_v}
@code{Enumerable#grep_v} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-grep_v,grep_v}
@code{Enumerator/Lazy#grep_v} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-group,group}
@code{Thread#group} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-group_by,group_by}
@code{Enumerable#group_by} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-grpowned-3F,grpowned?}
@code{File/Stat#grpowned?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-grpowned-3F,grpowned?}
@code{FileTest#grpowned?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-gsub,gsub}
@code{Kernel#gsub} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-gsub,gsub}
@code{String#gsub} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-gsub-21,gsub!}
@code{String#gsub!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-has_key-3F,has_key?}
@code{Hash#has_key?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-has_value-3F,has_value?}
@code{Hash#has_value?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-hash,hash}
@code{Array#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-hash,hash}
@code{Float#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-hash,hash}
@code{Hash#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-hash,hash}
@code{MatchData#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-hash,hash}
@code{Method#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-hash,hash}
@code{Proc#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-hash,hash}
@code{Range#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-hash,hash}
@code{Regexp#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-hash,hash}
@code{String#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-hash,hash}
@code{Struct#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-hash,hash}
@code{Time#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-hash,hash}
@code{UnboundMethod#hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-hex,hex}
@code{String#hex} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-hour,hour}
@code{Time#hour} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-i,i}
@code{Numeric#i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-id2name,id2name}
@code{Symbol#id2name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-identical-3F,identical?}
@code{FileTest#identical?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-imag,imag}
@code{Complex#imag} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-imag,imag}
@code{Numeric#imag} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-imaginary,imaginary}
@code{Complex#imaginary} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-imaginary,imaginary}
@code{Numeric#imaginary} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-include,include}
@code{Module#include} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-include-3F,include?}
@code{Array#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-include-3F,include?}
@code{Enumerable#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-include-3F,include?}
@code{Hash#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-include-3F,include?}
@code{Module#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-include-3F,include?}
@code{ObjectSpace/WeakMap#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-include-3F,include?}
@code{Range#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-include-3F,include?}
@code{String#include?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-included,included}
@code{Module#included} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-included_modules,included_modules}
@code{Module#included_modules} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-incomplete_input-3F,incomplete_input?}
@code{Encoding/InvalidByteSequenceError#incomplete_input?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-index,index}
@code{Array#index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-index,index}
@code{String#index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-infinite-3F,infinite?}
@code{Complex#infinite?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-infinite-3F,infinite?}
@code{Float#infinite?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-infinite-3F,infinite?}
@code{Numeric#infinite?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Class.html#method-i-inherited,inherited}
@code{Class#inherited} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-initialize_copy,initialize_copy}
@code{Array#initialize_copy} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-initialize_copy,initialize_copy}
@code{String#initialize_copy} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-inject,inject}
@code{Enumerable#inject} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-ino,ino}
@code{File/Stat#ino} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-inplace_mode,inplace_mode}
@code{ARGF#inplace_mode} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-inplace_mode-3D,inplace_mode=}
@code{ARGF#inplace_mode=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-insert,insert}
@code{Array#insert} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-insert,insert}
@code{String#insert} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-insert_output,insert_output}
@code{Encoding/Converter#insert_output} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-inspect,inspect}
@code{ARGF#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-inspect,inspect}
@code{Array#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-inspect,inspect}
@code{Complex#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-inspect,inspect}
@code{Dir#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-inspect,inspect}
@code{Encoding#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-inspect,inspect}
@code{Encoding/Converter#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-inspect,inspect}
@code{Enumerator#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-inspect,inspect}
@code{Exception#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html#method-i-inspect,inspect}
@code{FalseClass#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-i-inspect,inspect}
@code{Fiber#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-inspect,inspect}
@code{File/Stat#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-inspect,inspect}
@code{Float#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-inspect,inspect}
@code{Hash#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-inspect,inspect}
@code{IO#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-inspect,inspect}
@code{Integer#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-inspect,inspect}
@code{MatchData#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-inspect,inspect}
@code{Method#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-inspect,inspect}
@code{Module#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-inspect,inspect}
@code{NilClass#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-inspect,inspect}
@code{Object#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-inspect,inspect}
@code{ObjectSpace/WeakMap#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-inspect,inspect}
@code{Proc#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-inspect,inspect}
@code{Process/Status#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-inspect,inspect}
@code{Range#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-inspect,inspect}
@code{Rational#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-inspect,inspect}
@code{Regexp#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-inspect,inspect}
@code{RubyVM/InstructionSequence#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-inspect,inspect}
@code{String#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-inspect,inspect}
@code{Struct#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-inspect,inspect}
@code{Symbol#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-inspect,inspect}
@code{Thread#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-inspect,inspect}
@code{Thread/Backtrace/Location#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-inspect,inspect}
@code{Time#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-inspect,inspect}
@code{TracePoint#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html#method-i-inspect,inspect}
@code{TrueClass#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-inspect,inspect}
@code{UnboundMethod#inspect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-instance_eval,instance_eval}
@code{BasicObject#instance_eval} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-instance_exec,instance_exec}
@code{BasicObject#instance_exec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-instance_method,instance_method}
@code{Module#instance_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-instance_methods,instance_methods}
@code{Module#instance_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-instance_of-3F,instance_of?}
@code{Object#instance_of?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-instance_variable_defined-3F,instance_variable_defined?}
@code{Object#instance_variable_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-instance_variable_get,instance_variable_get}
@code{Object#instance_variable_get} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-instance_variable_set,instance_variable_set}
@code{Object#instance_variable_set} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-instance_variables,instance_variables}
@code{Object#instance_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-integer-3F,integer?}
@code{Integer#integer?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-integer-3F,integer?}
@code{Numeric#integer?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-intern,intern}
@code{String#intern} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-intern,intern}
@code{Symbol#intern} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-internal_encoding,internal_encoding}
@code{ARGF#internal_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-internal_encoding,internal_encoding}
@code{IO#internal_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-invert,invert}
@code{Hash#invert} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-ioctl,ioctl}
@code{IO#ioctl} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-is_a-3F,is_a?}
@code{Object#is_a?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-isatty,isatty}
@code{IO#isatty} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-isdst,isdst}
@code{Time#isdst} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-iterator-3F,iterator?}
@code{Kernel#iterator?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-itself,itself}
@code{Object#itself} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-join,join}
@code{Array#join} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-join,join}
@code{Thread#join} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-keep_if,keep_if}
@code{Array#keep_if} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-keep_if,keep_if}
@code{Hash#keep_if} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-key,key}
@code{Hash#key} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/KeyError.html#method-i-key,key}
@code{KeyError#key} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-key-3F,key?}
@code{Hash#key?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-key-3F,key?}
@code{ObjectSpace/WeakMap#key?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-key-3F,key?}
@code{Thread#key?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-keys,keys}
@code{Hash#keys} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-keys,keys}
@code{ObjectSpace/WeakMap#keys} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-keys,keys}
@code{Thread#keys} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-kill,kill}
@code{Thread#kill} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-kind_of-3F,kind_of?}
@code{Object#kind_of?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-label,label}
@code{RubyVM/InstructionSequence#label} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-label,label}
@code{Thread/Backtrace/Location#label} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-lambda,lambda}
@code{Kernel#lambda} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-lambda-3F,lambda?}
@code{Proc#lambda?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-last,last}
@code{Array#last} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-last,last}
@code{Range#last} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-last_error,last_error}
@code{Encoding/Converter#last_error} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-lazy,lazy}
@code{Enumerable#lazy} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-lazy,lazy}
@code{Enumerator/Lazy#lazy} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-lcm,lcm}
@code{Integer#lcm} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-length,length}
@code{Array#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-length,length}
@code{Hash#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-length,length}
@code{MatchData#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-length,length}
@code{ObjectSpace/WeakMap#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-length,length}
@code{Queue#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-length,length}
@code{SizedQueue#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-length,length}
@code{String#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-length,length}
@code{Struct#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-length,length}
@code{Symbol#length} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-lineno,lineno}
@code{ARGF#lineno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-lineno,lineno}
@code{IO#lineno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-lineno,lineno}
@code{Thread/Backtrace/Location#lineno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-lineno,lineno}
@code{TracePoint#lineno} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-lineno-3D,lineno=}
@code{ARGF#lineno=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-lineno-3D,lineno=}
@code{IO#lineno=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-lines,lines}
@code{ARGF#lines} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-lines,lines}
@code{IO#lines} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-lines,lines}
@code{String#lines} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ThreadGroup.html#method-i-list,list}
@code{ThreadGroup#list} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-ljust,ljust}
@code{String#ljust} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-load,load}
@code{Kernel#load} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html#method-i-local_variable_defined-3F,local_variable_defined?}
@code{Binding#local_variable_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html#method-i-local_variable_get,local_variable_get}
@code{Binding#local_variable_get} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html#method-i-local_variable_set,local_variable_set}
@code{Binding#local_variable_set} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html#method-i-local_variables,local_variables}
@code{Binding#local_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-local_variables,local_variables}
@code{Kernel#local_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NameError.html#method-i-local_variables,local_variables}
@code{NameError#local_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-localtime,localtime}
@code{Time#localtime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-lock,lock}
@code{Mutex#lock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-locked-3F,locked?}
@code{Mutex#locked?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-loop,loop}
@code{Kernel#loop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-lstat,lstat}
@code{File#lstat} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-lstrip,lstrip}
@code{String#lstrip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-lstrip-21,lstrip!}
@code{String#lstrip!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-magnitude,magnitude}
@code{Complex#magnitude} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-magnitude,magnitude}
@code{Float#magnitude} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-magnitude,magnitude}
@code{Integer#magnitude} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-magnitude,magnitude}
@code{Numeric#magnitude} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-magnitude,magnitude}
@code{Rational#magnitude} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-map,map}
@code{Array#map} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-map,map}
@code{Enumerable#map} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-map,map}
@code{Enumerator/Lazy#map} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-map-21,map!}
@code{Array#map!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-match,match}
@code{Regexp#match} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-match,match}
@code{String#match} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-match,match}
@code{Symbol#match} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-match-3F,match?}
@code{Regexp#match?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-match-3F,match?}
@code{String#match?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-match-3F,match?}
@code{Symbol#match?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-max,max}
@code{Array#max} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-max,max}
@code{Enumerable#max} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-max,max}
@code{Range#max} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-max,max}
@code{SizedQueue#max} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-max-3D,max=}
@code{SizedQueue#max=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-max_by,max_by}
@code{Enumerable#max_by} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-mday,mday}
@code{Time#mday} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-member-3F,member?}
@code{Enumerable#member?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-member-3F,member?}
@code{Hash#member?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-member-3F,member?}
@code{ObjectSpace/WeakMap#member?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-member-3F,member?}
@code{Range#member?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-members,members}
@code{Struct#members} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-merge,merge}
@code{Hash#merge} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-merge-21,merge!}
@code{Hash#merge!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-message,message}
@code{Exception#message} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-method,method}
@code{Object#method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-method_added,method_added}
@code{Module#method_added} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-method_defined-3F,method_defined?}
@code{Module#method_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-method_id,method_id}
@code{TracePoint#method_id} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-method_missing,method_missing}
@code{BasicObject#method_missing} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-method_removed,method_removed}
@code{Module#method_removed} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-method_undefined,method_undefined}
@code{Module#method_undefined} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-methods,methods}
@code{Object#methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-min,min}
@code{Array#min} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-min,min}
@code{Enumerable#min} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-min,min}
@code{Range#min} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-min,min}
@code{Time#min} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-min_by,min_by}
@code{Enumerable#min_by} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-minmax,minmax}
@code{Enumerable#minmax} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-minmax_by,minmax_by}
@code{Enumerable#minmax_by} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-mode,mode}
@code{File/Stat#mode} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-module_eval,module_eval}
@code{Module#module_eval} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-module_exec,module_exec}
@code{Module#module_exec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-module_function,module_function}
@code{Module#module_function} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-modulo,modulo}
@code{Float#modulo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-modulo,modulo}
@code{Integer#modulo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-modulo,modulo}
@code{Numeric#modulo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-mon,mon}
@code{Time#mon} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-monday-3F,monday?}
@code{Time#monday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-month,month}
@code{Time#month} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-mtime,mtime}
@code{File#mtime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-mtime,mtime}
@code{File/Stat#mtime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-name,name}
@code{Encoding#name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-name,name}
@code{Method#name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-name,name}
@code{Module#name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NameError.html#method-i-name,name}
@code{NameError#name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-name,name}
@code{Thread#name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-name,name}
@code{UnboundMethod#name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-name-3D,name=}
@code{Thread#name=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-named_captures,named_captures}
@code{MatchData#named_captures} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-named_captures,named_captures}
@code{Regexp#named_captures} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-names,names}
@code{Encoding#names} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-names,names}
@code{MatchData#names} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-names,names}
@code{Regexp#names} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-nan-3F,nan?}
@code{Float#nan?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-negative-3F,negative?}
@code{Float#negative?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-negative-3F,negative?}
@code{Numeric#negative?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-negative-3F,negative?}
@code{Rational#negative?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Class.html#method-i-new,new}
@code{Class#new} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-next,next}
@code{Enumerator#next} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-next,next}
@code{Integer#next} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-next,next}
@code{String#next} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-next,next}
@code{Symbol#next} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-next-21,next!}
@code{String#next!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-next_float,next_float}
@code{Float#next_float} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-next_values,next_values}
@code{Enumerator#next_values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-nil-3F,nil?}
@code{NilClass#nil?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-nil-3F,nil?}
@code{Object#nil?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-nlink,nlink}
@code{File/Stat#nlink} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-nobits-3F,nobits?}
@code{Integer#nobits?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-none-3F,none?}
@code{Enumerable#none?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-nonzero-3F,nonzero?}
@code{Numeric#nonzero?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-nsec,nsec}
@code{Time#nsec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-num_waiting,num_waiting}
@code{Queue#num_waiting} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-num_waiting,num_waiting}
@code{SizedQueue#num_waiting} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-numerator,numerator}
@code{Complex#numerator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-numerator,numerator}
@code{Float#numerator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-numerator,numerator}
@code{Integer#numerator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-numerator,numerator}
@code{Numeric#numerator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-numerator,numerator}
@code{Rational#numerator} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-object_id,object_id}
@code{Object#object_id} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-oct,oct}
@code{String#oct} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-odd-3F,odd?}
@code{Integer#odd?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-offset,offset}
@code{MatchData#offset} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-one-3F,one?}
@code{Enumerable#one?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-open,open}
@code{Kernel#open} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-options,options}
@code{Regexp#options} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-ord,ord}
@code{Integer#ord} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-ord,ord}
@code{String#ord} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-original_name,original_name}
@code{Method#original_name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-original_name,original_name}
@code{UnboundMethod#original_name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-owned-3F,owned?}
@code{File/Stat#owned?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-owned-3F,owned?}
@code{FileTest#owned?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-owned-3F,owned?}
@code{Mutex#owned?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-owner,owner}
@code{Method#owner} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-owner,owner}
@code{UnboundMethod#owner} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-p,p}
@code{Kernel#p} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-pack,pack}
@code{Array#pack} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-parameters,parameters}
@code{Method#parameters} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-parameters,parameters}
@code{Proc#parameters} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-parameters,parameters}
@code{UnboundMethod#parameters} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-partition,partition}
@code{Enumerable#partition} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-partition,partition}
@code{String#partition} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-path,path}
@code{ARGF#path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-path,path}
@code{Dir#path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-path,path}
@code{File#path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-path,path}
@code{RubyVM/InstructionSequence#path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-path,path}
@code{Thread/Backtrace/Location#path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-path,path}
@code{TracePoint#path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-peek,peek}
@code{Enumerator#peek} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-peek_values,peek_values}
@code{Enumerator#peek_values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-pending_interrupt-3F,pending_interrupt?}
@code{Thread#pending_interrupt?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-permutation,permutation}
@code{Array#permutation} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-phase,phase}
@code{Complex#phase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-phase,phase}
@code{Float#phase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-phase,phase}
@code{Numeric#phase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-pid,pid}
@code{IO#pid} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-pid,pid}
@code{Process/Status#pid} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Waiter.html#method-i-pid,pid}
@code{Process/Waiter#pid} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-pipe-3F,pipe?}
@code{File/Stat#pipe?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-pipe-3F,pipe?}
@code{FileTest#pipe?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-polar,polar}
@code{Complex#polar} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-polar,polar}
@code{Numeric#polar} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-pop,pop}
@code{Array#pop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-pop,pop}
@code{Queue#pop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-pop,pop}
@code{SizedQueue#pop} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-pos,pos}
@code{ARGF#pos} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-pos,pos}
@code{Dir#pos} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-pos,pos}
@code{IO#pos} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-pos-3D,pos=}
@code{ARGF#pos=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-pos-3D,pos=}
@code{Dir#pos=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-pos-3D,pos=}
@code{IO#pos=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-positive-3F,positive?}
@code{Float#positive?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-positive-3F,positive?}
@code{Numeric#positive?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-positive-3F,positive?}
@code{Rational#positive?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-post_match,post_match}
@code{MatchData#post_match} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-pow,pow}
@code{Integer#pow} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-pre_match,pre_match}
@code{MatchData#pre_match} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-pread,pread}
@code{IO#pread} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-pred,pred}
@code{Integer#pred} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-prepend,prepend}
@code{Array#prepend} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-prepend,prepend}
@code{Module#prepend} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-prepend,prepend}
@code{String#prepend} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-prepend_features,prepend_features}
@code{Module#prepend_features} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-prepended,prepended}
@code{Module#prepended} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-prev_float,prev_float}
@code{Float#prev_float} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-primitive_convert,primitive_convert}
@code{Encoding/Converter#primitive_convert} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-primitive_errinfo,primitive_errinfo}
@code{Encoding/Converter#primitive_errinfo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-print,print}
@code{ARGF#print} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-print,print}
@code{IO#print} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-print,print}
@code{Kernel#print} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-printf,printf}
@code{ARGF#printf} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-printf,printf}
@code{IO#printf} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-printf,printf}
@code{Kernel#printf} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-priority,priority}
@code{Thread#priority} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-priority-3D,priority=}
@code{Thread#priority=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-private,private}
@code{Module#private} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NoMethodError.html#method-i-private_call-3F,private_call?}
@code{NoMethodError#private_call?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-private_class_method,private_class_method}
@code{Module#private_class_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-private_constant,private_constant}
@code{Module#private_constant} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-private_instance_methods,private_instance_methods}
@code{Module#private_instance_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-private_method_defined-3F,private_method_defined?}
@code{Module#private_method_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-private_methods,private_methods}
@code{Object#private_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-proc,proc}
@code{Kernel#proc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-product,product}
@code{Array#product} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-protected,protected}
@code{Module#protected} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-protected_instance_methods,protected_instance_methods}
@code{Module#protected_instance_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-protected_method_defined-3F,protected_method_defined?}
@code{Module#protected_method_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-protected_methods,protected_methods}
@code{Object#protected_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-public,public}
@code{Module#public} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-public_class_method,public_class_method}
@code{Module#public_class_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-public_constant,public_constant}
@code{Module#public_constant} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-public_instance_method,public_instance_method}
@code{Module#public_instance_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-public_instance_methods,public_instance_methods}
@code{Module#public_instance_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-public_method,public_method}
@code{Object#public_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-public_method_defined-3F,public_method_defined?}
@code{Module#public_method_defined?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-public_methods,public_methods}
@code{Object#public_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-public_send,public_send}
@code{Object#public_send} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-push,push}
@code{Array#push} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-push,push}
@code{Queue#push} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-push,push}
@code{SizedQueue#push} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-putback,putback}
@code{Encoding/Converter#putback} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-putc,putc}
@code{ARGF#putc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-putc,putc}
@code{IO#putc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-putc,putc}
@code{Kernel#putc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-puts,puts}
@code{ARGF#puts} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-puts,puts}
@code{IO#puts} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-puts,puts}
@code{Kernel#puts} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-pwrite,pwrite}
@code{IO#pwrite} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-quo,quo}
@code{Complex#quo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-quo,quo}
@code{Float#quo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-quo,quo}
@code{Numeric#quo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-quo,quo}
@code{Rational#quo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-raise,raise}
@code{Kernel#raise} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-raise,raise}
@code{Thread#raise} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-raised_exception,raised_exception}
@code{TracePoint#raised_exception} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-rand,rand}
@code{Kernel#rand} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-i-rand,rand}
@code{Random#rand} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random/Formatter.html#method-i-rand,rand}
@code{Random/Formatter#rand} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random/Formatter.html#method-i-random_number,random_number}
@code{Random/Formatter#random_number} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-rassoc,rassoc}
@code{Array#rassoc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-rassoc,rassoc}
@code{Hash#rassoc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-rationalize,rationalize}
@code{Complex#rationalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-rationalize,rationalize}
@code{Float#rationalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-rationalize,rationalize}
@code{Integer#rationalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-rationalize,rationalize}
@code{NilClass#rationalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-rationalize,rationalize}
@code{Rational#rationalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-rdev,rdev}
@code{File/Stat#rdev} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-rdev_major,rdev_major}
@code{File/Stat#rdev_major} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-rdev_minor,rdev_minor}
@code{File/Stat#rdev_minor} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-read,read}
@code{ARGF#read} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-read,read}
@code{Dir#read} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-read,read}
@code{IO#read} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-read_nonblock,read_nonblock}
@code{ARGF#read_nonblock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-read_nonblock,read_nonblock}
@code{IO#read_nonblock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-readable-3F,readable?}
@code{File/Stat#readable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-readable-3F,readable?}
@code{FileTest#readable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-readable_real-3F,readable_real?}
@code{File/Stat#readable_real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-readable_real-3F,readable_real?}
@code{FileTest#readable_real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-readagain_bytes,readagain_bytes}
@code{Encoding/InvalidByteSequenceError#readagain_bytes} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-readbyte,readbyte}
@code{ARGF#readbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-readbyte,readbyte}
@code{IO#readbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-readchar,readchar}
@code{ARGF#readchar} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-readchar,readchar}
@code{IO#readchar} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-readline,readline}
@code{ARGF#readline} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-readline,readline}
@code{IO#readline} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-readline,readline}
@code{Kernel#readline} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-readlines,readlines}
@code{ARGF#readlines} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-readlines,readlines}
@code{IO#readlines} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-readlines,readlines}
@code{Kernel#readlines} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-readpartial,readpartial}
@code{ARGF#readpartial} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-readpartial,readpartial}
@code{IO#readpartial} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-real,real}
@code{Complex#real} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-real,real}
@code{Numeric#real} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-real-3F,real?}
@code{Complex#real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-real-3F,real?}
@code{Numeric#real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/LocalJumpError.html#method-i-reason,reason}
@code{LocalJumpError#reason} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Binding.html#method-i-receiver,receiver}
@code{Binding#receiver} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/KeyError.html#method-i-receiver,receiver}
@code{KeyError#receiver} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-receiver,receiver}
@code{Method#receiver} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NameError.html#method-i-receiver,receiver}
@code{NameError#receiver} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-rect,rect}
@code{Complex#rect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-rect,rect}
@code{Numeric#rect} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-rectangular,rectangular}
@code{Complex#rectangular} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-rectangular,rectangular}
@code{Numeric#rectangular} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-reduce,reduce}
@code{Enumerable#reduce} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-refine,refine}
@code{Module#refine} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-regexp,regexp}
@code{MatchData#regexp} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-rehash,rehash}
@code{Hash#rehash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-reject,reject}
@code{Array#reject} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-reject,reject}
@code{Enumerable#reject} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-reject,reject}
@code{Enumerator/Lazy#reject} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-reject,reject}
@code{Hash#reject} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-reject-21,reject!}
@code{Array#reject!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-reject-21,reject!}
@code{Hash#reject!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-remainder,remainder}
@code{Integer#remainder} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-remainder,remainder}
@code{Numeric#remainder} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-remove_class_variable,remove_class_variable}
@code{Module#remove_class_variable} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-remove_const,remove_const}
@code{Module#remove_const} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-remove_instance_variable,remove_instance_variable}
@code{Object#remove_instance_variable} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-remove_method,remove_method}
@code{Module#remove_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-reopen,reopen}
@code{IO#reopen} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-repeated_combination,repeated_combination}
@code{Array#repeated_combination} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-repeated_permutation,repeated_permutation}
@code{Array#repeated_permutation} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-replace,replace}
@code{Array#replace} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-replace,replace}
@code{Hash#replace} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-replace,replace}
@code{String#replace} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-replacement,replacement}
@code{Encoding/Converter#replacement} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-replacement-3D,replacement=}
@code{Encoding/Converter#replacement=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-replicate,replicate}
@code{Encoding#replicate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-report_on_exception,report_on_exception}
@code{Thread#report_on_exception} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-report_on_exception-3D,report_on_exception=}
@code{Thread#report_on_exception=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-require,require}
@code{Kernel#require} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-require_relative,require_relative}
@code{Kernel#require_relative} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-respond_to-3F,respond_to?}
@code{Object#respond_to?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-respond_to_missing-3F,respond_to_missing?}
@code{Object#respond_to_missing?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/StopIteration.html#method-i-result,result}
@code{StopIteration#result} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-i-resume,resume}
@code{Fiber#resume} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-return_value,return_value}
@code{TracePoint#return_value} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-reverse,reverse}
@code{Array#reverse} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-reverse,reverse}
@code{String#reverse} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-reverse-21,reverse!}
@code{Array#reverse!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-reverse-21,reverse!}
@code{String#reverse!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-reverse_each,reverse_each}
@code{Array#reverse_each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-reverse_each,reverse_each}
@code{Enumerable#reverse_each} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-rewind,rewind}
@code{ARGF#rewind} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-rewind,rewind}
@code{Dir#rewind} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-rewind,rewind}
@code{Enumerator#rewind} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-rewind,rewind}
@code{IO#rewind} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-rindex,rindex}
@code{Array#rindex} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-rindex,rindex}
@code{String#rindex} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-rjust,rjust}
@code{String#rjust} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-rotate,rotate}
@code{Array#rotate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-rotate-21,rotate!}
@code{Array#rotate!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-round,round}
@code{Float#round} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-round,round}
@code{Integer#round} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-round,round}
@code{Numeric#round} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-round,round}
@code{Rational#round} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-round,round}
@code{Time#round} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-rpartition,rpartition}
@code{String#rpartition} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-rstrip,rstrip}
@code{String#rstrip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-rstrip-21,rstrip!}
@code{String#rstrip!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-run,run}
@code{Thread#run} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-safe_level,safe_level}
@code{Thread#safe_level} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-sample,sample}
@code{Array#sample} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-saturday-3F,saturday?}
@code{Time#saturday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-scan,scan}
@code{String#scan} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-scrub,scrub}
@code{String#scrub} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-scrub-21,scrub!}
@code{String#scrub!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-sec,sec}
@code{Time#sec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Random.html#method-i-seed,seed}
@code{Random#seed} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-seek,seek}
@code{ARGF#seek} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-seek,seek}
@code{Dir#seek} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-seek,seek}
@code{IO#seek} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-select,select}
@code{Array#select} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-select,select}
@code{Enumerable#select} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-select,select}
@code{Enumerator/Lazy#select} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-select,select}
@code{Hash#select} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-select,select}
@code{Kernel#select} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-select,select}
@code{Struct#select} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-select-21,select!}
@code{Array#select!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-select-21,select!}
@code{Hash#select!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TracePoint.html#method-i-self,self}
@code{TracePoint#self} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-send,send}
@code{Object#send} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-set_backtrace,set_backtrace}
@code{Exception#set_backtrace} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-set_encoding,set_encoding}
@code{ARGF#set_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-set_encoding,set_encoding}
@code{IO#set_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-set_trace_func,set_trace_func}
@code{Kernel#set_trace_func} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-set_trace_func,set_trace_func}
@code{Thread#set_trace_func} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-setbyte,setbyte}
@code{String#setbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-setgid-3F,setgid?}
@code{File/Stat#setgid?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-setgid-3F,setgid?}
@code{FileTest#setgid?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-setuid-3F,setuid?}
@code{File/Stat#setuid?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-setuid-3F,setuid?}
@code{FileTest#setuid?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-shift,shift}
@code{Array#shift} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-shift,shift}
@code{Hash#shift} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-shift,shift}
@code{Queue#shift} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-shift,shift}
@code{SizedQueue#shift} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-shuffle,shuffle}
@code{Array#shuffle} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-shuffle-21,shuffle!}
@code{Array#shuffle!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ConditionVariable.html#method-i-signal,signal}
@code{ConditionVariable#signal} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-signaled-3F,signaled?}
@code{Process/Status#signaled?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SignalException.html#method-i-signo,signo}
@code{SignalException#signo} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-singleton_class,singleton_class}
@code{Object#singleton_class} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-singleton_class-3F,singleton_class?}
@code{Module#singleton_class?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-singleton_method,singleton_method}
@code{Object#singleton_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-singleton_method_added,singleton_method_added}
@code{BasicObject#singleton_method_added} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-singleton_method_removed,singleton_method_removed}
@code{BasicObject#singleton_method_removed} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-singleton_method_undefined,singleton_method_undefined}
@code{BasicObject#singleton_method_undefined} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-singleton_methods,singleton_methods}
@code{Object#singleton_methods} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-size,size}
@code{Array#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-size,size}
@code{Enumerator#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-size,size}
@code{File#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-size,size}
@code{File/Stat#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-size,size}
@code{FileTest#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-size,size}
@code{Hash#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-size,size}
@code{Integer#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-size,size}
@code{MatchData#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-size,size}
@code{ObjectSpace/WeakMap#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Queue.html#method-i-size,size}
@code{Queue#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-size,size}
@code{Range#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SizedQueue.html#method-i-size,size}
@code{SizedQueue#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-size,size}
@code{String#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-size,size}
@code{Struct#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-size,size}
@code{Symbol#size} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-size-3F,size?}
@code{File/Stat#size?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-size-3F,size?}
@code{FileTest#size?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-skip,skip}
@code{ARGF#skip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-sleep,sleep}
@code{Kernel#sleep} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-sleep,sleep}
@code{Mutex#sleep} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-slice,slice}
@code{Array#slice} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-slice,slice}
@code{Hash#slice} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-slice,slice}
@code{String#slice} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-slice,slice}
@code{Symbol#slice} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-slice-21,slice!}
@code{Array#slice!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-slice-21,slice!}
@code{String#slice!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-slice_after,slice_after}
@code{Enumerable#slice_after} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-slice_after,slice_after}
@code{Enumerator/Lazy#slice_after} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-slice_before,slice_before}
@code{Enumerable#slice_before} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-slice_before,slice_before}
@code{Enumerator/Lazy#slice_before} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-slice_when,slice_when}
@code{Enumerable#slice_when} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-slice_when,slice_when}
@code{Enumerator/Lazy#slice_when} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-socket-3F,socket?}
@code{File/Stat#socket?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-socket-3F,socket?}
@code{FileTest#socket?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-sort,sort}
@code{Array#sort} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-sort,sort}
@code{Enumerable#sort} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-sort-21,sort!}
@code{Array#sort!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-sort_by,sort_by}
@code{Enumerable#sort_by} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-sort_by-21,sort_by!}
@code{Array#sort_by!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-source,source}
@code{Regexp#source} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/Converter.html#method-i-source_encoding,source_encoding}
@code{Encoding/Converter#source_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-source_encoding,source_encoding}
@code{Encoding/InvalidByteSequenceError#source_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/UndefinedConversionError.html#method-i-source_encoding,source_encoding}
@code{Encoding/UndefinedConversionError#source_encoding} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/InvalidByteSequenceError.html#method-i-source_encoding_name,source_encoding_name}
@code{Encoding/InvalidByteSequenceError#source_encoding_name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding/UndefinedConversionError.html#method-i-source_encoding_name,source_encoding_name}
@code{Encoding/UndefinedConversionError#source_encoding_name} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-source_location,source_location}
@code{Method#source_location} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-source_location,source_location}
@code{Proc#source_location} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-source_location,source_location}
@code{UnboundMethod#source_location} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-spawn,spawn}
@code{Kernel#spawn} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-split,split}
@code{String#split} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-sprintf,sprintf}
@code{Kernel#sprintf} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-squeeze,squeeze}
@code{String#squeeze} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-squeeze-21,squeeze!}
@code{String#squeeze!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-srand,srand}
@code{Kernel#srand} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-start_with-3F,start_with?}
@code{String#start_with?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-stat,stat}
@code{IO#stat} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SystemExit.html#method-i-status,status}
@code{SystemExit#status} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-status,status}
@code{Thread#status} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-step,step}
@code{Numeric#step} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-step,step}
@code{Range#step} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-sticky-3F,sticky?}
@code{File/Stat#sticky?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-sticky-3F,sticky?}
@code{FileTest#sticky?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-stop-3F,stop?}
@code{Thread#stop?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-stopped-3F,stopped?}
@code{Process/Status#stopped?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-stopsig,stopsig}
@code{Process/Status#stopsig} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-store,store}
@code{Hash#store} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-strftime,strftime}
@code{Time#strftime} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-string,string}
@code{MatchData#string} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-strip,strip}
@code{String#strip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-strip-21,strip!}
@code{String#strip!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-sub,sub}
@code{Kernel#sub} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-sub,sub}
@code{String#sub} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-sub-21,sub!}
@code{String#sub!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-subsec,subsec}
@code{Time#subsec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-succ,succ}
@code{Integer#succ} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-succ,succ}
@code{String#succ} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-succ,succ}
@code{Symbol#succ} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-succ,succ}
@code{Time#succ} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-succ-21,succ!}
@code{String#succ!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-success-3F,success?}
@code{Process/Status#success?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/SystemExit.html#method-i-success-3F,success?}
@code{SystemExit#success?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-sum,sum}
@code{Array#sum} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-sum,sum}
@code{Enumerable#sum} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-sum,sum}
@code{String#sum} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-sunday-3F,sunday?}
@code{Time#sunday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-super_method,super_method}
@code{Method#super_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-super_method,super_method}
@code{UnboundMethod#super_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Class.html#method-i-superclass,superclass}
@code{Class#superclass} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-swapcase,swapcase}
@code{String#swapcase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-swapcase,swapcase}
@code{Symbol#swapcase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-swapcase-21,swapcase!}
@code{String#swapcase!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-symlink-3F,symlink?}
@code{File/Stat#symlink?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-symlink-3F,symlink?}
@code{FileTest#symlink?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-sync,sync}
@code{IO#sync} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-sync-3D,sync=}
@code{IO#sync=} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-synchronize,synchronize}
@code{Mutex#synchronize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-syscall,syscall}
@code{Kernel#syscall} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-sysread,sysread}
@code{IO#sysread} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-sysseek,sysseek}
@code{IO#sysseek} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-system,system}
@code{Kernel#system} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-syswrite,syswrite}
@code{IO#syswrite} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UncaughtThrowError.html#method-i-tag,tag}
@code{UncaughtThrowError#tag} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-taint,taint}
@code{Object#taint} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-tainted-3F,tainted?}
@code{Object#tainted?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-take,take}
@code{Array#take} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-take,take}
@code{Enumerable#take} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-take,take}
@code{Enumerator/Lazy#take} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-take_while,take_while}
@code{Array#take_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-take_while,take_while}
@code{Enumerable#take_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-take_while,take_while}
@code{Enumerator/Lazy#take_while} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-tap,tap}
@code{Object#tap} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-tell,tell}
@code{ARGF#tell} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-tell,tell}
@code{Dir#tell} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-tell,tell}
@code{IO#tell} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-terminate,terminate}
@code{Thread#terminate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-termsig,termsig}
@code{Process/Status#termsig} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-test,test}
@code{Kernel#test} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-thread_variable-3F,thread_variable?}
@code{Thread#thread_variable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-thread_variable_get,thread_variable_get}
@code{Thread#thread_variable_get} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-thread_variable_set,thread_variable_set}
@code{Thread#thread_variable_set} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-thread_variables,thread_variables}
@code{Thread#thread_variables} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-throw,throw}
@code{Kernel#throw} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-thursday-3F,thursday?}
@code{Time#thursday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-times,times}
@code{Integer#times} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-to_a,to_a}
@code{ARGF#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-to_a,to_a}
@code{Array#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-to_a,to_a}
@code{Enumerable#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-to_a,to_a}
@code{Hash#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-to_a,to_a}
@code{MatchData#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_a,to_a}
@code{NilClass#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-to_a,to_a}
@code{RubyVM/InstructionSequence#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-to_a,to_a}
@code{Struct#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-to_a,to_a}
@code{Time#to_a} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-to_ary,to_ary}
@code{Array#to_ary} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-to_binary,to_binary}
@code{RubyVM/InstructionSequence#to_binary} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-to_c,to_c}
@code{Complex#to_c} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_c,to_c}
@code{NilClass#to_c} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-to_c,to_c}
@code{Numeric#to_c} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_c,to_c}
@code{String#to_c} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-to_enum,to_enum}
@code{Enumerator/Lazy#to_enum} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-to_enum,to_enum}
@code{Object#to_enum} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-to_f,to_f}
@code{Complex#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-to_f,to_f}
@code{Float#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-to_f,to_f}
@code{Integer#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_f,to_f}
@code{NilClass#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-to_f,to_f}
@code{Rational#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_f,to_f}
@code{String#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-to_f,to_f}
@code{Time#to_f} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-to_h,to_h}
@code{Array#to_h} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-to_h,to_h}
@code{Enumerable#to_h} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-to_h,to_h}
@code{Hash#to_h} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_h,to_h}
@code{NilClass#to_h} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-to_h,to_h}
@code{Struct#to_h} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-to_hash,to_hash}
@code{Hash#to_hash} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-to_i,to_i}
@code{ARGF#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-to_i,to_i}
@code{Complex#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-to_i,to_i}
@code{Float#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-to_i,to_i}
@code{IO#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-to_i,to_i}
@code{Integer#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_i,to_i}
@code{NilClass#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-to_i,to_i}
@code{Process/Status#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-to_i,to_i}
@code{Rational#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_i,to_i}
@code{String#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-to_i,to_i}
@code{Time#to_i} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-to_int,to_int}
@code{Float#to_int} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-to_int,to_int}
@code{Integer#to_int} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-to_int,to_int}
@code{Numeric#to_int} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-to_io,to_io}
@code{ARGF#to_io} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-to_io,to_io}
@code{IO#to_io} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Dir.html#method-i-to_path,to_path}
@code{Dir#to_path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-to_path,to_path}
@code{File#to_path} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-to_proc,to_proc}
@code{Hash#to_proc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-to_proc,to_proc}
@code{Method#to_proc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-to_proc,to_proc}
@code{Proc#to_proc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-to_proc,to_proc}
@code{Symbol#to_proc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-to_r,to_r}
@code{Complex#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-to_r,to_r}
@code{Float#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-to_r,to_r}
@code{Integer#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_r,to_r}
@code{NilClass#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-to_r,to_r}
@code{Rational#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_r,to_r}
@code{String#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-to_r,to_r}
@code{Time#to_r} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-to_s,to_s}
@code{ARGF#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-to_s,to_s}
@code{Array#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-to_s,to_s}
@code{Complex#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Encoding.html#method-i-to_s,to_s}
@code{Encoding#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Exception.html#method-i-to_s,to_s}
@code{Exception#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html#method-i-to_s,to_s}
@code{FalseClass#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-i-to_s,to_s}
@code{Fiber#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-to_s,to_s}
@code{Float#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-to_s,to_s}
@code{Hash#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-to_s,to_s}
@code{Integer#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-to_s,to_s}
@code{MatchData#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-to_s,to_s}
@code{Method#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-to_s,to_s}
@code{Module#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-to_s,to_s}
@code{NilClass#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-to_s,to_s}
@code{Object#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-to_s,to_s}
@code{Proc#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Process/Status.html#method-i-to_s,to_s}
@code{Process/Status#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Range.html#method-i-to_s,to_s}
@code{Range#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-to_s,to_s}
@code{Rational#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-to_s,to_s}
@code{Regexp#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_s,to_s}
@code{String#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-to_s,to_s}
@code{Struct#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-to_s,to_s}
@code{Symbol#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-to_s,to_s}
@code{Thread#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread/Backtrace/Location.html#method-i-to_s,to_s}
@code{Thread/Backtrace/Location#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-to_s,to_s}
@code{Time#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html#method-i-to_s,to_s}
@code{TrueClass#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UnboundMethod.html#method-i-to_s,to_s}
@code{UnboundMethod#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UncaughtThrowError.html#method-i-to_s,to_s}
@code{UncaughtThrowError#to_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_str,to_str}
@code{String#to_str} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-to_sym,to_sym}
@code{String#to_sym} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-to_sym,to_sym}
@code{Symbol#to_sym} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-to_write_io,to_write_io}
@code{ARGF#to_write_io} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-tr,tr}
@code{String#tr} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-tr-21,tr!}
@code{String#tr!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-tr_s,tr_s}
@code{String#tr_s} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-tr_s-21,tr_s!}
@code{String#tr_s!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/RubyVM/InstructionSequence.html#method-i-trace_points,trace_points}
@code{RubyVM/InstructionSequence#trace_points} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-trace_var,trace_var}
@code{Kernel#trace_var} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Fiber.html#method-i-transfer,transfer}
@code{Fiber#transfer} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-transform_keys,transform_keys}
@code{Hash#transform_keys} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-transform_keys-21,transform_keys!}
@code{Hash#transform_keys!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-transform_values,transform_values}
@code{Hash#transform_values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-transform_values-21,transform_values!}
@code{Hash#transform_values!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-transpose,transpose}
@code{Array#transpose} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-trap,trap}
@code{Kernel#trap} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File.html#method-i-truncate,truncate}
@code{File#truncate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-truncate,truncate}
@code{Float#truncate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-truncate,truncate}
@code{Integer#truncate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-truncate,truncate}
@code{Numeric#truncate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Rational.html#method-i-truncate,truncate}
@code{Rational#truncate} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-trust,trust}
@code{Object#trust} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-try_lock,try_lock}
@code{Mutex#try_lock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-tty-3F,tty?}
@code{IO#tty?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-tuesday-3F,tuesday?}
@code{Time#tuesday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-tv_nsec,tv_nsec}
@code{Time#tv_nsec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-tv_sec,tv_sec}
@code{Time#tv_sec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-tv_usec,tv_usec}
@code{Time#tv_usec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-uid,uid}
@code{File/Stat#uid} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Method.html#method-i-unbind,unbind}
@code{Method#unbind} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-undef_method,undef_method}
@code{Module#undef_method} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-undump,undump}
@code{String#undump} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-ungetbyte,ungetbyte}
@code{IO#ungetbyte} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-ungetc,ungetc}
@code{IO#ungetc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-unicode_normalize,unicode_normalize}
@code{String#unicode_normalize} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-unicode_normalize-21,unicode_normalize!}
@code{String#unicode_normalize!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-unicode_normalized-3F,unicode_normalized?}
@code{String#unicode_normalized?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-uniq,uniq}
@code{Array#uniq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-uniq,uniq}
@code{Enumerable#uniq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-uniq,uniq}
@code{Enumerator/Lazy#uniq} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-uniq-21,uniq!}
@code{Array#uniq!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Mutex.html#method-i-unlock,unlock}
@code{Mutex#unlock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-unpack,unpack}
@code{String#unpack} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-unpack1,unpack1}
@code{String#unpack1} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-unshift,unshift}
@code{Array#unshift} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-untaint,untaint}
@code{Object#untaint} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-untrace_var,untrace_var}
@code{Kernel#untrace_var} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-untrust,untrust}
@code{Object#untrust} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-untrusted-3F,untrusted?}
@code{Object#untrusted?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-upcase,upcase}
@code{String#upcase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Symbol.html#method-i-upcase,upcase}
@code{Symbol#upcase} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-upcase-21,upcase!}
@code{String#upcase!} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-update,update}
@code{Hash#update} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-upto,upto}
@code{Integer#upto} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-upto,upto}
@code{String#upto} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-usec,usec}
@code{Time#usec} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Module.html#method-i-using,using}
@code{Module#using} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-utc,utc}
@code{Time#utc} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-utc-3F,utc?}
@code{Time#utc?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-utc_offset,utc_offset}
@code{Time#utc_offset} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/String.html#method-i-valid_encoding-3F,valid_encoding?}
@code{String#valid_encoding?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-value,value}
@code{Thread#value} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/UncaughtThrowError.html#method-i-value,value}
@code{UncaughtThrowError#value} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-value-3F,value?}
@code{Hash#value?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-values,values}
@code{Hash#values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ObjectSpace/WeakMap.html#method-i-values,values}
@code{ObjectSpace/WeakMap#values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-values,values}
@code{Struct#values} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-values_at,values_at}
@code{Array#values_at} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Hash.html#method-i-values_at,values_at}
@code{Hash#values_at} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/MatchData.html#method-i-values_at,values_at}
@code{MatchData#values_at} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Struct.html#method-i-values_at,values_at}
@code{Struct#values_at} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ConditionVariable.html#method-i-wait,wait}
@code{ConditionVariable#wait} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Thread.html#method-i-wakeup,wakeup}
@code{Thread#wakeup} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Kernel.html#method-i-warn,warn}
@code{Kernel#warn} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Warning.html#method-i-warn,warn}
@code{Warning#warn} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-wday,wday}
@code{Time#wday} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-wednesday-3F,wednesday?}
@code{Time#wednesday?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-with_index,with_index}
@code{Enumerator#with_index} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator.html#method-i-with_object,with_object}
@code{Enumerator#with_object} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-world_readable-3F,world_readable?}
@code{File/Stat#world_readable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-world_readable-3F,world_readable?}
@code{FileTest#world_readable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-world_writable-3F,world_writable?}
@code{File/Stat#world_writable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-world_writable-3F,world_writable?}
@code{FileTest#world_writable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-writable-3F,writable?}
@code{File/Stat#writable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-writable-3F,writable?}
@code{FileTest#writable?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-writable_real-3F,writable_real?}
@code{File/Stat#writable_real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-writable_real-3F,writable_real?}
@code{FileTest#writable_real?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/ARGF.html#method-i-write,write}
@code{ARGF#write} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-write,write}
@code{IO#write} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Warning/buffer.html#method-i-write,write}
@code{Warning/buffer#write} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/IO.html#method-i-write_nonblock,write_nonblock}
@code{IO#write_nonblock} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-yday,yday}
@code{Time#yday} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-year,year}
@code{Time#year} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Proc.html#method-i-yield,yield}
@code{Proc#yield} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Object.html#method-i-yield_self,yield_self}
@code{Object#yield_self} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/File/Stat.html#method-i-zero-3F,zero?}
@code{File/Stat#zero?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FileTest.html#method-i-zero-3F,zero?}
@code{FileTest#zero?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Float.html#method-i-zero-3F,zero?}
@code{Float#zero?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Numeric.html#method-i-zero-3F,zero?}
@code{Numeric#zero?} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-zip,zip}
@code{Array#zip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerable.html#method-i-zip,zip}
@code{Enumerable#zip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Enumerator/Lazy.html#method-i-zip,zip}
@code{Enumerator/Lazy#zip} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Time.html#method-i-zone,zone}
@code{Time#zone} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Array.html#method-i-7C,|}
@code{Array#|} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/FalseClass.html#method-i-7C,|}
@code{FalseClass#|} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-7C,|}
@code{Integer#|} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/NilClass.html#method-i-7C,|}
@code{NilClass#|} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/TrueClass.html#method-i-7C,|}
@code{TrueClass#|} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Complex.html#method-i-7E,~}
@code{Complex#~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Integer.html#method-i-7E,~}
@code{Integer#~} (Instance Method)

@item @url{http://ruby-doc.org/core-2.5.1/Regexp.html#method-i-7E,~}
@code{Regexp#~} (Instance Method)

@end table

@ifnottex
@caption{List of API Methods}
@end float
@end ifnottex

@iftex
@page
@end iftex


@c .....................................

@node Beginner Core Topics
@appendixsubsec Beginner Core Topics

@ifnottex
@float Table,table:core-topics
@end ifnottex

@table @b
@item Syntax
@url{http://ruby-doc.org/core-2.5.1/doc/syntax_rdoc.html}
@item Control Expressions
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/control_expressions_rdoc.html}
@item Assignment
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/assignment_rdoc.html}
@item Methods
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/methods_rdoc.html}
@item Modules and Classes
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/modules_and_classes_rdoc.html}
@item Operator Precedence
@url{http://ruby-doc.org/core-2.5.1/doc/syntax/precedence_rdoc.html}
@end table
@ifnottex
@caption{Table of Core Topics}
@end float
@end ifnottex

@iftex
@page
@end iftex








@c *****************************************************************************

@node Ruby Gems
@appendix Ruby Gems
@cindex gems

@url{https://rubygems.org/,Ruby Gems}

@noindent @url{https://github.com/rubygems, Ruby Gems Github Home}

@heading About

@indicateurl{RubyGems.org} is the Ruby community’s gem hosting
service.  Instantly publish your gems and then install them.  Use the API to find
out more about available gems.  Become a contributor and improve the site
yourself.

@heading Guides
@cindex gems guides
@cindex guides, gems

@subsubheading Learn how RubyGems works, and how to make your own.
@cindex gem definition
@cindex @file{RubyGems} software

The @file{RubyGems} software allows you to easily download, install, and use
ruby software packages on your system.  The software package is called a @dfn{gem}
which contains a packaged Ruby application or library.

Gems can be used to extend or modify functionality in Ruby
applications.  Commonly they’re used to distribute reusable functionality that
is shared with other Rubyists for use in their applications and libraries.  Some
gems provide command line utilities to help automate tasks and speed up your
work.




@c -----------------------------------------------------------------------------

@node Ruby Gem Guides
@appendixsec Ruby Gem Guides

@url{https://guides.rubygems.org/,Guides}

@itemize
@item
@url{https://guides.rubygems.org/rubygems-basics/,RUBYGEMS BASICS}
@item
@url{https://guides.rubygems.org/what-is-a-gem/,WHAT IS A GEM?}
@item
@url{https://guides.rubygems.org/make-your-own-gem/,MAKE YOUR OWN GEM}
@item
GEMS WITH EXTENSIONS
@item
@url{https://guides.rubygems.org/name-your-gem/,NAME YOUR GEM}
@item
PUBLISHING YOUR GEM
@item
SECURITY PRACTICES
@item
SSL CERTIFICATE UPDATE
@item
@url{https://guides.rubygems.org/patterns/,PATTERNS}
@item
@url{https://guides.rubygems.org/specification-reference/,SPECIFICATION REFERENCE}
@item
@url{https://guides.rubygems.org/command-reference/,COMMAND REFERENCE}
@item
@url{http://docs.seattlerb.org/rubygems/,RUBYGEMS API}
@item
@url{https://guides.rubygems.org/rubygems-org-api/,RUBYGEMS.ORG API}
@item
@url{https://guides.rubygems.org/rubygems-org-api-v2/,RUBYGEMS.ORG API V2.0}
@item
RUN YOUR OWN GEM SERVER
@item
@url{https://guides.rubygems.org/resources/,RESOURCES}
@item
@url{https://guides.rubygems.org/resources/,CONTRIBUTING TO RUBYGEMS}
@item
@url{https://guides.rubygems.org/faqs/,FREQUENTLY ASKED QUESTIONS}
@item
PLUGINS
@item
CREDITS
@item
COMMON VULNERABILITIES AND EXPOSURES
@item
RELEASING RUBYGEMS
@end itemize




@c .....................................

@node Ruby Gems Basics
@appendixsubsec Ruby Gems Basics
@cindex gems basics

@cindex @command{gem} command
The @command{gem} command allows you to interact with RubyGems.

@cindex download RubyGems
@cindex RubyGems download
@cindex upgrade RubyGems
@cindex RubyGems upgrade
Ruby 1.9 and newer ships with RubyGems built-in.
@url{https://rubygems.org/pages/download, Download RubyGems}.  To upgrade to
the latest RubyGems: @samp{$ gem update --system}.


@c .....................................

@node What Is A Gem
@appendixsubsec What Is A Gem?
@cindex gem, what one is

@heading STRUCTURE OF A GEM

Each gem has a

@itemize
@item
name,
@item
version, and
@item
platform.
@end itemize

For example, the @file{rake} gem has a 0.8.7 version (from May, 2009).
@file{Rake}’s platform is ruby, which means it works on any platform Ruby runs
on.

@subheading Platforms
@cindex platforms, gems
@cindex gems platforms

Platforms are based on the CPU architecture, operating system type and
sometimes the operating system version.  Examples include @samp{x86-mingw32} or
@samp{java}.  The platform indicates the gem only works with a ruby built for
the same platform.  RubyGems will automatically download the correct version for
your platform.  See @command{gem help platform} for full detail.

@subheading Components
@cindex gem components

Inside gems are the following components:

@itemize
@item
Code (including tests and supporting utilities)
@item
Documentation
@item
gemspec
@end itemize

@subheading Code Organization
@cindex gem code organization

Each gem follows the same standard structure of code organization:

@example
% tree freewill
freewill/
├── bin/
│   └── freewill
├── lib/
│   └── freewill.rb
├── test/
│   └── test_freewill.rb
├── README
├── Rakefile
└── freewill.gemspec
@end example

Here, you can see the major components of a gem:
@cindex gem components
@cindex components of gem

@float Table,RubyGemComponents
@table @file
@cindex @file{lib} directory
@item lib
The lib directory contains the code for the gem

@cindex @file{test} directory
@item test
The test or spec directory contains tests, depending on which test framework
the developer uses

@cindex @file{Rakefile}
@cindex @file{rake}
@item Rakefile
A gem usually has a @file{Rakefile}, which the @file{rake} program uses to
automate tests, generate code, and perform other tasks.

@cindex @file{bin} directory
@cindex @env{PATH} environment variable
@item bin
This gem also includes an executable file in the @file{bin} directory, which
will be loaded into the user’s @env{PATH} when the gem is installed.

@cindex @file{README}
@item README
Documentation is usually included in the @file{README} and inline with the
code.  When you install a gem, documentation is generated automatically for
you.  Most gems include RDoc documentation, but some use YARD docs instead.

@cindex gemspec
@item gemspec
The final piece is the gemspec, which contains information about the gem. The
gem’s files, test information, platform, version number and more are all laid
out here along with the author’s email and name.

@end table
@caption{Table of RubyGem Components}
@end float

@subheading The Gemspec
@cindex gemspec

The gemspec specifies the information about a gem such as its name, version,
description, authors and homepage.

Here’s an example of a gemspec file.
@cindex gemspec example

@example
% cat freewill.gemspec
Gem::Specification.new do |s|
  s.name        = 'freewill'
  s.version     = '1.0.0'
  s.summary     = "Freewill!"
  s.description = "I will choose Freewill!"
  s.authors     = ["Nick Quaranto"]
  s.email       = 'nick@@quaran.to'
  s.homepage    = 'http://example.com/freewill'
  s.files       = ["lib/freewill.rb", ...]
end
@end example




@c .....................................

@node Make A Gem
@appendixsubsec Make a Gem
@cindex gem, make
@cindex Bundler

@quotation
@b{NOTE:} Many people use Bundler to create Gems.  You can learn how to do that
by reading the @cite{Developing a RubyGem using Bundler} guide on the
@url{https://bundler.io/v1.13/guides/creating_gem,Bundler website}.
@end quotation

@heading Introduction to Making a Gem

Creating and publishing your own gem is simple thanks to the tools baked right
into RubyGems.  Let’s make a simple ``hello world'' gem, and feel free to play
along at home!  The code for the gem we’re going to make here is up on
@url{https://github.com/qrush/hola,GitHub Hello World}.

@c _____________________________________

@node Your First Gem
@appendixsubsubsec Your First Gem

I started with just one Ruby file for my @file{hola} gem, and the gemspec.
You’ll need a new name for yours (maybe @file{hola_yourusername}) to publish
it.  Check the Patterns guide for basic recommendations to follow when naming a
gem.

@example
% tree
.
├── hola.gemspec
└── lib
    └── hola.rb
@end example

@subheading @file{lib} Directory

Code for your package is placed within the @file{lib} directory.  The
convention is to have one Ruby file with the same name as your gem, since that
gets loaded when @code{require 'hola'} is run.  That one file is in charge of
setting up your gem’s code and API.

@subheading @file{hola.rb}

The code inside of @file{lib/hola.rb} is pretty bare bones.  It just makes sure that
you can see some output from the gem:

@(hola.rb@)=
class Hola
  def self.hi
    puts "Hello world!"
  end
end
@

@post_create hola.rb mkdir -p src/gems/hola/lib/ && mv hola.rb src/gems/hola/lib

@verbatim
 @post_create hola.rb mkdir -p src/gems/hola/lib/ && mv hola.rb src/gems/hola/lib
@end verbatim


@subheading @file{hola.gemspec}

The gemspec defines what’s in the gem, who made it, and the version of the gem.
It’s also your interface to @indicateurl{RubyGems.org}.  All of the information
you see on a gem page (like @url{http://rubygems.org/gems/jekyll,jekyll’s})
comes from the gemspec.

@(hola.gemspec@)=
Gem::Specification.new do |s|
  s.name        = 'hola'
  s.version     = '0.0.0'
  s.date        = '2010-04-28'
  s.summary     = "Hola!"
  s.description = "A simple hello world gem"
  s.authors     = ["Nick Quaranto"]
  s.email       = 'nick@quaran.to'
  s.files       = ["lib/hola.rb"]
  s.homepage    =
    'http://rubygems.org/gems/hola'
  s.license       = 'MIT'
end
@

@post_create hola.gemspec mv hola.gemspec src/gems/hola/ && cd src/gems/hola

@verbatim
 @post_create hola.gemspec mv hola.gemspec src/gems/hola/ && cd src/gems/hola
@end verbatim

@quotation
@b{NOTE:} The @command{description} member can be much longer than you see in
this example.  If it matches @samp{/^== [A-Z]/} then the description will be
run through RDoc’s markup formatter for display on the RubyGems web site.  Be
aware though that other consumers of the data might not understand this markup.
@end quotation

Look familiar?  The gemspec is also Ruby, so you can wrap scripts to generate
the file names and bump the version number.  There are lots of fields the
gemspec can contain.  To see them all check out the full
@url{https://guides.rubygems.org/specification-reference,reference}.

@subheading @command{build} and @command{install} A Gem From The Gemspec
@cindex @command{build} gemspec
@cindex @command{install} gem

After you have created a gemspec, you can @command{build} a gem from
it.  Then you can @command{install} the generated gem locally to test
it out.

@example
% gem build hola.gemspec
Successfully built RubyGem
Name: hola
Version: 0.0.0
File: hola-0.0.0.gem

% gem install ./hola-0.0.0.gem
Successfully installed hola-0.0.0
1 gem installed
@end example

The final step is to @command{require} the gem and use it:

@example
% irb
>> require 'hola'
=> true
>> Hola.hi
Hello world!
@end example

@c _____________________________________

@node Requiring More Files
@appendixsubsubsec Requiring More Files

@c _____________________________________

@node Adding An Executable
@appendixsubsubsec Adding An Executable

@c _____________________________________

@node Writing Tests
@appendixsubsubsec Writing Tests

@c _____________________________________

@node Documenting Your Code
@appendixsubsubsec Documenting Your Code








@c *****************************************************************************

@node Resources
@appendix Resources

Here are some additional resources that I have found helpful.




@c -----------------------------------------------------------------------------

@node Ruby Association
@appendixsec Ruby Association

@url{https://www.ruby.or.jp/en/, Ruby Association}

Ruby Association is a organization dovoted to advancing Ruby programming language.

@heading Mission Statement

The Ruby Association is a non-profit organization devoted to the advancement of
the Ruby programming language.  Our goal is to strengthen relationships between
Ruby-related projects, communities, and businesses and to work towards solving
the problems faced by Ruby users.


@c .....................................

@node Certified Ruby Programmer Examinations
@appendixsubsec Ruby Association Certified Ruby Programmer Examinations

The Ruby Association Certified Ruby Programmer examinations are intended for
engineers who design, develop, and/or operate Ruby-based systems, consultants
who make Ruby-based system proposals, and instructors who teach Ruby.  Those who
are certified are recognized for their skills as Ruby engineers and as having
high levels of Ruby-based system development capabilities.  Those who pass the
examination are certified by the Ruby Association as a Ruby Association
Certified Ruby Programmer.

@c _____________________________________

@node Certified Ruby Programmer Silver version 2.1
@appendixsubsubsec Ruby Association Certified Ruby Programmer Silver version 2.1

This is a basic skill-level certification of the knowledge on the background,
grammar, classes, objects, and standard libraries of Ruby.  The logo below
identifies people who are certified.

@subheading Scope

@itemize
@item
SYNTAX

@itemize
@item
Comment

@item
Literal (e.g., numbers, booleans, strings, characters, arrays, hashes)

@item
Variables, constants, and scope

@item
Operators

@item
Conditional branching

@item
Loops

@item
Exception handling

@item
Method calls

@item
Blocks

@item
Method definition

@item
Class definition

@item
Module definition

@item
Multilingualization

@end itemize

@item BUILT-IN LIBRARIES

@itemize
@item
Well-used built-in classes and modules (e.g., Object, Numerical classes,
String, Array, Hash, Kernel, Enumerable, Comparable)

@end itemize

@item OBJECT ORIENTATION

@itemize
@item
Polymorphism

@item
Inheritance

@item
mix-in

@end itemize
@end itemize

@c _____________________________________

@node Certified Ruby Programmer Gold version 2.1
@appendixsubsubsec Ruby Association Certified Ruby Programmer Gold version 2.1

This is a certification of a deeper understanding of the topics covered under
Silver certification (syntax, object oriented programming, embedded libraries,
operating environments, etc.) in addition to knowledge of the standard Ruby
libraries and knowledge related to classes and objects required for Ruby
application design.

@subheading Scope

@itemize

@item
EXECUTION ENVIRONMENT

@itemize
@item
Command line options

@item
Pre-defined variables and constants

@end itemize

@item
SYNTAX

@itemize
@item
Variables and constants Operators

@item
Blocks

@item
Exceptions

@item
Non local exit

@item
Keyword arguments

@item
lambda

@end itemize

@item
OBJECT-ORIENTED PROGRAMING

@itemize
@item
Details of Method

@item
Access control

@item
Details of Class

@item
Class inheritance

@item
Details of modules

@item
Module#prepend

@item
Refinements

@end itemize

@item
BUILT-IN LIBRARIES

@itemize

@item
Well-used built-in classes and modules 
（e.g., Object, Module, Kernel, Enumerable, Comparable）

@item
Numeric

@item
Regular expression

@item
Proc

@item
Thread/Fiber

@end itemize

@item
STANDARD LIBRARY

@itemize

@item
Well-used standard libraries（e.g., socket, date, stringio）

@end itemize
@end itemize


@c _____________________________________

@node  Certified Ruby Programmer Platinum
@appendixsubsubsec Ruby Association Certified Ruby Programmer Platinum

Under development


@c .....................................

@node Study Materials
@appendixsubsec Study Materials

@itemize
@item
@url{https://www.ruby.or.jp/assets/images/en/certification/exam_prep_en.pdf,
Ruby Association official prep test}

@item
@url{https://github.com/ruby-association/prep-test/blob/master/silver.md, New
prep test for the Silver exam}

@item
@url{http://shop.oreilly.com/product/9780596516178.do, The Ruby Programming
Language}

@item
@url{http://ruby-doc.com/docs/ProgrammingRuby/, Programming Ruby}

@end itemize



@c -----------------------------------------------------------------------------

@node Programming Ruby by Hulan
@appendixsec Programming Ruby by Hulan
@cindex Programming Ruby by Hulan

@cite{Programming Ruby}@mybibcite{ProgrammingRuby}

@noindent
By Marek Hulán, Marek Jelen, Ivan Nečas, Version 0.2 September 25, 2017.




@c -----------------------------------------------------------------------------

@node Ruby Basics
@appendixsubsec Ruby Basics
@cindex basics

@c _____________________________________

@node Installation - Running - About
@appendixsubsubsec Installation - Running - About

@subheading Installation on Mac OS
@cindex install on macOS
@cindex macOS, install

The simplest way to install Ruby on macOS is to use homebrew package manager:

@example
$ brew install ruby
@end example

In case there is a need to have multiple installations @command{rbenv}
(@pxref{rbenv}) is a good tool to use.  Another popular tool is called
@command{rvm} (@pxref{RVM} but nowadays they do too much magic and we recommend
using @command{rbenv} instead.

@subheading Running Ruby
@cindex @command{rbenv}

Usually you put @command{ruby} and related commands on @env{PATH} so you do not
need to always specify the whole path to the executable.  With tools like
@command{rbenv} this is done for you.

@example
$ ruby script.rb
@end example

@subsubheading Interactive Ruby
@cindex @command{irb}

Ruby comes with an interactive interpreter called @command{irb}
(@pxref{Interactive Ruby}), which allows you to enter commands and see results
instantly.

@example
$ irb
@end example

@subheading About Ruby

@table @b
@item Interpreted
The Ruby code is interpreted when the script is load, there is no compile
phase.

@item Universal
Ruby can be used for writing scripts, one-liners, web applications and even for
mobile and desktop applications.

@item Fully Object oriented
In Ruby everything is an object and you send messages to those objects.

@item Everything Is An Expression
Everything command in Ruby has a return value.

@item Atomic memory management

@item MRI
@cindex @file{MRI}
@cindex @file{JRuby}
@cindex @file{Rubinius}
@cindex @file{IronRuby}
@cindex @file{MagLev}
@cindex @command{mruby}
@dfn{MRI} (``Matz's Ruby Interpreter'') (aka @file{CRuby}) is the Ruby
reference implementation, with several other implementations like @file{JRuby},
@file{Rubinius}, @file{IronRuby} or @file{MagLev}.  As well, there is ISO
standard implemented in @command{mruby}.

@cindex YARV
@cindex KRI
@item YARV
Starting with Ruby 1.9, and continuing with Ruby 2.x and above, the official
Ruby interpreter has been YARV (``Yet Another Ruby VM'').  @dfn{YARV} is a
bytecode interpreter that was developed for the Ruby programming language by
Koichi Sasada.  The goal of the project was to greatly reduce the execution
time of Ruby programs.  Since YARV has become the official Ruby interpreter for
Ruby 1.9, it is also named KRI (Koichi's Ruby Interpreter), in the same vein as
the original Ruby MRI, named for Ruby's creator Yukihiro Matsumoto.

@cindex typed strongly
@item Strongly Typed
There are some implicit conversions (e.g. every object has @code{to_s} method
to provide string representation) but in most cases in case you try to operate
on different types Ruby will complain, unless such operation is explicitly
provided.

@cindex typed dynamically
@item Dynamically Typed
The type of a variable is defined by the value assigned to that variable.  There
is no explicit type information in the code.

@item What is written in Ruby?
@itemize
@item
@cindex compilers in Ruby
@cindex @file{LessJS} compiler
programming languages: Ruby (@file{Rubinius}),
@item
compilers (@file{LessJS})
@item
@cindex web applications
web applications: Github, Gitlab, Redmine, BaseCamp
@item
@cindex devops tools
devops tools: Puppet/Chef/Vagrant
@item
@cindex cloud platforms
@cindex OpenShift cloud platform
cloud platforms: OpenShift (v2)
@item
@cindex cloud management
cloud management: Foreman, ManageIQ
@item
@cindex Emacs
VIM/Emacs scripts
@item
@cindex @file{Jekyll}
@cindex static page generators
static pages generators - @file{Jekyll}
@item
programming tools
@end itemize
@end table

@c _____________________________________

@node Language Conventions
@appendixsubsubsec Language Conventions
@cindex conventions

@subsubheading Class Names

Class names are in ``CamelCase''

@subsubheading File Names

File names reflect class names in ``snake_case'' format

@subsubheading Method Names

method names are also ``snake_case''

@subsubheading Constants

constants are in UPPER_SNAKE_CASE

@subsubheading Indentation

indent by 2 spaces

@subsubheading Boolean Values

methods returning boolean values end with @kbd{?} (question mark)

@subheading Mutation

methods mutating state end with @kbd{!} (exclamation mark)

@c _____________________________________

@node Data Types
@appendixsubsubsec Data Types
@cindex data types

In Ruby everything is an object, including arrays or numbers.  However there are
special syntax shorthands to create instances of special classes.

@subheading Strings
@cindex string class, creating

String are create by quoting the characters.

@subheading Numbers
@cindex number classes

Ruby has two basic number classes @file{Fixnum} and @file{Float}.

@subheading Empty Value @code{nil}
@cindex @code{nil}
@cindex empty value
@cindex boolean false
@cindex false

Special value that represents ``nothing'' is @code{nil}.

In a boolean expression, @code{nil} is considered @code{false}, i.e. it’s only
of two possible values that are not considered @code{true}.

@subheading Boolean
@cindex boolean type

There is either @code{true} or @code{false}.

@subheading Arrays
@cindex array type

An @dfn{Array} is an ordered sequence of values.  There are no restrictions on
what types can be in a single array.

@example
["a", 1, true] # => ["a", 1, true]
@end example


@subheading Hashes
@cindex hash type

A @dfn{Hash} is a structure that maps keys to a values.

@example
@{"a" => true, "b": false@} # => @{"a"=>true, :b=>false@}
@end example

@subsubheading Hash Styles
@cindex rocket style hash
@cindex json style hash
@cindex hash styles
There are two approaches how to write the mapping, either @dfn{rocket} style:
@samp{key => value} or @dfn{json} style: @samp{key: value}.

@subsubheading @code{Rocket} Style Preferred

However with the @code{json} style the value is converted to symbol, so in case
you need to use String or some other type, or get the name of the key from a
variable, you need to use the @code{rocket} style.  Several well-known coding
guidelines recommend (and enforce) using @code{rockets} everywhere.

@subheading Symbols
@cindex symbol type

@dfn{Symbol} is a keyword.  It always maps to the same object instance.

@c _____________________________________

@node Methods and Variables
@appendixsubsubsec Methods and Variables
@cindex methods
@cindex dot
@cindex variables

@subheading Methods

Methods are called using the ``dot'' operator.

Operators are actually methods.

@example
3 + 3 # => 6
3.+(3) # => 6

[1,2][0] #=> 1
[1,2].[](0) # => 1
@end example

@subheading Variables
@cindex global variable
@cindex class variable
@cindex instance variable
@cindex local variable
@cindex constant

@table @b
@item Global
@dfn{Global variables} are prefixed with @kbd{$}.

@item Class
Classes have @dfn{class variables} prefixed with @kbd{@@@@}.

You should prefer @code{@@instance_variables} in class-level methods, as they
have more predicatable behavior.

@item Instance
Objects have @dfn{instance variables} prefixed with @kbd{@@}.

@item Local
@dfn{Local variables} are simple identifiers with no prefix.

@item Constant
@dfn{Constants} are in all UPPER_CASE.

@end table

@c _____________________________________

@node Conditions
@appendixsubsubsec Conditions

Everything is @code{true} except @code{false} (and @code{nil}).

@code{if} and @code{unless} (@code{if}'s negative)

@subheading Modifier Statements
@cindex modifier statements
@cindex inline conditional

Ruby has inline method of using conditionals called @dfn{modifier statements}.

@example
puts "Hello" if true
puts "Hello" unless false
@end example

@subheading Ternary Operator

@samp{experssion ? 'was evaluated true' : 'was evaluated false'}

@subheading Case Statement
@cindex @code{case} statement

Another way to do conditions is to use @code{case} statement.

@example
case input
  when 'q', 'e'
    quit
  when 'f'
    format
  else
    help
end
@end example

@code{case} statement can also check on a variable's @code{class}.

@example
case var
  when String
    "it's string"
  when Class
    "it's class"
  when Number
    "it's number"
end
@end example

Another way to use the @code{case} statement is to use it as @code{if} and
@code{elsif}.

@example
case
  when a == "a"
    "a equals a"
  when b == "b"
    "b equals b"
end
@end example

@c _____________________________________

@node A Few Logical Operators
@appendixsubsubsec A Few Logical Operators
@cindex logical operators

@subheading Logical Expressions
@cindex logical expressions
@cindex and
@cindex or
@cindex not

@table @b

@item and
@code{&&}
@code{and}

@item or
@code{||}
@code{or}

@item not
@code{!}
@code{not}

@end table

@subheading Comparison Operators
@cindex comparison operators
@cindex equal
@cindex not equal
@cindex less than, less than or equal
@cindex greater than, greater than or equal
@cindex match, regular expression
@cindex regular expression match

@table @b

@item equal
@code{==}

@item not equal
@code{!=}

@item less than
@code{<}

@item greater than
@code{>}

@item less than or equal
@code{<=}

@item greater than or equal
@code{>=}

@item regular expression match
@code{=~}

@end table

@c _____________________________________

@node Regular Expressions
@appendixsubsubsec Regular Expressions
@cindex regular expressions
@cindex @code{match} method

Regular expression literals are enclosed between @code{/@dots{}/}:@*
@samp{string =~ /(.)*:(.)+/ # sets $1 a $2}.

String has a @code{match} method:@* @samp{data = string.match(/^(.):(\d+)$/) #
sets data[1] and data[2]}.

@c _____________________________________

@node Loops
@appendixsubsubsec Loops
@cindex loops
@cindex while
@cindex until

@table @code

@item while
repeats as long as the condition is true.

@example
while a < b
  a += 1
end

# do loop at least once
begin
  a += 1
end while a < b

a += 1 while a < b # inline loop
@end example

@item until
repeats as long as a condition is false

@example
until a > b
  a += 1
end
@end example

@end table

@c _____________________________________

@node Methods
@appendixsubsubsec Methods
@cindex methods, return value
@cindex @code{return} keyword

@subheading Method Return Value

Methods always return a value.  If a method does not explicitly return using
the @code{return} keyword, then the return value is the value of the last
expression.
 
@subheading Method Arguments
@cindex arguments

@example
def mth1(a, b=1) # argument default value
end

def meth2(*args) # accepts multiple arguments in Array @code{args}
end

def meth3(a, b, *args) # must have at least 2 arguments
end
@end example

@c _____________________________________

@node Using Code From Other Files
@appendixsubsubsec Using Code From Other Files

@table @code

@cindex @code{require}
@cindex load path
@cindex @code{$LOAD_PATH}
@cindex @code{$:}
@item require
Loads code from another file.  Ruby keeps track of required files (in the
@code{$"} global variable) and skips loading files that would be loaded 2nd
time.

Files are looked up using Ruby’s @dfn{load path}, which is represented using an
array in @code{$LOAD_PATH} and @code{$:}.

@cindex @code{load}
@item load
loads code from another file, but does not keep track of loaded files.

@end table

@subheading Allowed Extensions
@cindex extensions that can be omitted

The following file extensions can be omitted:

@samp{rb, so, o, dll, bundle, jar}

@c _____________________________________

@node Blocks
@appendixsubsubsec Blocks
@cindex blocks
@cindex @code{call} method

Blocks are not executed when defined, but have to be called through the
@code{call} method (though the calling of the @code{call} method is most of the
time hidden).

@cindex @code{each} method
Arrays have a method called @code{each} that accepts a block and calls the block
for every single element in the array.

@example
arr = [1,2,3,4]
arr.each do |el|
  puts el
end

# alternative syntax
arr.each @{ |el| puts el @}

@end example

@subheading Block Scope
@cindex block scope

Blocks have access to their enclosing environment, and create their own
scope internally.

@subheading Yield Statement
@cindex @code{yield}

Any method can accept a block and call it using @code{yield}.

@example
def mth
  return nil unless block_given?
  yield
end
@end example

This method will return @code{nil} if no block was given or will call the block
without any argument and the return value of the block will be return from the
method.

@subheading Block Arguments Using Prefix @code{&}

Method may also accept blocks using a named argument which is prefixed by
@code{&}.

@example
def mth(num, &block)
  block.call(num)
end
@end example

@c _____________________________________

@node Objects
@appendixsubsubsec Objects

Everything is an object.  Even a class is an instance of @file{Class}.  Objects
can have methods (@code{def}) and instance variables (@code{@@}).

@subheading Attributes
@cindex attributes
@cindex @code{attr_reader}
@cindex @code{attr_writer}
@cindex @code{attr_accessor}

To allow instance variables to be accessible from outside their defining class,
define them using @dfn{attributes}.

@example
class Hello
  attr_reader :one
  attr_writer :two
  attr_accessor :three
end
@end example

@c _____________________________________

@node Inheritance
@appendixsubsubsec Inheritance
@cindex inheritance
@cindex object inheritance
@cindex overridden method
@cindex @code{super}

Ruby has single @dfn{object inheritance}.  All methods, including constructors,
are inherited.  Methods can be @dfn{overridden} in children.  @code{super}
keyword is used to call the overridden method.

@example
class A
  def a
    "hello"
  end
end

puts A.new.a # => hello

class B < A
end

puts B.new.a # => hello

class C < A
  def a
    super + " world"
  end
end

puts C.new.a # => hello world
@end example

@subheading Class Variables
@cindex class variables

Class variables should not be used ``because of some pitfalls in their
inheritance.''

@c _____________________________________

@node Modules
@appendixsubsubsec Modules
@cindex modules

@dfn{Modules} are a way to organize your classes in a similar fashion to
namespaces.  Classes can be included into modules or into other classes.

@example
class A
  class B
  end
end

module Some
  class Thing
  end
end
@end example

@subheading Mixins
@cindex mixins
@cindex multiple inherance using mixins

Modules are used as @dfn{mixins} to provide a form of multiple inheritance.
When module is included in a class, all methods defined in that module are
available in the class as instance methods.

@example
module Helper
  def something
  end
end

class An
  include Helper
end

A.new.something
@end example

@cindex @code{extend}
When a module is used with @code{extend}, the methods are included as class
methods.

@example
module Helper
  def something
  end
end

class A
  extend Helper
end

A.something
@end example

@c _____________________________________

@node Method Access
@appendixsubsubsec Method Access
@cindex method access
@cindex @code{public}
@cindex @code{protected}
@cindex @code{private}

By default methods are @code{public}, but methods can be made explicitly
@code{protected} or @code{private}.

@example
class A
  def public_method
  end

  protected

  def protected_method
  end

  private

  def private_method
  end
end
@end example

@c _____________________________________

@node Duck Typing
@appendixsubsubsec Duck Typing
@cindex duck typing

@dfn{Duck typing} is coding by behavior rather than identify.

@example
class Hunter
  def shoot(animal)
    animal.respond_to?(:quack) && bang!
  end
end
@end example

If an animal ``quacks'', then it will be shot like a duck.

@c _____________________________________

@node Exceptions
@appendixsubsubsec Exceptions
@cindex exceptions

@dfn{Exceptions} represent a special state in the execution of a program.  When
an @code{exception} is raised, it will ``bubble up'' (rise through) the stack
until it is ``caught''.

@subheading @code{raise} And @code{rescue} Exceptions
@cindex @code{raise}

@cindex @code{raise}
Exceptions are explicitly raised using the @code{raise} keyword: @samp{raise
"This is not expected"}.

@cindex @code{rescue}
@cindex @code{ensure}
@cindex @file{StandarError} class
On the other hand when an exception needs to be caught, a code block can be
extended with a @code{rescue} statement that is called when an exception is
caught and optionally with an @code{ensure} block that is called after both
exceptional and non-exceptional states.  Unless an exception class is specified
explicitly after the @code{rescue} keyword, the @file{StandardError} class and
it’s ancestors are rescued.

@example
begin
  raise "This is not expected"
rescue => e
  puts e.message
ensure
  puts "always"
end
@end example

@subheading Inherit From @file{StandardError}
@cindex @file{Exception} class
@cindex @file{StandardError} class

Don’t inherit directly from an @file{Exception} class; instead, use
@file{StandardError}.  The direct descendants of @file{Exception} are usually
exceptions one doesn't want to rescue from, such as @file{SystemExit} or
@file{NoMemoryError}.


@c .....................................

@node Advanced Ruby
@appendixsubsec Advanced Ruby
@cindex advanced

@c _____________________________________

@node Return Values
@appendixsubsubsec Return Values
@cindex return values

In Ruby everything is an expression --- it executes and returns some value, the
result of it’s execution.  For example:

@example
5 + 2        # @result{} 7

"hello"      # @result{} "hello"

"a" if true  # @result{} "a"
"a" if false # @result{} nil

class A; end # @result{} ???
@end example

@cindex result
What is the result of the last expression?  It could be obvious --- ``we
defined class A''.  But not really.  The fact we have defined a class is only
an effect of the expression; not the result.  A @dfn{result} is a value
returned from the expression itself.

@example
class A; end # @result{} nil
@end example

The result is simply @code{nil}.  It’s similar to the expression @samp{"a" if
false # @result{} nil} above.  The condition is evaluated as @code{false} and
there is no @code{else} so there is nothing to return, so the result is
@code{nil}.  In this case a class was defined, but there was nothing returned,
as the body of the class was empty, so the result is @code{nil}.  Let’s modify
the example to return a value:

@example
class A; 1; end          # @result{} 1
class A; 1; "hello"; end # @result{} "hello"
class A; self; end       # @result{} A
@end example

It was said that ``the return value of a method is the result of it’s last
expression.''  It’s obvious that in this example it’s very similar.  It can
be generalized for all structures, even though sometimes it may not be obvious
on first sight:

@quotation
The return value is the result of the last expression.
@end quotation

@c _____________________________________

@node Context
@appendixsubsubsec Context
@cindex context
@cindex current object

@subheading Context: Current Context

In Ruby everything is executed in some context.  This @dfn{context} is known as
the @dfn{current object} and is always represented by @code{self}.

@example
self.class # @result{} Object

class B
  self
end
# @result{} Class

class A
  def call
    self
  end
end

A.new.call # @result{} #<A:some number>
@end example

@c _____________________________________

@node Class
@appendixsubsubsec Class

@subheading Open Classes: Monkey Patching
@cindex monkey patching

Unlike most languages, Ruby classes are open for modifications.  Developers can
modify behavior of classes defined by frameworks or Ruby itself.  This
technique is called @dfn{monkey patching}.

@example
class Clazz
  def call
    "A"
  end
end

class Clazz
  def call
    "B"
  end
end

Clazz.new.call # @result{} "B"
@end example

@subheading What Is A Class?

Let’s start with a definition:

@cindex @file{Class}
@quotation
Classes are instances of class @file{Class}.
@end quotation

Everything in Ruby is an object @dots{} even a class.

@example
class A
  def self.call
    "A"
  end
end

B = Class.new
def B.call
  "called"
end

A.call      # @result{} "called"
B.call      # @result{} "called"

A.object_id # @result{} [some number]
B.object_id # @result{} [some number]

A.class     # @result{} Class
B.class     # @result{} Class
@end example

Class @code{A} was defined using the @code{class} keyword and then a class
method was defined.  Class @code{B} was created by creating a new instance of
the @file{Class} class and the object was assigned to constant @code{B}.  As
both of those classes are objects, it’s possible to check their class and the
ID of the objects.

@subheading Inheritance
@cindex inheritance

In Ruby classes can inherit from each other, though Ruby has only single-class
inheritance --- it’s not possible to inherit from multiple classes, only from
one.

@example
class A
  def call
    "called"
  end
end

class B < A
end

C = Class.new(B)

B.new.call # @result{} "called"
C.new.call # @result{} "called"
@end example

@subheading Mixins
@cindex mixins
@cindex Module
@cindex loopup path

When some class needs to inherit from multiple classes, it’s not possible, but
Ruby provides a workaround through mixins.  It is possible to include many
Modules into a class; the methods defined in those modules will become part of
the lookup path as if they were defined in the class.

@example
module Methods
  def call
    "called"
  end
end

class A
  include Methods
end

A.new.call # @result{} "called"
@end example

@subheading Class Introspections
@cindex introspection

Ruby allows many introspections on classes and many other objects.

@subsubheading @code{name}
@cindex @code{name}

There is method @code{name} defined on a class that returns the name of the
current class.

@example
Array.name    # @result{} "Array"

[].class.name # @result{} "Array"
@end example

@subsubheading @code{methods}
@cindex @code{methods}

It’s possible to list methods of an object:

@example
class A
  def call
  end
end

A.new.methods # @result{} array of methods
@end example

@c _____________________________________

@node Advanced Methods
@appendixsubsubsec Advanced Methods
@cindex methods

As everything else in Ruby even methods are instances of class @file{Method}.

@subheading Extracting Methods

Sometimes it is useful to pass around only a method instead of the whole
object.  Ruby allows extraction of a method for later usege.

@example
class A
  def call(arg1)
    self
  end
end

meth = A.new.method(:call) # @result{} #<Method: A#call>
@end example

In the example method @code{call} from class @code{A} was @dfn{extracted}.  The
method is still bound to the instance of class @code{A} and the method will be
evaluated in the context of the object (@code{self} will be the instance).  The
method can be executed by calling the @code{call} method with appropriate
arguments.

@example
meth.call("some string") # @result{} #<A:some_number>
@end example

@subheading Checking Method Existence
@cindex behavior
@cindex response to method

Because Ruby is a very dynamic language, it’s not possible to know in advance
what kind of arguments will be received.  In most cases the developer should not
care what class the argument is, but whether the argument responds to a method.

@subheading Duck Typing
@cindex duck typing

@quotation
Do not care what the object is; only care whether it behaves as expected.
@end quotation

This technique is called ``Duck typing.''

@example
class A
  def call
  end
end

a = A.new
a.respond_to?(:call) # @result{} true
a.respond_to?(:wtf)  # @result{} false
@end example

@subheading Dynamic Method Calling

Let’s define a class with a method, create an instance and call the method.

@example
class A
  def call
  end
end

A.new.call
@end example

The method is called, but the develeoper had to know the name of the method
beforehand @dots{} in the time the code is written.  What if the method name is not
known and there has to be some method called.  Do not be surprised; this is a very
common use-case in Ruby.

@example
class A
  def call(arg1)
  end
end

a = A.new
a.call("some string")
a.send(:call, "some string")
@end example

@cindex @code{send} method
Well, not so identical.  When you use the @code{send} method on an object, you
effectively bypass the access modifiers.

@subheading Access Modifiers

Ruby has three access levels; @code{public} is default, @code{protected} and
@code{private}.

@example
class A
  def public_method
  end

  protected

  def protected_method
  end

  private

  def private_method
  end

end

a = A.new
a.public_method           # @result{} nil
a.protected_method        # @result{} NoMethodError: protected method `protected_method' called ...
a.private_method          # @result{} NoMethodError: private method `private_method' called ...
a.send(:public_method)    # @result{} nil
a.send(:protected_method) # @result{} nil
a.send(:private_method)   # @result{} nil
@end example

@subheading Defining methods programmatically
@cindex define a method programatically
@cindex @code{define_method}

The way to define methods using the @code{def} keyword shown before is not the
only one.  It’s also possible to define a method in a more dynamic way.  It
makes sense.  We can inspect methods of an object, we can extract methods of an
object and also call methods of an object in a dynamic way.  To dynamically
define a method use the @code{define_method} method of a class.

However, @code{Class.define_method} is private.  To get around this obstacle,
it’s possible to use the @code{send} method and bypass the access modifier.

@example
class A
end

a = A.new

logic = Proc.new do
  "data"
end

A.send(:define_method, :some_method_name, logic)
a.some_method_name # @result{} "data"
@end example

@subheading Missing Methods
@cindex @code{method_missing}

Every object can define special @code{method_missing} method that is called
whenever there is a call to undefined method on that object.

@example
class A
  def method_missing(name, *args, &block)
    puts "method #@{name@} called with args #@{args.inspect@}"
  end
end

A.new.something("a") # @result{} method something called with args ["a"]
@end example

@c _____________________________________

@node Advanced Objects
@appendixsubsubsec Advanced Objects
@cindex objects
@cindex state, object
@cindex behavior, class

Objects complement classes:

@quotation
Objects define state while classes define behavior.
@end quotation

Behavior is defined as a class; then an object is created for that class to
hold the state.  Every object has to be of some class.

@subheading Creating A New Object
@cindex object, create
@cindex @code{new} method

To create an object of a class there is the @code{new} method on respective
class.

@example
class Dog
end

dog = Dog.new
@end example

@subheading Defining Methods
@cindex method, define

In the example above many methods were defined in simple or more fancy
styles.  But let’s get back to the core and try to define a method.

@example
class A
  def call
  end
end
@end example

Here we use @code{def} keyword to define a method call.  Where will @code{def}
define the method?  The answer is simple and complex.

@quotation
@code{def} defines methods into the nearest class.
@end quotation

@cindex current context
So in the previous example the nearest class is @code{A}.  That is obvious from
next example where the current context is returned and inspected:

@example
var = class A; self; end

var.class # @result{} Class
var.name  # @result{} "A"
@end example

@cindex class method
OK, so the the current context is a Class and thus it is obvious that the
nearest class is this class.  Now let’s try to define a class method:

@example
class A
  def self.call
    "string"
  end
end
@end example

Where will Ruby define the method now??  It is a bit more complicated.  To
understand this, we have to explain something else first.

@subheading Eigenclass
@cindex eigenclass

To understand how Ruby works, we have to understand what @dfn{eigenclasses}
are. Let’s start with simple definition:

@quotation
Every object in Ruby has it's own eigenclass => an instance of Class
@end quotation

@cindex method lookup
Why is this important?  Because, while the eigenclasses are basically
invisible to developers, they take an important part in method lookups.

When Ruby is trying to look up a method, it follows a basic chain (will be
described a bit later). What is important is that before the class the object
is linked to, there is the one more class --- the object’s eigenclass.  Every
single object in Ruby has it’s own eigenclass and because Classes are objects as
well, eigenclasses has their own eigenclasses as well.

@quotation
The closest class to an object is not it's class but it's eigenclass.
@end quotation

Back to the example we were talking about:

@example
class A
  def self.call
    "string"
  end
end
@end example

To see it more clearly we can rewrite this example identically as:

@example
class A
end

def A.call
  "string"
end
@end example

These two expressions are identical.  To understand why it is important to
understand this:

@example
class A
end

scope = class A
  self
end

A == scope # @result{} true
@end example

But back to the original question @dots{} where is the method going to be
defined?  In the context of the instance of the class @code{A}.  The important
part in the above statement is the phrase @emph{instance of}.  What is the
closest class to an instance (object)?  As stated above it’s its eigenclass.
Now you might have guessed that from implementation point of view:

@cindex class method
@quotation
There are no class methods in Ruby
@end quotation

@cindex eigenclass
@strong{What would be called a class method is only an instance method defined
on the eigenclass associated with object representing the class.}

So eigenclass is some stealth object that we can not see?  Not really.  Ruby has
ways to access eigenclasses.

@example
eigenclass = class << some_object
  self
end

eigenclass = some_object.singleton_class
@end example

@cindex eigenclass, access
Now that we can access eigenclasses, let’s see how we could define ``class
methods'' (instance methods in the eigenclass).

@example
class A
  def self.call
    "called"
  end
end

class B
  class << self
    def call
      "called"
    end
  end
end

D = Class.new
class << D
  def call
    "called"
  end
end
@end example

All those examples are identical.

@subheading Method Lookups
@cindex method lookups

Now that you know where and how are methods defined, lets see how methods are
looked up.  Let’s see how the class hierarchy looks for class:

@example
SomeClass -> Class -> Module -> Object -> BasicObject
@end example

and for objects

@example
object -> SomeClass -> Object -> BasicObject
@end example

Though in reality it is a bit more complex.

@cindex eigenclass
@quotation
Eigenclasses are not visible as classes of objects.
@end quotation

@example
o1 = Object.new

def o1.meth
  "string"
end

o1.meth  # @result{} "string"
o1.class # @result{} Object

o2 = Object.new

o2.meth  # @result{} undefined method `meth`
o2.class # => Object
@end example

This example shows that having two instances of same objects.  Both can behave
differently because in the case of @code{o1} the method is stored in the eigenclass,
that is not accessible by @code{o2}.

@cindex eigenclass
@quotation
Eigenclasses are used when a specific behavior of an object is expected.
@end quotation


@c .....................................

@node Ruby Testing
@appendixsubsec Ruby Testing
@cindex testing

Writing automated tests for code is essential.  The Ruby community emphasizes
it and most projects are well covered.  A TDD is also popular among rubyist.

@c _____________________________________

@node Testing Frameworks
@appendixsubsubsec Testing Frameworks
@cindex testing frameworks

Today the @i{de facto} standard is to use the
@url{https://github.com/seattlerb/minitest, Minitest} testing framework.  You
can see @url{http://rspec.info,RSpec} still being used too, but @file{Minitest}
already offers the same capabilities and more.  Both can be easily used for
TDD.  For BDD there’s the popular ecosystem called
@url{https://cucumber.io,Cucumber} which started as a Ruby gem but quickly
evolved into a polyglot tool.

@c _____________________________________

@node Minitest
@appendixsubsubsec Minitest
@cindex @file{Minitest}
@cindex test syntax forms

Th syntax you can see in tests can be in two forms.  Either something we call
@file{Testunit} (aka @code{junit}) or @code{spec} that was taken from
@file{Rspec}.  The internal implementation is the same for both and it’s mostly
a matter of taste.  Tests are regular ruby scripts that test other scripts.
Test are usually to be found in the @file{test/} directory, and the file name
should reflect test class defined inside, e.g. @file{morse_coder_test.rb}.

@subheading @file{Testunit} Syntax
@cindex @file{Testunit}
@cindex syntax, @file{Testunit}

@example
require 'minitest/autorun'
require 'morse_coder.rb'

class MorseCoderTest < Minitest::Test
  def setup
    @@coder = MorseCoder.new(...)
  end

  def test_encode_for_single_letters
    assert_equal ".-", @@coder.encode "a"
    assert_equal "-...", @@coder.encode "b"
  end
end
@end example
@file{Minitest::Test}

A test class should inherit from @file{Minitest::Test} so test helpers
(assertions) are available.  Testing methods must start with @code{test_}.
Other methods are regular methods that can be used from testing methods,
e.g. to build some fixtures.

@cindex @code{setup}
@cindex @code{teardown}
There are a few method names with special meaning.  In the example you can see
a method with th name @code{setup}.  This method gets automatically executed
before every testing method.  Similarly there’s a @code{teardown} method that
get’s executed after each testing method.  It’s usually used for cleaning up
any mess the testing method created.

@subheading Assertions
@cindex assertions

@code{skip()}
One testing method can contain more than one assertion.  The first assertion
failure stops the method being run and marks the test as a failure (F).  If
method raises an exception the result of the test is marked as an error (E).
If all assertions defined in the method pass, the test succeeds (.).  If you
plan to implement the test later you can skip the test by calling @code{skip("Sorry,
I’m lazy")}.

The simplest assertion is one testing a boolean value:

@example
assert @@something
@end example
@code{assert}
@code{refute}

This will succeed if @code{@@something} is considered @code{true}, but fail
otherwise.  The negative form is @code{refute}, e.g. the following would pass:
@samp{refute false}.

You could obvisouly add tests like assert @samp{@@something == 'that I expect'}
but it would generate very generic messages on failures.  You can specify
custome message by passing extra argument like this:

@example
assert @@something == 'that I expect', '@@something does not match expected
string'
@end example

but it’s always better to use assert helper that matches the use-case
best.  The following example demonstrates how to check equality of two values; the
failure message would automatically include information about what
@@something is and what it was expected to be.

@example
assert_equal @@something, 'that I expect'
@end example

Useful @code{assert} helpers are listed in the example below.  All of them can
be found in the
@url{http://docs.seattlerb.org/minitest/Minitest/Assertions.html,Minitest
documentation.}

@float Table,AssertionHelpers
@table @code
@item assert arg
@code{arg} is @code{true}
@item refute arg
@code{arg} is @code{false}
@item assert_equal
@code{expected, actual}
@item assert_includes
@code{collection, object}
@item assert_kind_of
@code{class, object}
@item assert_nil
@code{object}
@item assert_match
@code{expected, actual}
@item assert_raises
@code{exception_class, &block}
@end table
@caption{Table of Assertion Helpers}
@end float

@subheading Spec Syntax
@file{Spec} Syntax
@cindex TDD

Subjectively better structured, less repeating, more readable and TDD
supporting syntax can be used.  See the following example.

@example
require 'minitest/autorun'
require 'morse_coder.rb'

describe MorseCoder do
  let(:coder) @{ MorseCoder.new(...) @}

  describe 'single letters encoding' do
    let(:a) @{ coder.a @}
    let(:b) @{ coder.b @}

    specify @{ a.must_equal '.-' @}
    specify @{ b.must_equal '-...' @}
  end
end
@end example

@code{describe} block
@code{before}
@code{let}
@code{specify}
@code{must_$assert}
@code{wont_$assert}
@code{describe} block wraps logical block.  Each such block can have it’s own
@code{before} (aka @code{setup}).  With @code{let} we define a method that can
be called later within any nested block.  @code{let} is lazy.  @code{specify}
accepts a block that uses assertion helpers in form of @code{must_$assert} or
@code{wont_$assert}.  There are many other extensions to this language so it
reads more naturally.

Note that since the implementation is the same, you can combine both at the
same time.

@subheading Output Of Test Run

@example
Run options: --seed 25127

# Running tests:

..S.....F........

Finished tests in 101.524752s, 6.4319 tests/s, 9.0618 assertions/s
63 tests, 92 assertions, 1 failures, 0 errors, S skips

  1) Failure:
TestConnector#test_connection [./connector.rb:5]:
  Expected: nil
  Actual: "that I expect"
@end example

The seed is random number representing the order of test.  Note that your tests
should be order-independant.

@subheading Running Multiple Test Files

It’s common to have more than just one test file in project.  To run all tests
at once we can use @file{Rake}.  Usually tests are put in @file{test} directory
in the project tree structure.  In such setup we can easily define test tasks
in a @file{Rakefile}.  @file{Rake} provides a  built-in class for this; we just
need to configure it.  Just put following into your @file{Rakefile}:

@example
require 'rake/testtask'

Rake::TestTask.new do |t|
  t.libs << 'test'
  t.test_files = Dir.glob('test/**/*_test.rb')
  t.verbose true
end
@end example

We can run @command{rake test} which will load a run all ruby scripts with
@code{_test} suffix in the test directory including all of its subdirectories.
If you prefer @code{test} to be the default @command{rake} task, add following
to the @file{Rakefile}:

@example
task :default => [ :test ]
@end example

Now you can run all tests just by running @command{rake}.

Another common practise is to have one file that is loaded at start, usually
named @file{test_helper.rb}.  This file contains everything that is needed for
all tests, like requiring additional testing libraries.  You can also put
@command{require minitest/autorun} there.  Just note that you need to
@command{require 'test_helper'} as first line of every test file.

@subheading Test Coverage
@cindex test coverage
@cindex @file{simplecov} gem

To get a good overview of what needs test coverage it’s useful to
setup code coverage check.  A @file{simplecov} gem can generate an HTML
report.  Just put the following on top of your @file{test_helper.rb}:

@example
require 'simplecov'
SimpleCov.start
@end example

you can also define a minimum coverage in percents:

@example
SimpleCov.minimum_coverage 95
@end example

@cindex coverage report
@cindex @file{coverage}
Now when you run your test suite, a new directory called
@file{coverage} will be created.  See @file{coverage/index.html} for
details how well your code is covered with tests.


@subheading Stubbing
@cindex stubbing

Sometimes we don’t want to call the entire method chain when we test
--- just a single method behavior.  This applies especially in unit
testing where we test just small piece of code.  Since Ruby is a
dynamic language, it’s easy to cut off some methods.  This is called
@dfn{stubbing} (leaving stubs).

Let’s look at the following example:

@example
class TemperatureMeter
  def measure(output)
    temp = rand(21) + 20
    output.puts temp
    temp
  end
end
@end example

The test covering this should call the method @code{measure} and
verify it returns a reasonable temperature.  We don’t want our test to
print anything to @env{STDOUT}.  We can stub out @code{puts} method
easily like this:

@example
def test_measure
  meter = TemperatureMeter.new
  STDOUT.stub(:puts, nil) do
    result = meter.measure(STDOUT)
    assert_kind_of Fixnum, result
    assert_includes 20..40, result
  end
end
@end example

With this stubbing, the @code{puts} method is replaced by a new empty
method that returns the second argument, in this case @code{nil}.  The
stub is applied only within the stub block.

@subheading Mocking
@cindex mocking
@cindex @code{mock} object
@cindex expectations

Mocking is related to stubbing.  Imagine we wanted to check that a
@code{measure} method really called @code{puts} on the output object.
The method is written in a way that it accepts a custom output object,
which makes testing easy.  We can simply pass any object that
implements the method @code{puts}, e.g. a file handler, socket or our
own testing object.  Or we can use @code{mock}.  @code{Mock} is a
blank object on which we can define expectations.

For example we can create a @code{mock} instance and specify that its
method @code{puts} should be called exactly once during the test.

@example
def test_measure_print_the_value
  meter = TemperatureMeter.new
  mock = Minitest::Mock.new
  mock.expect(:puts, nil, [20..40])
  result = meter.measure(mock)
  mock.verify
end
@end example

The first @code{expect} argument is the name of the method to be
called, the second is the return value, and the third is the array
containing arguments which the @code{puts} should be called.

You could also stub the @code{rand} method to return let’s say 0 and
then setup an expectation that @code{mock}’s @code{puts} method will
receive 20 as a parameter to print.  But the range also works so the
@code{mock} accepts any value between 20 and 40.

You have to call verify on @code{mock} so it runs assertions on how
many times the expected method was called.  To expect another call of
@code{puts}, just define new expectation with @code{.expect}.

@subheading Stubbing Network Calls
@cindex network calls, stubbing
@cindex stubbing network calls

If your app communicates with external services over HTTP you most
likely need to fake the communication in your test suite.  Reasons
include performance, spamming of remote services, avoiding credentials
leaks, error state testing.  Constructing the whole net/http response
object can be complicated.  Luckily there are tools that can help you
greatly.

@subsubheading @file{webmock} Gem
@cindex @file{webmock} gem

First is the @file{webmock} gem.  It provides helpers to stub low-level methods
easily.  To use it, install the gem and just add following to your tests.

@example
require 'webmock/minitest'
stub_request(:get, 'www.example.com')
First is the
Net::HTTP.get('www.example.com', '/') # this will succeed
@end example

You can also specify more conditions to match the request as well as the return
value:

@example
stub_request(:post, 'www.example.com').with(:body => 'ping').to_return(:body =>
  'pong')
@end example

@cindex @file{Restclient} gem
Custome headers can be added too.  @file{Webmock} works with high level
libraries such as the popular @file{Restclient} gem.

@subsubheading @file{vcr}
@cindex @file{vcr}

Another useful tool is @file{vcr}.  The name was chosen because of analogy
with videocassette recorder.  It can record a real network communication and
replay it later.  This can be nicely used in tests.  You only record the
communication once during writing tests and replay it while running tests in
the future or on a CI server.  You can have multiple communications recorded
and just swap cassettes for each test.  Example follows:

@example
require 'vcr'

VCR.configure do |config|
  config.cassette_library_dir = "fixtures/vcr_cassettes" # storage for cassetes
  config.hook_into :webmock				 # webmock integration
end

class VCRTest < Minitest::Test
  def test_example_dot_com
    VCR.use_cassette("success_info") do
      response = Net::HTTP.get_response(URI('http://www.example.com/'))
      assert_match /Example Domain/, response.body
    end
  end
end
@end example

@c _____________________________________

@node Testing Web Applications
@appendixsubsubsec Testing Web Applications
@cindex test web applications
@cindex web applications, test
@cindex @file{capybara} gem
@cindex @file{RackTest}
@cindex @file{rack}

If you work on web applications, you can also easily test the interaction like
users will interact through web browser.  This is useful when you write
integration tests.  A de facto standard is the @file{capybara} gem that
provides drivers for various browser backends.  The simplest driver to setup is
@file{RackTest}, so you can start with it as long as your app uses @file{rack}.

@file{Selenium} driver
@file{Firefox}
@file{Poltergeist} driver
@file{PhantomJS}
If you need advanced stuff like testing pages with asynchronous requests
through AJAX you can use @file{Selenium} driver which runs @file{Firefox} in
headless mode.  If you want to run such tests on CI server without X11 server,
there’s @file{Poltergeist} driver using @file{PhantomJS}.

An example of simple test, supposing @file{my_app.rb} contains
@file{rack}-based app (e.g. using @file{Sinatra}).

@example
require 'minitest/autorun'
require 'capybara/dsl'
require './my_app.rb'

Capybara.app = MyApp
Capybara.default_driver = :rack_test

class MyAppTest < Minitest::Test
  include Capybara::DSL

  def test_index
    visit '/'
    click_link 'login'
    fill_in('Login', with: 'Marek')
    fill_in('Password', with: 'secret')
    click_button('Submit')

    assert page.has_selector('div p.success')
    assert page.has_content?('Welcome Marek')
  end

  def teardown
    Capybara.reset_sessions!
    Capybara.use_default_driver
  end
end
@end example

@c _____________________________________

@node Cucumber
@appendixsubsubsec Cucumber
@cindex @file{Cucumber}
@cindex BDD

We can use the @file{Cucumber} framework for testing using the BDD aproach.  It
allows us to write the behavior specification in a natural language style first
and then convert it to tests step-by-step.  Imagine you’d describe a feature
like this:

@example
Feature: logout of logged in user

  Scenario: User can log out from app
    Given I'm logged in as user ares
      And I'm on host list page
    When I click logout link
    Then I should see logout notification
@end example

@cindex feature
It’s a valid @file{cucumber} test (aka feature) which only needs implementing
those steps, using @file{capybara} for example.

@example
Given(/^I'm logged in as user (.*)$/) do |user|
  visit '/'
  fill_in "login", with: user
  fill_in "password", with: 'testpassword'
  click_button 'login'
end

Given(/^I'm on (.*) (.*) page$/) do |resource, action|
  visit "/#@{resource@}/#@{action@}"
end

When(/^I click (.*) link$/) do |identifier|
  click_link identifier
end

Then(/^I should see logout notification$/) do
  assert page.has_content 'div p.logout_notification'
end
@end example

One advantage that it brings is, that your tests are live documentation too.








@c *****************************************************************************

@node Utility Programs
@appendix Utility Programs
@cindex utility programs

Here are some utility programs that I either found or created.




@c -----------------------------------------------------------------------------

@node Ruby Eval Utility
@appendixsec Ruby Eval Utility
@pindex eval.rb

@xref{RubyEval}

@url{http://www.rubyist.net/~slagell/ruby/eval.txt, @file{eval.rb}}

@cindex @command{rbeval}
@quotation
@b{NOTE:} This program's original name is @file{eval.rb}.  However, there is a
name conflict with @file{eval}.  In order to allow this program to be run as an
executable while sitting in the @file{bin} directory, I need to change its name
to soemthing other than @file{eval}.  Of course, @file{eval.rb} would work, but
I would like a simple name without an extension.  Therefore, I am using
@command{rbeval} as a compromise.  This is handled by @code{@@post_create} when
creating an executable in the @file{bin} directory.  The original file will be
moved into @file{src} with its original @file{eval.rb} intact.
@end quotation

@(eval.rb@)=
#! /usr/local/bin/ruby

#######################################################
#
# Ruby interactive input/eval loop
# Written by matz           (matz@netlab.co.jp)
# Modified by Mark Slagell  (slagell@ruby-lang.org)
#    with suggestions for improvement from Dave Thomas
#                           (Dave@Thomases.com)
#
#######################################################
#
# NOTE - this file has been renamed with a .txt extension to
# allow you to view or download it without the rubyist.net
# web server trying to run it as a CGI script.  You will
# probably want to rename it back to eval.rb.
#
#######################################################

module EvalWrapper

  @<eval---EvalWrapper--Constants@>

  @<eval---EvalWrapper--Indentation Deltas@>

  # On exit, restore normal screen colors.
  END {  print Norm,"\n" }

  ##############################################################
  # Execution starts here.
  ##############################################################
 
  indent=0
  while true   # Top of main loop.

    @<eval---Main--Get Line@>
    @<eval---Main--Process Line@>

  end          # Bottom of main loop
  print "\n"

end # module
@

@post_create eval.rb chmod +x eval.rb && mv eval.rb src/ && ln src/eval.rb bin/rbeval

@c .....................................

@node eval Module Code
@appendixsubsec @file{eval.rb} Module Code

@<eval---EvalWrapper--Constants@>=

# Constants for ANSI screen interaction.  Adjust to your liking.

Norm   = "\033[0m"
PCol   = Norm           # Prompt color
Code   = "\033[1;32m"   # yellow 
Eval   = "\033[0;36m"   # cyan 
Prompt = PCol+"ruby> "+Norm
PrMore = PCol+"    | "+Norm
Ispace = "   "          # Adjust length of this for indentation.
Wipe   = "\033[A\033[K" # Move cursor up and erase line
@


@c .....................................

@node eval Indentation Deltas Code
@appendixsubsec @file{eval.rb} Indentation Deltas Code

@<eval---EvalWrapper--Indentation Deltas@>=
# Return a pair of indentation deltas. The first applies before
# the current line is printed, the second after.

def EvalWrapper.indentation( code )
  case code

  when /^\s*(class|module|def|if|case|while|for|begin)\b[^_]/
    [0,1]      # increase indentation because of keyword

  when /^\s*end\b[^_]/
    [-1,0]     # decrease because of end

  when /\{\s*(\|.*\|)?\s*$/
    [0,1]      # increase because of '{'

  when /^\s*\}/
    [-1,0]     # decrease because of '}'

  when /^\s*(rescue|ensure|elsif|else)\b[^_]/
    [-1,1]     # decrease for this line, then come back

  else
    [0,0]      # we see no reason to change anything

  end # case
end # def
@


@c .....................................

@node eval Main Get Line Code
@appendixsubsec @file{eval.rb} Main Get Line Code

@<eval---Main--Get Line@>=
# Print prompt, move cursor to tentative indentation level, and get
# a line of input from the user.

if( indent == 0 )
  expr = ''; print Prompt  # (expecting a fresh expression)

else
  print PrMore             # (appending to previous lines)

end

print Ispace * indent,Code
line = gets
print Norm
@


@c .....................................

@node eval Main Process Line Code
@appendixsubsec @file{eval.rb} Main Process Line Code

@<eval---Main--Process Line@>=
@<eval---Main--Process Line-If Not Line@>

@<eval---Main--Process Line-Is Line@>
@

@c _____________________________________

@node eval If Not Line Code
@appendixsubsubsec @file{eval.rb} If Not Line Code

@<eval---Main--Process Line-If Not Line@>=
if not line
  # end of input (^D) - if there is no expression, exit, else
  # reset cursor to the beginning of this line.

  if expr == '' then break else print "\r" end
@

@c _____________________________________

@node eval If Is Line Code
@appendixsubsubsec @file{eval.rb} If Is Line Code

@<eval---Main--Process Line-Is Line@>=
else

  # Append the input to whatever we had.
  expr << line

  @<eval---Main--Process Line-Is Line_Indentation@>

  @<eval---Main--Process Line-Is Line_Worth Evaluating?@>

end # if not line
@

@c #####################################

@subheading ### Indentation ###

@<eval---Main--Process Line-Is Line_Indentation@>=
# Determine changes in indentation, reposition this line if
# necessary, and adjust indentation for the next prompt.

begin
  ind1,ind2 = indentation( line )
  if( ind1 != 0 )
    indent += ind1
    print Wipe,PrMore,(Ispace*indent),Code,line,Norm
  end
  indent += ind2

rescue      # On error, restart the main loop.
  print Eval,"ERR: Nesting violation\n",Norm
  indent = 0
  redo

end # begin
@

@c #####################################

@subheading ### Something Worth Evaluating? ###

@<eval---Main--Process Line-Is Line_Worth Evaluating?@>=
# Okay, do we have something worth evaulating?

if (indent == 0) && (expr.chop =~ /[^; \t\n\r\f]+/)

  begin
    result = eval(expr, TOPLEVEL_BINDING).inspect
    if $!  # no exception, but $! non-nil, means a warning
      print Eval,$!,Norm,"\n"
      $!=nil
    end
    print Eval,"   ",result,Norm,"\n"

  rescue ScriptError,StandardError
    $! = 'exception raised' if not $!
    print Eval,"ERR: ",$!,Norm,"\n"
  end

  break if not line

end # if
@


@c .....................................

@node @file{eval.rb} Post Create
@appendixsubsec @file{eval.rb} Post Create
@cindex @code{@@post_create} @file{eval.rb}

The following line is executed after @command{jrtangle} runs.

@verbatim
 @post_create eval.rb chmod +x eval.rb && mv eval.rb src && ln src/eval.rb bin/rbeval
@end verbatim

@post_create eval.rb chmod -v +x eval.rb && mv -vf eval.rb src && ln -vf src/eval.rb bin/rbeval


@c -----------------------------------------------------------------------------

@node API Utility
@appendixsec API Utility

The purpose of this little utility is to assist with the construction of the
API tables; that is, it will help insert @code{@@item} labels, and perhaps
assist with constructing @acronym{URL}'s if I am lucky.  I am writing it using
the @file{GAWK} programming language to refresh my knowledge of @file{AWK} (and
get to know @file{GAWK}'s extra features).

@(apiutil.awk@)=
#! /usr/bin/env gawk -f

@<apiutil---BEGIN Block@>
@<apiutil---BEGINFILE Block@>
@<apiutil---MAIN Block@>
@<apiutil---ENDFILE Block@>
@<apiutil---END Block@>

@


@c .....................................

@node @file{apiutil.awk} BEGIN Block
@appendixsubsec @file{apiutil.awk} BEGIN Block

@<apiutil---BEGIN Block@>=
BEGIN {
  @<apiutil---BEGIN--Variable Defns@>
  @<apiutil---BEGIN--Ord Function Init@>
}

@


@c .....................................

@node @file{apiutil.awk} BEGNFILE Block
@appendixsubsec @file{apiutil.awk} BEGINFILE BLOCK

This will allow this filename to be changed a little more easily.

@<apiutil---BEGINFILE Block@>=
BEGINFILE {
  newfile = FILENAME".new"
}

@


@c .....................................

@node @file{apiutil.awk} MAIN Block
@appendixsubsec @file{apiutil.awk} MAIN Block

@<apiutil---MAIN Block@>=
##############
# MAIN BLOCK #
##############

# pass through whatever is not in a target table
started == 0 { print > newfile }

@<apiutil---MAIN Block--Main Loop@>


########################
# FUNCTION DEFINITIONS #
########################

@<apiutil---MAIN Block--Ord Function Defn@>
@<apiutil---MAIN Block--Convert Symbols Function Defn@>

##################
# END MAIN BLOCK #
# ################

@

@subheading Main Loop Variable Definitions

I will define the main loop variables first.  The variables @code{start} and
@code{end} hold regular expression strings that target the two tables I want to
process.  The variable @code{started} flags whether the code is inside a table
(1) or not (0).

@<apiutil---BEGIN--Variable Defns@>=
start = "^@float Table,table:api-.*$"
end   = "^@end table$"
started = 0

@

@subheading Main Outer Loop Definitions

The @code{MAIN} block does two things: passes over unchanged whatever is not
inside a target table, and processes the contents of a target table.  It uses
the flag @code{started} to pass through the beginning and ending lines
basically unchanged as well@footnote{In fact one line is added at the end of
the table to account for better style}.

@<apiutil---MAIN Block--Main Loop@>=

# process whatever is in between the 'start' and 'end' of a table
$0 ~ start, $0 ~ end {

  # Upon first entering a table, set the 'started' flag true (1)
  if (started == 0) {
    started = 1
    next
  }

  @<apiutil---MAIN Block--Main Loop-Inside@>
}

@

@subheading Preliminary and Post Processing of the Inside of a Table

Once inside the main loop, do some preliminary processing and checking.  Make
sure @code{@@} signs are properly escaped, and ignore the @code{@@table} line.
Also check for the end of the table, add a newline, and reset the
@code{started} flag.

@<apiutil---MAIN Block--Main Loop-Inside@>=

# ignore the @table line
if ($0 ~ /^@table/) {
  print $0 > newfile
  next
}

# at the end of a table, add an empty line for better style
# and turn off the 'started' flag
if ($0 ~ end) {
  print "\n"$0 > newfile
  started = 0
  next
}

# make sure any special symbols are properly escaped
gsub(/@/, /@@/)

@

@subheading Main Processing Loop Definition

The real work is done on lines that are in the middle of the tables.  There is
first a regular expression check to make sure something that is not a
@file{Texinfo} command (which begin with @code{@@}) is on the line because some
lines are empty and are just ignored;

@<apiutil---MAIN Block--Main Loop-Inside@>=
# process lines with content
if ($0 ~ /^[CM]?[[:graph:]]+.*$/) {

  @<apiutil---MAIN Block--Main Loop-Inside_Processing@>
  # ignore empty lines
} else {
  print > newfile
}

@

@subheading Inside the Main Processing Loop

After it finds a non-empty, non-command line, @file{GAWK} parses it into the
array @code{arr} using the function @code{match}.  This regexp is fairly busy.
There are many parentheses because several parts of the regexp are optional,
requiring an extra set around the optional parts, and extra parentheses are
required to strip away a parenthesized word (ironically).  The optional
sections are marked by question marks (@kbd{?}s).

The first part of each line contains a marker indicating what kind of element
the thing is.  In the @code{Classes} table, the marker is either a @code{C} or
an @code{M}.  In the @code{Methods} table, the marker is either a pair of colons
(@kbd{::}) or a hash (@kbd{#}).

@subsubheading Explanation of the main regexp

The main entry from either table is obtained by grabbing everything that is not
a right parenthesis (@kbd{(}) or a space.  In the @code{Class} table, this is
everything on the line.  In the @code{Method} table, this is everything up
until the parenthesized class name in which the method is defined.  Likewise,
this parenthesized class is obtained by grabbing everything up until the
closing parenthesis.

Finally, each parsed parenthesized regexp is inserted into the array @code{arr}
and available for use after the parsing.

@enumerate
@item
@code{arr[1]}: Identification of either @code{class} or @code{method}; it will contain
one of @kbd{C}, @kbd{M}, @kbd{::}, or @kbd{#}.
@item
@code{arr[2]}: Main entry; it will contain the name of a class (for the @code{Class}
table, or the name of a method (for the @code{Method} table).
@item
@code{arr[3]}: ignored parenthesized class (optional)
@item
@code{arr[4]}: a method's @code{class} (optional); it will contain the name of the
class within which a method is defined.
@end enumerate

@<apiutil---MAIN Block--Main Loop-Inside_Processing@>=
cm = match($0, /([CM]|[:#]+)?([^( ]+)(\s\(([^)]+)\))?/, arr)

# for debugging
# print "1-"(arr[1])"-2-"(arr[2])"-3-"(arr[3])"-4-"(arr[4])"|"

@

@subheading Variable Definitions

When parsing the lines of text obtained from copying the library page, the
initial letters and symbols can be translated into meaningful words using
the hash @code{classmethod}.

@<apiutil---BEGIN--Variable Defns@>=
classmethod["C"]  = "Class"
classmethod["M"]  = "Module"
classmethod["::"] = "Class Method"
classmethod["#"]  = "Instance Method"

@

Additionally, a method's designator can be used to help form URL's pointing
to the method definition.

@<apiutil---BEGIN--Variable Defns@>=
methid["::"] = "-c-"
methid["#"]  = "-i-"

@

@subheading Stitching Together the Parts

Once the parsing has been completed, the parts are stitched together
and printed with appropriate commands surrounding them, i.e.,
@code{@@item} or @code{@@code}, etc.

The variable @code{itemurl} will be used to stitch together the URL that
will be the main @code{@@item} content; it begins with the base url as defined
in the BEGIN block:

@<apiutil---BEGIN--Variable Defns@>=
baseurl = "http://ruby-doc.org/core-2.5.1/"

@

@code{baseurl} starts the @code{itemurl} definition:

@<apiutil---MAIN Block--Main Loop-Inside_Processing@>=
itemurl = (baseurl)

@

@subsubheading Processing the @code{arr} Array

The additional parts of the array @code{arr} will be added to @code{itemurl} to
create a complete and linkable URL into Ruby's core library pages.

The code now continues processing the @code{arr} array parts.  If
@code{arr[4])} exists, then the code is currently processing the @code{Method}
table, and since the parts are different than the @code{Class} table, it must
differentiate between them.

@code{arr[4]} will be empty for a @code{Class} table element, and so it can be
reformatted somewhat for a @code{Method} table element by placing its contents
inside a @code{@@code} format.

The @code{Method} links require most symbols to be hexadecimal equivalents of
their ASCII code number.  Therefore, I made a function called
@code{convertsymbols()} that will iterate over a method name and convert any
symbols (with the exception of the underscore) into hexadecimal ASCII,
separated by dashes.  When this name is inserted into the URL, it links
directly to the proper method inside the class documentation.

@<apiutil---MAIN Block--Main Loop-Inside_Processing@>=
if (length(arr[4]) > 0) {

  #process the Method table
  method = arr[2]
  class  = arr[4]
  gsub(/::/, "/", class)
  methwsymbols = convertsymbols(method)

  itemurl = "@item @url{"(itemurl)(class)".html#method"(methid[arr[1]])(methwsymbols)","(method)"}"
  detail  = "@code{"(class)(arr[1])(method)"} ("(classmethod[arr[1]])")"

} else {
  # process the Class table
  class = arr[2]

  itemurl = "@item @url{"(itemurl)(class)".html,"(arr[2])"}"
  detail  = (classmethod[arr[1]])
}

@

@subsubheading Printing the Table Items

The code is printing a @code{@@table} element, and it contains both
an @code{@@item} column and a detail column.

@<apiutil---MAIN Block--Main Loop-Inside_Processing@>=
print itemurl > newfile
print detail  > newfile

@


@c .....................................

@node @file{apiutil.awk} ENDFILE Block
@appendixsubsec @file{apiutil.awk} ENDFILE Block

@<apiutil---ENDFILE Block@>=
ENDFILE {
  system("mv -v "FILENAME" "FILENAME".bak && mv -vi "FILENAME".new "FILENAME)
}

@


@c .....................................

@node @file{apiutil.awk} END Block
@appendixsubsec @file{apiutil.awk} END Block

@<apiutil---END Block@>=
END {
  print "All done"
}
@




@c -----------------------------------------------------------------------------

@node @file{apiutil} Ord Function
@appendixsubsec @file{apiutil} Ord Function

I need to turn symbols (like @kbd{=} and @kbd{+}) into their hexadecimal
numbers inside @code{Method} URL links.  I found this @command{ord} function in
@file{GAWK}'s documentation.  @xref{Ordinal Functions,,,gawk,GAWK}.  It
consists of an initialization segment, in which a hash of symbols and their
corresponding ASCII codes is assembled, and a function that, given either an
@code{ord} number or a @code{char} symbol, returns the opposite.  I will put
the initialization code into the @code{BEGIN} segment, and the function
definition into the @code{MAIN} block.

@subheading The @command{ord} Function Initialization Segments

The @code{_ord_init()} initialization function is called from the BEGIN
block, but is defined at the bottom of the MAIN block along with the
other @code{ord} functions.

@<apiutil---BEGIN--Ord Function Init@>=
# initialize the _ord_ and _chr_ function's ASCII symbol table
_ord_init()

@

@<apiutil---MAIN Block--Ord Function Defn@>=

# initialize the ASCII symbol table
#
function _ord_init(       low, high, i, t) {
  low = 0
  high = 127
  for (i = low; i <= high; i++) {
    t = sprintf("%c", i)
    _ord_[t] = i
  }
}

@

@subheading The @command{ord()} and @command{chr()} Function Definitions

@<apiutil---MAIN Block--Ord Function Defn@>=
# the 'ord()' function: given a symbol, return its ASCII number
#
function ord(str,       c) {
  c = substr(str, 1, 1)
  return _ord_[c]
}

# the 'chr()' function: given an ASCII number, return its symbol
#
function chr(c) {
  return sprintf("%c", c + 0)
}

@




@c -----------------------------------------------------------------------------

@node @command{convertsymbols()} Function Definition
@appendixsubsec @command{convertsymbols()} Function Definition

This function, @command{convertsymbols()}, takes a method name and converts all
symbols in the following ranges into their hexadecimal equivalents:

@itemize
@item
ASCII 0x20 (@key{SP}) and ASCII 0x2f (@kbd{/})
@item
ASCII 0x3a (@kbd{:}) and ASCII 0x40 (@kbd{@@})
@item
ASCII 0x5b (@kbd{[}) and ASCII 0x5e (@kbd{^})
@item
ASCII 0x7b (@kbd{@{}) and ASCII 0x7e (@kbd{~})
@end itemize

@<apiutil---MAIN Block--Convert Symbols Function Defn@>=
# the 'convertsymbol()' function: given a method name, convert symbols
# into hexadecimal separated by dashes
#
function convertsymbols(meth,\
  converted, low1, high1, low2, high2, low3, high3, low4, high4, c, f, i, o) {

  # ASCII ranges to look for
  low1  = 0x20 # SP
  high1 = 0x2f # /
  low2  = 0x3a # :
  high2 = 0x40 # @
  low3  = 0x5b # [
  high3 = 0x5e # ^ (leave _ alone)
  low4  = 0x7b # {
  high4 = 0x7e # ~

  # this flag places dashes between symbols
  dash = 0
  f[1] = "-"

  # this will hold the converted name
  converted = ""

  # iterate over the characters in 'meth', converting the symbols
  for (i = 1; i <= length(meth); i++) {
    c = substr(meth, i, 1)

    # this is a decimal number internally, but is converted to hexadecimal
    # by the "%x" format string
    o = ord(c)

    if ( (o >= low1 && o <= high1) ||
         (o >= low2 && o <= high2) ||
         (o >= low3 && o <= high3) ||
         (o >= low4 && o <= high4) ) {

      # do not place a dash if a symbol is the first character
      converted = (converted)(sprintf("%s%X", f[dash], o))

    } else {
      converted = (converted)(c)
    }

    if (dash == 0) { dash = 1 }
  }

  return converted
}

@




@c -----------------------------------------------------------------------------

@node apiutil Makefile Target
@appendixsubsec apiutil Makefile Target

Add a target for running @file{apiutil.awk} in the Makefile.  Note that the
directory @file{./bin} is created in the @code{@@initial_setup} environment
(@pxref{Initial Setup}) and is made executable by a @code{@@post_create}
command (@pxref{Post Create}), both of which were added by the @file{TexiwebJR}
program.

@<Makefile---Utility Targets@>=
# apiutil.awk
#############
.PHONY : apiutil
apiutil : 
	bin/apiutil.awk Ruby2_5.twjr

@








@c *****************************************************************************

@node Initial Setup and Post Create
@appendix Initial Setup and Post Create

TexiwebJr has a couple of new utility commands for working with files:

@itemize
@item
@code{@@initial_setup}
@item
@code{@@post_create}
@end itemize




@c -----------------------------------------------------------------------------

@node Initial Setup
@appendixsec Initial Setup

TexiwebJR added a new command @command{@@initial_setup} that executes some
commands in the shell prior to @command{jrtangle} or @command{jrweave}
processing a file.  This can be used to create directories into which the
command @command{@@post_create} can move specified files (@pxref{Post Create}).

Since these commands do not show up in a woven document, I have placed them
into a little @command{@@example} environment here:

@example
@@initial_setup
mkdir -p src
mkdir -p bin
@@end initial_setup
@end example


Set up some directories into which files can be moved, and add a little shell
script to add @file{./bin} to @env{PATH} (but it can only be run from the
command line as @kbd{source setpath.sh}).

@(setpath.sh@)=
#! /usr/bin/env bash
# setpath.sh USAGE 'source setpath.sh'

export PATH=./bin:$PATH

@

@initial_setup
mkdir -p src
mkdir -p bin
@end initial_setup

@post_create setpath.sh chmod +x setpath.sh && mv setpath.sh src/ && ln src/setpath.sh bin/setpath


@c -----------------------------------------------------------------------------

@node Post Create
@appendixsec Post Create

Make @file{apiutil.awk} executable and move it into @file{bin}.  It can be run
either by executing the @command{make} target @samp{apiutil} (as @samp{make
apiutil}) or by running the command from the @file{./bin} directory.  Note that
there is a little shell script that will add @file{./bin} to the @env{path}
environment variable, which must be run ``by hand'' as @samp{source
setpath.sh}.

@verbatim
 @post_create apiutil.awk chmod -v +x apiutil.awk && mv apiutil.awk src && ln -vf src/apiutil.awk bin/apiutil
@end verbatim

@post_create apiutil.awk chmod -v +x apiutil.awk && mv apiutil.awk src && ln -vf src/apiutil.awk bin/apiutil









@c *****************************************************************************

@node The Makefile
@appendix The Makefile
@pindex Makefile

@(Makefile@)=
# MAKEFILE FILE CHUNKS
######################

@<Makefile---Variable Definitions@>

@<Makefile---Default Target@>

@<Makefile---TWJR Targets@>

@<Makefile---Utility Targets@>

@<Makefile---Clean Targets@>

@




@c -----------------------------------------------------------------------------


@node Makefile Variable Definitions
@appendixsec Makefile Variable Definitions

@<Makefile---Variable Definitions@>=
# VARIABLE DEFINITIONS
######################
FILE := Ruby2_5
SHELL := /bin/bash

@




@c -----------------------------------------------------------------------------

@node Makefile Default Rule
@appendixsec Default Rule

The @code{default} rule is to create a @acronym{PDF} document and all
@acronym{HTML} files.  This assumes that the @acronym{TEXI} file has been
generated and updated by hand first.  Therefore, the target @code{TWJR} will
run both @command{jrtangle} and @command{jrweave}, while the target
@code{WEAVE} or alternatively @code{TEXI} will run just @command{jrweave} on
the @file{.twjr} file.  Thereafter, you can update the @file{.texi} file and
run the @code{default}.

@<Makefile---Default Target@>=
# DEFAULT Target
################
.PHONY : default TWJR TANGLE WEAVE TEXI INFO PDF HTML
.PHONY : twjr tangle weave texi info pdf html
default : INFO PDF HTML

@




@c -----------------------------------------------------------------------------

@node Makefile TWJR Targets
@appendixsec TWJR Targets

@<Makefile---TWJR Targets@>=
# TWJR TARGETS
##############
TWJR : twjr
twjr : tangle weave

TANGLE : tangle
tangle : $(FILE).twjr
	jrtangle $(FILE).twjr

WEAVE : weave
weave : TEXI
TEXI  : texi
texi  : $(FILE).texi
$(FILE).texi : $(FILE).twjr
	jrweave $(FILE).twjr > $(FILE).texi

INFO : info
info : $(FILE).info
$(FILE).info : $(FILE).texi
	makeinfo $(FILE).texi
openinfo : INFO
	emacs $(FILE).info

PDF : pdf
pdf : $(FILE).pdf
$(FILE).pdf : $(FILE).texi
	pdftexi2dvi --build=tidy --build-dir=build --quiet $(FILE).texi
openpdf : PDF
	open $(FILE).pdf

HTML : html
html : $(FILE)/index.html
$(FILE)/index.html : $(FILE).texi
	makeinfo --html $(FILE).texi
openhtml : HTML
	open $(FILE)/index.html

@




@c -----------------------------------------------------------------------------

@node Makefile Utility Targets
@appendixsec Utility Targets

@<Makefile---Utility Targets@>=
# UTILITY TARGETS
#################
@




@c -----------------------------------------------------------------------------

@node Makefile Clean Targets
@appendixsec Clean Targets

@<Makefile---Clean Targets@>=
# CLEAN TARGETS
###############
.PHONY : clean veryclean dirclean distclean worldclean
clean :
	rm -vf *~ .*~ \#*\#

# clean tex detritus
texclean : clean
	rm -vf *.{dvi,aux,log,toc,cp,cps,pg,pgs}

# remove all dirs except HTML; remove *.{rb,sh} files from toplevel
dirclean : clean
	for file in *; do [ -d $$file ] && [ $${file##$(FILE)*} ] && rm -vfr $$file; done;\
	rm -vf *.{rb,sh}

# remove everything except .twjr, .texi, and Makefile
distclean : dirclean
	for file in *; do [[ $$file =~ twjr|texi|Makefile ]] && : || rm -vrf $$file ; done;

worldclean : distclean
	rm -fr $(FILE).{texi,info*,pdf} $(FILE)/

@








@c *****************************************************************************

@node Code Chunk Summaries
@appendix Code Chunk Summaries

This @value{APPENDIX} presents alphabetical lists of all the file definitions,
the code chunk definitions, and the code chunk references.




@c -----------------------------------------------------------------------------


@node File Definitions
@appendixsec Source File Definitions

@print_file_defs




@c -----------------------------------------------------------------------------

@node Code Chunk Definitions
@appendixsec Code Chunk Definitions

@print_code_defs




@c -----------------------------------------------------------------------------

@node Code Chunk References
@appendixsec Code Chunk References

@print_code_refs








@c *****************************************************************************

@node @mybibnode{}
@unnumbered Bibliography

@table @cite
@mybibitem{ProgrammingRuby}
Marek Hulan, Marek Jalen, Ivan Necas, @cite{Programming Ruby}, @i{Version 0.2}, September
25, 2017.

@end table









@c *****************************************************************************

@node List of Tables
@unnumbered List of Tables

@listoffloats Table








@c *****************************************************************************

@node Concept Index
@unnumbered Index

@printindex cp

@page









@c *****************************************************************************

@node Program Index
@unnumbered Program Index

@printindex pg

@bye

TODO:
